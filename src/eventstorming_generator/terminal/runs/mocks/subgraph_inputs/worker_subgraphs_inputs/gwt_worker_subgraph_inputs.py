from ......models import *

gwt_worker_subgraph_inputs = State(inputs=InputsModel(selectedDraftOptions={'BookManagement': {'boundedContext': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'BookManagement', 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, 'cons': {'cohesion': '상태 변경 이력, 대출/예약 참조 등 다양한 책임이 Book에 집중되어 도메인 역할이 다소 혼재될 수 있음.', 'complexity': '도서 관리와 이력 관리, 대출/예약 참조까지 모두 포함되어 Aggregate가 점차 복잡해질 수 있음.', 'consistency': '상태 변경 이력 등 부가 정보가 많아질수록 트랜잭션 크기가 커질 수 있음.', 'coupling': 'Book이 모든 도서 관련 정보를 직접 관리하므로, 도서 이력이나 확장 요구가 커질 경우 Aggregate가 비대해질 수 있음.', 'encapsulation': '상태 이력 등 부가 기능이 많아질 경우 도메인 규칙의 은닉성이 다소 약화될 수 있음.', 'independence': '이력 관리 등 부가 기능 확장 시 Book Aggregate의 독립성이 저하될 수 있음.', 'performance': '상태 변경 이력 등 부가 정보가 많아질 경우 일부 연산에서 성능 저하 가능성 있음.'}, 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'isAIRecommended': False, 'pros': {'cohesion': '도서의 등록, 상태 변경, 폐기 등 모든 핵심 도서 관리 기능이 Book Aggregate에 집중되어 있어 도메인 응집도가 매우 높음.', 'complexity': '구현 및 이해가 단순하며, 도서별 상태 관리가 한 곳에서 이루어져 개발자 부담이 적음.', 'consistency': '도서 상태와 관련된 비즈니스 불변성이 단일 트랜잭션 내에서 강하게 보장됨.', 'coupling': '대출/예약과의 연동은 ValueObject 참조로만 처리되어 타 컨텍스트와의 결합도가 낮음.', 'encapsulation': '도서의 상태, 대출/예약 참조, 폐기 정보 등 모든 도메인 규칙이 Book 내부에 은닉되어 있음.', 'independence': 'Book Aggregate만으로 도서 관리의 대부분을 처리할 수 있어 타 Aggregate 변화에 영향이 적음.', 'performance': '도서 상태 변경, 폐기 등 주요 연산이 단일 Aggregate에서 처리되어 조회 및 갱신 성능이 우수함.'}, 'structure': [{'aggregate': {'alias': '도서', 'name': 'Book'}, 'enumerations': [{'alias': '도서 상태', 'name': 'BookStatus'}, {'alias': '도서 카테고리', 'name': 'BookCategory'}], 'previewAttributes': ['book_id', 'title', 'isbn', 'author', 'publisher', 'category', 'status', 'registration_date', 'disposal_date', 'disposal_reason', 'created_at', 'updated_at', 'history_id', 'previous_status', 'new_status', 'change_reason', 'changed_by', 'change_date'], 'valueObjects': [{'alias': '대출 참조', 'name': 'LoanReference', 'referencedAggregate': {'alias': '대출', 'name': 'Loan'}}, {'alias': '예약 참조', 'name': 'ReservationReference', 'referencedAggregate': {'alias': '예약', 'name': 'Reservation'}}]}]}, 'LoanAndReservation': {'boundedContext': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'LoanAndReservation', 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, 'cons': {'cohesion': '대출과 예약 간의 상태 전이(예: 반납 시 예약 자동 처리 등) 로직이 Aggregate 간 조정 로직으로 분산될 수 있습니다.', 'complexity': '예약과 대출의 상호작용을 조율하는 추가 서비스 계층이 필요할 수 있습니다.', 'consistency': '예약과 대출이 동시에 변경되어야 하는 복합 트랜잭션의 경우, 분산 트랜잭션 또는 이벤트 기반 보상 로직이 필요할 수 있습니다.', 'coupling': '예약과 대출 간의 상태 동기화가 필요할 때, 두 Aggregate 간의 간접적 연동이 필요하여 구현이 복잡해질 수 있습니다.', 'encapsulation': '예약과 대출의 복합 비즈니스 규칙(예: 예약 우선 순위 반영 등)이 Aggregate 외부에서 처리될 수 있습니다.', 'independence': '예약과 대출의 상호작용이 많을 경우, 완전한 독립성 확보가 어려울 수 있습니다.', 'performance': '예약과 대출 정보를 통합 조회할 때 Aggregate 간 조인 또는 별도 조회가 필요하여 성능 저하가 발생할 수 있습니다.'}, 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'isAIRecommended': False, 'pros': {'cohesion': '대출과 예약이 각각의 Aggregate로 분리되어 각 도메인 책임이 명확하며, 각 Aggregate가 자신의 비즈니스 규칙을 집중적으로 관리할 수 있습니다.', 'complexity': 'Aggregate 수가 적절하여 도메인 복잡도를 효과적으로 관리할 수 있습니다.', 'consistency': '대출, 예약 각각의 트랜잭션 경계가 명확하여 상태 변경 시 원자성을 보장할 수 있습니다.', 'coupling': 'Book, Reservation 간 참조는 ValueObject로 일방향으로만 이루어져 결합도가 낮고, 도서 관리 변경이 대출/예약에 직접적인 영향을 주지 않습니다.', 'encapsulation': '각 Aggregate가 자신의 상태와 행위를 완전히 캡슐화하여 외부에서 내부 구현에 접근할 수 없습니다.', 'independence': '대출과 예약 기능이 독립적으로 진화 및 확장될 수 있어 유지보수성이 높습니다.', 'performance': '대출/예약 각각의 조회 및 변경이 독립적으로 처리되어 동시성 및 성능에 유리합니다.'}, 'structure': [{'aggregate': {'alias': '대출', 'name': 'Loan'}, 'enumerations': [{'alias': '대출 상태', 'name': 'LoanStatus'}], 'previewAttributes': ['loan_id', 'member_id', 'book_id', 'loan_date', 'due_date', 'return_date', 'loan_period_days', 'status', 'extension_count', 'created_at', 'updated_at', 'history_id', 'action_type', 'action_date', 'previous_due_date', 'new_due_date', 'notes', 'processed_by'], 'valueObjects': [{'alias': '도서 참조', 'name': 'BookReference', 'referencedAggregate': {'alias': '도서', 'name': 'Book'}}, {'alias': '예약 참조', 'name': 'ReservationReference', 'referencedAggregate': {'alias': '예약', 'name': 'Reservation'}}]}, {'aggregate': {'alias': '예약', 'name': 'Reservation'}, 'enumerations': [{'alias': '예약 상태', 'name': 'ReservationStatus'}], 'previewAttributes': ['reservation_id', 'member_id', 'book_id', 'reservation_date', 'status', 'notification_sent', 'expiry_date', 'created_at', 'updated_at'], 'valueObjects': [{'alias': '도서 참조', 'name': 'BookReference', 'referencedAggregate': {'alias': '도서', 'name': 'Book'}}]}]}}, userInfo=UserInfoModel(uid='EYCl46CwWAWvpz2E1BCUpVgPIpa2', authorized='admin', consultingTime=0, email='shinseongjin@uengine.org', name='shinseongjin@uengine.org', profile='https://avatars.githubusercontent.com/u/163972132?v=4', providerUid='163972132', savedCoin=0, savedToolTime=0), information=InformationModel(projectId='163972132_es_a4afe53e52e57652bdbd6dac8e734470', author='EYCl46CwWAWvpz2E1BCUpVgPIpa2', authorEmail='shinseongjin@uengine.org', comment='', createdTimeStamp=1758094324928, lastModifiedTimeStamp=1758094324928, projectName='untitled', type='es'), preferedLanguage='Korean', jobId='77a82911-d5dc-f35d-f6a3-9148009681ac'), subgraphs=SubgraphsModel(createAggregateByFunctionsModel=CreateAggregateByFunctionsModel(current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=True, max_retry_count=3, is_failed=False, ddl_extraction_complete=True, ddl_assignment_complete=True, all_ddl_fields=[], total_seconds=6.90495228767395, start_time=1758173890.637599, end_time=1758173897.5425513), createAggregateClassIdByDraftsModel=CreateAggregateClassIdByDraftsModel(draft_options={}, current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=True, max_retry_count=3, is_failed=False, total_seconds=1.3714573383331299, start_time=1758173897.5595543, end_time=1758173898.9310117), createCommandActionsByFunctionModel=CreateCommandActionsByFunctionModel(draft_options={}, current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=True, max_retry_count=3, is_failed=False, assign_event_names_complete=True, total_seconds=2.5311760902404785, start_time=1758173898.9545271, end_time=1758173901.4857032), createPolicyActionsByFunctionModel=CreatePolicyActionsByFunctionModel(draft_options={}, current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=True, max_retry_count=3, is_failed=False, total_seconds=1.0568714141845703, start_time=1758173901.5122695, end_time=1758173902.569141), createGwtGeneratorByFunctionModel=CreateGwtGeneratorByFunctionModel(draft_options={'BookManagement': {'boundedContext': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'BookManagement', 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, 'cons': {'cohesion': '상태 변경 이력, 대출/예약 참조 등 다양한 책임이 Book에 집중되어 도메인 역할이 다소 혼재될 수 있음.', 'complexity': '도서 관리와 이력 관리, 대출/예약 참조까지 모두 포함되어 Aggregate가 점차 복잡해질 수 있음.', 'consistency': '상태 변경 이력 등 부가 정보가 많아질수록 트랜잭션 크기가 커질 수 있음.', 'coupling': 'Book이 모든 도서 관련 정보를 직접 관리하므로, 도서 이력이나 확장 요구가 커질 경우 Aggregate가 비대해질 수 있음.', 'encapsulation': '상태 이력 등 부가 기능이 많아질 경우 도메인 규칙의 은닉성이 다소 약화될 수 있음.', 'independence': '이력 관리 등 부가 기능 확장 시 Book Aggregate의 독립성이 저하될 수 있음.', 'performance': '상태 변경 이력 등 부가 정보가 많아질 경우 일부 연산에서 성능 저하 가능성 있음.'}, 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'isAIRecommended': False, 'pros': {'cohesion': '도서의 등록, 상태 변경, 폐기 등 모든 핵심 도서 관리 기능이 Book Aggregate에 집중되어 있어 도메인 응집도가 매우 높음.', 'complexity': '구현 및 이해가 단순하며, 도서별 상태 관리가 한 곳에서 이루어져 개발자 부담이 적음.', 'consistency': '도서 상태와 관련된 비즈니스 불변성이 단일 트랜잭션 내에서 강하게 보장됨.', 'coupling': '대출/예약과의 연동은 ValueObject 참조로만 처리되어 타 컨텍스트와의 결합도가 낮음.', 'encapsulation': '도서의 상태, 대출/예약 참조, 폐기 정보 등 모든 도메인 규칙이 Book 내부에 은닉되어 있음.', 'independence': 'Book Aggregate만으로 도서 관리의 대부분을 처리할 수 있어 타 Aggregate 변화에 영향이 적음.', 'performance': '도서 상태 변경, 폐기 등 주요 연산이 단일 Aggregate에서 처리되어 조회 및 갱신 성능이 우수함.'}, 'structure': [{'aggregate': {'alias': '도서', 'name': 'Book'}, 'enumerations': [{'alias': '도서 상태', 'name': 'BookStatus'}, {'alias': '도서 카테고리', 'name': 'BookCategory'}], 'previewAttributes': ['book_id', 'title', 'isbn', 'author', 'publisher', 'category', 'status', 'registration_date', 'disposal_date', 'disposal_reason', 'created_at', 'updated_at', 'history_id', 'previous_status', 'new_status', 'change_reason', 'changed_by', 'change_date'], 'valueObjects': [{'alias': '대출 참조', 'name': 'LoanReference', 'referencedAggregate': {'alias': '대출', 'name': 'Loan'}}, {'alias': '예약 참조', 'name': 'ReservationReference', 'referencedAggregate': {'alias': '예약', 'name': 'Reservation'}}]}]}, 'LoanAndReservation': {'boundedContext': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'LoanAndReservation', 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, 'cons': {'cohesion': '대출과 예약 간의 상태 전이(예: 반납 시 예약 자동 처리 등) 로직이 Aggregate 간 조정 로직으로 분산될 수 있습니다.', 'complexity': '예약과 대출의 상호작용을 조율하는 추가 서비스 계층이 필요할 수 있습니다.', 'consistency': '예약과 대출이 동시에 변경되어야 하는 복합 트랜잭션의 경우, 분산 트랜잭션 또는 이벤트 기반 보상 로직이 필요할 수 있습니다.', 'coupling': '예약과 대출 간의 상태 동기화가 필요할 때, 두 Aggregate 간의 간접적 연동이 필요하여 구현이 복잡해질 수 있습니다.', 'encapsulation': '예약과 대출의 복합 비즈니스 규칙(예: 예약 우선 순위 반영 등)이 Aggregate 외부에서 처리될 수 있습니다.', 'independence': '예약과 대출의 상호작용이 많을 경우, 완전한 독립성 확보가 어려울 수 있습니다.', 'performance': '예약과 대출 정보를 통합 조회할 때 Aggregate 간 조인 또는 별도 조회가 필요하여 성능 저하가 발생할 수 있습니다.'}, 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'isAIRecommended': False, 'pros': {'cohesion': '대출과 예약이 각각의 Aggregate로 분리되어 각 도메인 책임이 명확하며, 각 Aggregate가 자신의 비즈니스 규칙을 집중적으로 관리할 수 있습니다.', 'complexity': 'Aggregate 수가 적절하여 도메인 복잡도를 효과적으로 관리할 수 있습니다.', 'consistency': '대출, 예약 각각의 트랜잭션 경계가 명확하여 상태 변경 시 원자성을 보장할 수 있습니다.', 'coupling': 'Book, Reservation 간 참조는 ValueObject로 일방향으로만 이루어져 결합도가 낮고, 도서 관리 변경이 대출/예약에 직접적인 영향을 주지 않습니다.', 'encapsulation': '각 Aggregate가 자신의 상태와 행위를 완전히 캡슐화하여 외부에서 내부 구현에 접근할 수 없습니다.', 'independence': '대출과 예약 기능이 독립적으로 진화 및 확장될 수 있어 유지보수성이 높습니다.', 'performance': '대출/예약 각각의 조회 및 변경이 독립적으로 처리되어 동시성 및 성능에 유리합니다.'}, 'structure': [{'aggregate': {'alias': '대출', 'name': 'Loan'}, 'enumerations': [{'alias': '대출 상태', 'name': 'LoanStatus'}], 'previewAttributes': ['loan_id', 'member_id', 'book_id', 'loan_date', 'due_date', 'return_date', 'loan_period_days', 'status', 'extension_count', 'created_at', 'updated_at', 'history_id', 'action_type', 'action_date', 'previous_due_date', 'new_due_date', 'notes', 'processed_by'], 'valueObjects': [{'alias': '도서 참조', 'name': 'BookReference', 'referencedAggregate': {'alias': '도서', 'name': 'Book'}}, {'alias': '예약 참조', 'name': 'ReservationReference', 'referencedAggregate': {'alias': '예약', 'name': 'Reservation'}}]}, {'aggregate': {'alias': '예약', 'name': 'Reservation'}, 'enumerations': [{'alias': '예약 상태', 'name': 'ReservationStatus'}], 'previewAttributes': ['reservation_id', 'member_id', 'book_id', 'reservation_date', 'status', 'notification_sent', 'expiry_date', 'created_at', 'updated_at'], 'valueObjects': [{'alias': '도서 참조', 'name': 'BookReference', 'referencedAggregate': {'alias': '도서', 'name': 'Book'}}]}]}}, completed_generations=[], pending_generations=[], worker_generations={'dc95ecbe-b66a-4fad-91a3-71dd351ddcaf': GWTGenerationState(target_bounded_context={'name': 'BookManagement', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, target_command_id='74f03d7c-57b6-4356-a3d3-cd92f767e974', target_aggregate_name='Book', description='# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), '15c2dc30-ce7f-45cb-85e7-b797e49d478c': GWTGenerationState(target_bounded_context={'name': 'BookManagement', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, target_command_id='f0037ce9-a1c6-4655-a6eb-506698828527', target_aggregate_name='Book', description='# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), 'f8a76428-d435-4fc2-b2f1-cbd87478451e': GWTGenerationState(target_bounded_context={'name': 'BookManagement', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, target_command_id='63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', target_aggregate_name='Book', description='# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), '271e313f-d57b-46e6-87e3-1d3df5c7bbba': GWTGenerationState(target_bounded_context={'name': 'LoanAndReservation', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, target_command_id='121903fb-a9e7-4515-a0e7-dcae48b2de21', target_aggregate_name='Loan', description='# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), '393e8e08-f709-417f-aee4-f6fcd57f306f': GWTGenerationState(target_bounded_context={'name': 'LoanAndReservation', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, target_command_id='0fdc6d72-735b-4870-bf18-9d18827775b6', target_aggregate_name='Loan', description='# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), 'bda7195b-8d0d-4e8f-a635-2170ffa11978': GWTGenerationState(target_bounded_context={'name': 'LoanAndReservation', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, target_command_id='d206f752-6c54-4d20-b400-d8bde21fb87c', target_aggregate_name='Loan', description='# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), '7d419705-f4f0-4c1f-a989-b1d93d40e557': GWTGenerationState(target_bounded_context={'name': 'LoanAndReservation', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, target_command_id='28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', target_aggregate_name='Reservation', description='# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False)}, current_batch=[GWTGenerationState(target_bounded_context={'name': 'BookManagement', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, target_command_id='74f03d7c-57b6-4356-a3d3-cd92f767e974', target_aggregate_name='Book', description='# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), GWTGenerationState(target_bounded_context={'name': 'BookManagement', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, target_command_id='f0037ce9-a1c6-4655-a6eb-506698828527', target_aggregate_name='Book', description='# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), GWTGenerationState(target_bounded_context={'name': 'BookManagement', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, target_command_id='63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', target_aggregate_name='Book', description='# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), GWTGenerationState(target_bounded_context={'name': 'LoanAndReservation', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, target_command_id='121903fb-a9e7-4515-a0e7-dcae48b2de21', target_aggregate_name='Loan', description='# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), GWTGenerationState(target_bounded_context={'name': 'LoanAndReservation', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, target_command_id='0fdc6d72-735b-4870-bf18-9d18827775b6', target_aggregate_name='Loan', description='# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), GWTGenerationState(target_bounded_context={'name': 'LoanAndReservation', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, target_command_id='d206f752-6c54-4d20-b400-d8bde21fb87c', target_aggregate_name='Loan', description='# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False), GWTGenerationState(target_bounded_context={'name': 'LoanAndReservation', '_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, target_command_id='28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', target_aggregate_name='Reservation', description='# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', summarized_es_value={}, target_command_alias='', retry_count=0, command_to_replace={}, generation_complete=False, is_token_over_limit=False, needs_es_summary=False, es_summary_context='', es_summary_max_tokens=0, es_summary_processing=False, es_summary_complete=False)], parallel_worker_results=[], is_processing=True, all_complete=False, max_retry_count=3, is_failed=False, total_seconds=0.0, start_time=1758246048.44714, end_time=0.0), esValueSummaryGeneratorModel=ESValueSummaryGeneratorModel(is_processing=False, is_complete=False, is_failed=False, context='', keys_to_filter=[], max_tokens=0, token_calc_model_vendor='', token_calc_model_name='', summarized_es_value={}, processed_summarized_es_value={}, element_ids=[], sorted_element_ids=[], retry_count=0, max_retry_count=3), createUiComponentsModel=CreateUiComponentsModel(worker_generations={}, current_batch=[], parallel_worker_results=[], completed_generations=[], pending_generations=[], is_processing=False, all_complete=False, max_retry_count=3, is_failed=False, total_seconds=0.0, start_time=0.0, end_time=0.0)), outputs=OutputsModel(esValue=EsValueModel(elements={'f4a1693c-c71c-4f60-af61-229e83a16e4c': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [{'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 719, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 560, 'x': 600, 'y': 514}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'BookManagement', 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[26, 5], [26, 42]], [[87, 5], [87, 24]]]}, {'fieldName': 'title', 'refs': [[[27, 5], [27, 31]]]}, {'fieldName': 'isbn', 'refs': [[[28, 5], [28, 36]]]}, {'fieldName': 'author', 'refs': [[[29, 5], [29, 32]]]}, {'fieldName': 'publisher', 'refs': [[[30, 5], [30, 35]]]}, {'fieldName': 'category', 'refs': [[[31, 5], [31, 51]]]}, {'fieldName': 'status', 'refs': [[[32, 5], [32, 51]]]}, {'fieldName': 'registration_date', 'refs': [[[33, 5], [33, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[34, 5], [34, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[35, 5], [35, 29]]]}, {'fieldName': 'created_at', 'refs': [[[36, 5], [36, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[37, 5], [37, 77]]]}, {'fieldName': 'history_id', 'refs': [[[86, 5], [86, 45]]]}, {'fieldName': 'previous_status', 'refs': [[[88, 5], [88, 53]]]}, {'fieldName': 'new_status', 'refs': [[[89, 5], [89, 56]]]}, {'fieldName': 'change_reason', 'refs': [[[90, 5], [90, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[91, 5], [91, 27]]]}, {'fieldName': 'change_date', 'refs': [[[92, 5], [92, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리, 폐기 처리를 담당하며 도서의 생애주기와 상태 변화를 관리한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDisposed\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\n도서 테이블\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\n도서 상태 변경 이력 테이블\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 및 예약 (LoanAndReservation)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### BookManagement-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 도서 등록, 폐기 등 도서 상태 변화 이력도 이력 관리 컨텍스트에서 기록할 수 있도록 이벤트를 발행한다.\n- **Interaction Pattern**: 도서 관리에서 도서 등록, 폐기 등 상태 변화 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 상태 변경 이력을 기록한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 등록 시 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받고, ISBN 중복 및 유효성 검증이 완료됨.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ],\n    [\n      [\n        3,\n        105\n      ],\n      [\n        3,\n        128\n      ]\n    ],\n    [\n      [\n        3,\n        136\n      ],\n      [\n        3,\n        161\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상태 변화가 발생하여 도서 상태가 자동 또는 수동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "변경된 도서 상태"\n  ],\n  "nextEvents": [\n    "BookDisposed",\n    "BookLoaned",\n    "BookReturned",\n    "BookReserved"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        238\n      ]\n    ],\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ],\n    [\n      [\n        7,\n        150\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDisposed",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손 또는 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDisposed 이벤트가 발생할 수 있어.', 'siteMap': [{'boundedContext': 'BookManagement', 'description': '현재 보유 도서의 목록과 상태를 조회', 'functionType': 'view', 'id': 'book-list-view', 'name': 'BookListView', 'title': '도서 목록 조회', 'uiRequirements': '도서명, ISBN, 저자, 출판사, 카테고리, 상태(대출가능/대출중/예약중/폐기) 필터 및 검색, 페이징 지원'}, {'boundedContext': 'BookManagement', 'description': '새로운 도서를 등록', 'functionType': 'command', 'id': 'book-create-command', 'name': 'BookCreateCommand', 'title': '도서 등록', 'uiRequirements': "도서명, ISBN(13자리, 중복확인), 저자, 출판사, 카테고리(소설/비소설/학술/잡지) 입력 폼, 등록 시 상태는 '대출가능'으로 설정"}, {'boundedContext': 'BookManagement', 'description': '기존 도서의 정보를 수정', 'functionType': 'command', 'id': 'book-edit-command', 'name': 'BookEditCommand', 'title': '도서 정보 수정', 'uiRequirements': '도서명, 저자, 출판사, 카테고리 등 수정, ISBN은 수정 불가, 상태 변경 불가'}, {'boundedContext': 'BookManagement', 'description': '훼손 또는 분실된 도서를 폐기 처리', 'functionType': 'command', 'id': 'book-dispose-command', 'name': 'BookDisposeCommand', 'title': '도서 폐기 처리', 'uiRequirements': "도서 목록에서 폐기 처리 버튼, 폐기 사유 입력, 폐기 시 상태를 '폐기'로 변경, 폐기 도서는 대출 불가"}, {'boundedContext': 'BookManagement', 'description': '도서별 상태 변경 이력을 조회', 'functionType': 'view', 'id': 'book-status-change-view', 'name': 'BookStatusChangeHistoryView', 'title': '도서 상태 변경 이력 조회', 'uiRequirements': '도서별 상태 변경(대출가능/대출중/예약중/폐기 등) 이력 리스트, 변경일시, 변경자, 변경 사유 표시'}], 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, 'c57e2041-d169-48dc-a32e-f186d6080c6c': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [{'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 719, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 1085, 'x': 1447.0, 'y': 514}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'LoanAndReservation', 'traceName': 'LoanAndReservation', 'displayName': '대출/반납 및 예약', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_a4afe53e52e57652bdbd6dac8e734470', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[46, 5], [46, 38]], [[101, 5], [101, 24]]]}, {'fieldName': 'member_id', 'refs': [[[47, 5], [47, 34]], [[68, 5], [68, 34]]]}, {'fieldName': 'book_id', 'refs': [[[48, 5], [48, 24]], [[69, 5], [69, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[49, 5], [49, 48]]]}, {'fieldName': 'due_date', 'refs': [[[50, 5], [50, 30]]]}, {'fieldName': 'return_date', 'refs': [[[51, 5], [51, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[52, 5], [52, 39]]]}, {'fieldName': 'status', 'refs': [[[53, 5], [53, 50]], [[71, 5], [71, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[54, 5], [54, 31]]]}, {'fieldName': 'created_at', 'refs': [[[55, 5], [55, 49]], [[74, 5], [74, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[56, 5], [56, 77]], [[75, 5], [75, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[67, 5], [67, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[70, 5], [70, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[72, 5], [72, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[73, 5], [73, 29]]]}, {'fieldName': 'history_id', 'refs': [[[100, 5], [100, 41]]]}, {'fieldName': 'action_type', 'refs': [[[102, 5], [102, 63]]]}, {'fieldName': 'action_date', 'refs': [[[103, 5], [103, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[104, 5], [104, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[105, 5], [105, 30]]]}, {'fieldName': 'notes', 'refs': [[[106, 5], [106, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[107, 5], [107, 29]]]}], 'description': '# Bounded Context Overview: LoanAndReservation (대출/반납 및 예약)\n\n## Role\n회원의 도서 대출, 반납, 연장, 예약을 관리하고 도서 상태 변경을 트리거한다.\n\n## Key Events\n- BookLoaned\n- BookReserved\n- BookReturned\n- LoanExtended\n\n# Requirements\n\n## userStory\n\n대출/반납을 통합적으로 관리하는\n\n대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n\n예약\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n\n연장\n\n대출 이력과 상태\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ]\n}\n```\n\n## Context Relations\n\n### BookManagement-LoanAndReservation\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 도서 상태 변경(대출가능, 대출중, 예약중, 폐기 등)이 발생하면 대출/반납 및 예약 컨텍스트에서 이를 구독하여 대출/예약 프로세스에 반영한다.\n- **Interaction Pattern**: 도서 관리에서 도서 상태 변경 이벤트를 발행하면 대출/반납 및 예약 컨텍스트가 이를 구독하여 처리한다.\n\n### LoanAndReservation-LoanHistory\n- **Type**: Pub/Sub\n- **Direction**: sends to 이력 관리 (LoanHistory)\n- **Reason**: 대출, 반납, 연장, 예약 등 이벤트 발생 시 이력 관리 컨텍스트에서 해당 이벤트를 구독하여 이력을 기록한다.\n- **Interaction Pattern**: 대출/반납 및 예약에서 대출/반납/연장/예약 이벤트를 발행하면 이력 관리 컨텍스트가 이를 구독하여 이력 데이터를 생성한다.', 'event': '{\n  "name": "BookLoaned",\n  "displayName": "도서 대출됨",\n  "actor": "Member",\n  "level": 4,\n  "description": "회원이 도서 대출을 신청하고, 회원 인증 및 도서 상태 확인 후 대출이 승인됨. 대출 기간이 설정되고 도서 상태가 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서 식별자",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ],\n    [\n      [\n        5,\n        59\n      ],\n      [\n        5,\n        77\n      ]\n    ],\n    [\n      [\n        5,\n        43\n      ],\n      [\n        5,\n        126\n      ]\n    ],\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReserved",\n  "displayName": "도서 예약됨",\n  "actor": "Member",\n  "level": 5,\n  "description": "회원이 대출 중인 도서에 대해 예약을 신청함. 예약이 완료되면 도서 상태가 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보",\n    "도서 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "ReservationHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 6,\n  "description": "회원이 대출한 도서를 반납함. 반납 시 도서 상태가 \'대출가능\'으로 변경되고, 예약자가 있을 경우 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중",\n    "반납 처리 정보"\n  ],\n  "nextEvents": [\n    "BookStatusChanged",\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        167\n      ]\n    ],\n    [\n      [\n        7,\n        167\n      ],\n      [\n        7,\n        175\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 7,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함. 연장 후 대출 정보와 반납 예정일이 갱신됨.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자",\n    "연장 기간"\n  ],\n  "outputs": [\n    "갱신된 대출 정보",\n    "새 반납 예정일"\n  ],\n  "nextEvents": [\n    "LoanHistoryRecorded"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        124\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookLoaned, BookReserved, BookReturned, LoanExtended 이벤트가 발생할 수 있어.', 'userStory': "대출/반납을 통합적으로 관리하는\n대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할\n예약\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납\n연장\n대출 이력과 상태"}}, '702e22f6-5feb-405a-9a92-bf1dbb15a695': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 26]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 27]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 30]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 46]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'List<BookStatusHistory>', 'isCopy': False, 'isKey': False, 'name': 'statusHistories', 'traceName': 'statusHistories', 'nameCamelCase': 'statusHistories', 'namePascalCase': 'StatusHistories', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': True, 'refs': [[[44, 14], [51, 15]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'266ee095-c338-42f1-aacc-edd2ee7fa636': {'_type': 'org.uengine.uml.model.Class', 'id': '266ee095-c338-42f1-aacc-edd2ee7fa636', 'name': 'Book', 'traceName': 'Book', 'namePascalCase': 'Book', 'nameCamelCase': 'book', 'namePlural': 'books', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 26]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 27]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 30]]], 'inputUI': None, 'options': None}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 46]]], 'inputUI': None, 'options': None}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'inputUI': None, 'options': None}, {'className': 'List<BookStatusHistory>', 'isCopy': False, 'isKey': False, 'name': 'statusHistories', 'traceName': 'statusHistories', 'nameCamelCase': 'statusHistories', 'namePascalCase': 'StatusHistories', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': True, 'refs': [[[44, 14], [51, 15]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '266ee095-c338-42f1-aacc-edd2ee7fa636', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'refs': [[[4, 9], [4, 31]]]}, 'a03f3a1a-c315-49de-85e0-3604b1f4e94b': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'name': 'BookStatusHistory', 'traceName': 'BookStatusHistory', 'displayName': '도서 상태 변경 이력', 'namePascalCase': 'BookStatusHistory', 'nameCamelCase': 'bookStatusHistory', 'namePlural': 'bookStatusHistories', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[45, 5], [45, 41]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- historyId: Integer'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- previousStatus: BookStatus'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 45]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- newStatus: BookStatus'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 29]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeReason: String'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 26]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changedBy: String'}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeDate: Date'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': [[[44, 14], [51, 15]]]}, 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISPOSED', 'traceName': 'DISPOSED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'refs': [[[30, 5], [30, 51]]]}, 'cc0d6d28-facf-4c6f-b76a-55c071300073': {'_type': 'org.uengine.uml.model.enum', 'id': 'cc0d6d28-facf-4c6f-b76a-55c071300073', 'name': 'BookCategory', 'traceName': 'BookCategory', 'displayName': '도서 카테고리', 'nameCamelCase': 'bookCategory', 'namePascalCase': 'BookCategory', 'namePlural': 'bookCategories', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cc0d6d28-facf-4c6f-b76a-55c071300073', 'x': 950, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'NOVEL', 'traceName': 'NOVEL', 'refs': [[[29, 20], [29, 21]]]}, {'value': 'NONFICTION', 'traceName': 'NONFICTION', 'refs': [[[29, 26], [29, 28]]]}, {'value': 'ACADEMIC', 'traceName': 'ACADEMIC', 'refs': [[[29, 33], [29, 34]]]}, {'value': 'MAGAZINE', 'traceName': 'MAGAZINE', 'refs': [[[29, 39], [29, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[29, 5], [29, 46]]]}}, 'relations': {'f781ca27-13ef-4f77-ab36-6d1c1b80581e': {'name': 'BookStatus', 'id': 'f781ca27-13ef-4f77-ab36-6d1c1b80581e', '_type': 'org.uengine.uml.model.Relation', 'sourceElement': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'name': 'BookStatusHistory', 'traceName': 'BookStatusHistory', 'displayName': '도서 상태 변경 이력', 'namePascalCase': 'BookStatusHistory', 'nameCamelCase': 'bookStatusHistory', 'namePlural': 'bookStatusHistories', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[45, 5], [45, 41]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- historyId: Integer'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- previousStatus: BookStatus'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 45]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- newStatus: BookStatus'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 29]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeReason: String'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 26]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changedBy: String'}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeDate: Date'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': [[[44, 14], [51, 15]]]}, 'targetElement': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISPOSED', 'traceName': 'DISPOSED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'refs': [[[30, 5], [30, 51]]]}, 'from': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'to': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'selected': False, 'relationView': {'id': 'f781ca27-13ef-4f77-ab36-6d1c1b80581e', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'to': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'needReconnect': True}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1', 'relationType': 'Realization', 'fromLabel': '', 'toLabel': ''}}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'commands': [], 'description': 'BookManagement 컨텍스트의 도메인 요구사항과 DDL, 이벤트 흐름, 컨텍스트 통합 패턴을 분석한 결과, Book Aggregate는 도서의 전체 생애주기와 상태 변화를 관리해야 한다. 도서의 상태(status)는 BookStatus Enumeration으로, 카테고리(category)는 BookCategory Enumeration으로 명확하게 구분한다. 폐기 관련 속성(disposalDate, disposalReason)은 도서의 상태와 직접적으로 연결되므로 Aggregate에 포함한다. 대출/반납 및 예약 컨텍스트와의 Pub/Sub 연동을 위해 상태 변경 이력 추적이 필요하며, 상태 변경 이력(historyId, previousStatus, newStatus, changeReason, changedBy, changeDate)은 별도 Aggregate가 아닌 Book Aggregate 내 List<BookStatusHistory>로 관리한다. BookStatusHistory는 ValueObject로 정의하여 불변성과 일관성을 보장한다. 모든 필수 DDL 필드가 Aggregate 또는 ValueObject에 포함되도록 설계하였다.', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'x': 665.0, 'y': 544.0, 'width': 130, 'height': 529}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Book', 'traceName': 'Book', 'displayName': '도서', 'nameCamelCase': 'book', 'namePascalCase': 'Book', 'namePlural': 'books', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 9], [4, 31]]]}, '2d968424-0df5-4a72-9086-b3a3dcf580ff': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 19]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 48]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 25]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[74, 5], [74, 63]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[72, 5], [72, 41]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 30]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 14]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 35]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 24]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'ReservationId', 'isCopy': False, 'isKey': False, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Reservation', 'isOverrideField': True}], 'entities': {'elements': {'767ab11a-12b4-485e-b701-aa54317a36e6': {'_type': 'org.uengine.uml.model.Class', 'id': '767ab11a-12b4-485e-b701-aa54317a36e6', 'name': 'Loan', 'traceName': 'Loan', 'namePascalCase': 'Loan', 'nameCamelCase': 'loan', 'namePlural': 'loans', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 19]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 48]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 25]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]], 'inputUI': None, 'options': None}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 31]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 50]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[74, 5], [74, 63]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[72, 5], [72, 41]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 30]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 14]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 35]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 24]]], 'inputUI': None, 'options': None}, {'className': 'ReservationId', 'isCopy': False, 'isKey': False, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Reservation', 'isOverrideField': True}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '767ab11a-12b4-485e-b701-aa54317a36e6', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'refs': [[[4, 8], [4, 25]]]}, 'c69e4431-db90-49ae-b77c-e0e3976e3122': {'_type': 'org.uengine.uml.model.enum', 'id': 'c69e4431-db90-49ae-b77c-e0e3976e3122', 'name': 'LoanStatus', 'traceName': 'LoanStatus', 'displayName': '대출 상태', 'nameCamelCase': 'loanStatus', 'namePascalCase': 'LoanStatus', 'namePlural': 'loanStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'c69e4431-db90-49ae-b77c-e0e3976e3122', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[39, 18], [39, 20]]]}, {'value': 'OVERDUE', 'traceName': 'OVERDUE', 'refs': [[[39, 25], [39, 26]]]}, {'value': 'RETURNED', 'traceName': 'RETURNED', 'refs': [[[39, 31], [39, 34]]]}, {'value': 'EXTENDED', 'traceName': 'EXTENDED', 'refs': [[[39, 39], [39, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[39, 5], [39, 50]]]}, '89317150-93db-401a-a15e-d0817206aff8': {'_type': 'org.uengine.uml.model.vo.Class', 'id': '89317150-93db-401a-a15e-d0817206aff8', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': '89317150-93db-401a-a15e-d0817206aff8', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}, 'daa64406-ac26-4abf-831e-1ae0b34f7a89': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'daa64406-ac26-4abf-831e-1ae0b34f7a89', 'name': 'ReservationId', 'traceName': 'ReservationId', 'displayName': '', 'namePascalCase': 'ReservationId', 'nameCamelCase': 'reservationId', 'namePlural': 'reservationIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Reservation', 'isOverrideField': True, 'label': '- reservationId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'daa64406-ac26-4abf-831e-1ae0b34f7a89', 'x': 950, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'commands': [], 'description': 'LoanAndReservation 컨텍스트의 핵심 Aggregate는 Loan(대출)이다. 이 Aggregate는 도서 대출, 반납, 연장, 예약 등 도서의 대출 라이프사이클을 관리한다. DDL과 이벤트, 컨텍스트 관계를 분석한 결과, Loan Aggregate에는 loanId(키), memberId, bookId, loanDate, dueDate, returnDate, loanPeriodDays, status, extensionCount, createdAt, updatedAt 등 대출의 주요 속성이 포함되어야 한다. status는 대출 상태를 나타내므로 LoanStatus Enumeration으로 정의한다. LoanHistory 등 이력은 별도 컨텍스트로 관리되므로, Loan Aggregate에는 직접 포함하지 않는다. BookManagement와의 Pub/Sub 관계를 고려해 bookId를 참조 속성으로 포함한다. 모든 속성은 DDL, 이벤트, 컨텍스트 관계에서 근거를 찾아 refs로 연결하였다.', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'x': 1250.0, 'y': 544.0, 'width': 130, 'height': 529}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Loan', 'traceName': 'Loan', 'displayName': '대출', 'nameCamelCase': 'loan', 'namePascalCase': 'Loan', 'namePlural': 'loans', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 8], [4, 25]]]}, '05a64617-0e75-48c7-ab81-093ba54191dd': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 19]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 43]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'08df98f2-9f45-498c-9afd-ef19f3c7ccc1': {'_type': 'org.uengine.uml.model.Class', 'id': '08df98f2-9f45-498c-9afd-ef19f3c7ccc1', 'name': 'Reservation', 'traceName': 'Reservation', 'namePascalCase': 'Reservation', 'nameCamelCase': 'reservation', 'namePlural': 'reservations', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 29]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 19]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]], 'inputUI': None, 'options': None}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]], 'inputUI': None, 'options': None}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 43]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '08df98f2-9f45-498c-9afd-ef19f3c7ccc1', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '05a64617-0e75-48c7-ab81-093ba54191dd', 'refs': [[[1, 21], [4, 29]]]}, '93122428-0972-42a7-8ae5-4da7bf19dc06': {'_type': 'org.uengine.uml.model.enum', 'id': '93122428-0972-42a7-8ae5-4da7bf19dc06', 'name': 'ReservationStatus', 'traceName': 'ReservationStatus', 'displayName': '예약 상태', 'nameCamelCase': 'reservationStatus', 'namePascalCase': 'ReservationStatus', 'namePlural': 'reservationStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '93122428-0972-42a7-8ae5-4da7bf19dc06', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'PENDING', 'traceName': 'PENDING', 'refs': [[[57, 18], [57, 54]]]}, {'value': 'COMPLETED', 'traceName': 'COMPLETED', 'refs': [[[57, 25], [57, 54]]]}, {'value': 'CANCELLED', 'traceName': 'CANCELLED', 'refs': [[[57, 33], [57, 54]]]}, {'value': 'EXPIRED', 'traceName': 'EXPIRED', 'refs': [[[57, 41], [57, 54]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[57, 5], [57, 54]]]}, '422ae07a-98cb-4eaf-9e78-9459a4eab391': {'_type': 'org.uengine.uml.model.vo.Class', 'id': '422ae07a-98cb-4eaf-9e78-9459a4eab391', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': '422ae07a-98cb-4eaf-9e78-9459a4eab391', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'commands': [], 'description': 'Reservation 애그리게이트는 도서 예약의 전체 라이프사이클을 관리하며, 예약 상태(ReservationStatus) 관리를 위해 Enumeration을 도입한다. DDL에서 요구하는 모든 필드를 포함하여, 예약의 생성, 상태 변경, 만료, 알림 발송 등 이벤트 기반 처리를 지원한다. Pub/Sub 패턴에 따라 BookManagement 컨텍스트로부터 도서 상태 변경 이벤트를 구독하고, LoanHistory 컨텍스트로 이력 이벤트를 발행할 수 있도록 필요한 속성들을 포함한다. ReservationStatus는 예약의 상태(예약중, 예약완료, 예약취소, 예약만료)를 명확히 구분하기 위해 Enumeration으로 정의한다. ValueObject는 별도로 필요하지 않으며, 모든 속성은 애그리게이트에 직접 포함한다.', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'x': 1755.0, 'y': 480.0, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Reservation', 'traceName': 'Reservation', 'displayName': '예약', 'nameCamelCase': 'reservation', 'namePascalCase': 'Reservation', 'namePlural': 'reservations', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[1, 21], [4, 29]]]}, 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'elementView': {'angle': 0, 'height': 115, 'id': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'style': '{}', 'width': 100, 'x': 759.0, 'y': 280.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 31]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 36]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 32]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 35]]]}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 51]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 38]]]}], 'hexagonalView': {'height': 0, 'id': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookRegistered', 'traceName': 'BookRegistered', 'displayName': '도서 등록됨', 'nameCamelCase': 'bookRegistered', 'namePascalCase': 'BookRegistered', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'refs': [[[7, 3], [7, 16]]]}, '5a57f171-c9c0-4bd7-a515-57325465a02e': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'elementView': {'angle': 0, 'height': 115, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'style': '{}', 'width': 100, 'x': 759.0, 'y': 408.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[46, 5], [46, 24]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 19]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 56]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 17]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 14]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 32]]]}], 'hexagonalView': {'height': 0, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookStatusChanged', 'traceName': 'BookStatusChanged', 'displayName': '도서 상태 변경됨', 'nameCamelCase': 'bookStatusChanged', 'namePascalCase': 'BookStatusChanged', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'refs': [[[8, 3], [8, 19]]]}, '196b7475-3455-4a48-89ac-1c73c5f6a636': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'elementView': {'angle': 0, 'height': 115, 'id': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'style': '{}', 'width': 100, 'x': 759.0, 'y': 536.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]]}], 'hexagonalView': {'height': 0, 'id': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookDisposed', 'traceName': 'BookDisposed', 'displayName': '도서 폐기됨', 'nameCamelCase': 'bookDisposed', 'namePascalCase': 'BookDisposed', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'refs': [[[9, 3], [9, 14]]]}, '74f03d7c-57b6-4356-a3d3-cd92f767e974': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookRegistered'], 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'controllerInfo': {'apiPath': 'createbook', 'method': 'POST', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 31]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 36]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 32]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 35]]]}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 51]]]}], 'description': None, 'id': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'style': '{}', 'width': 100, 'x': 571.0, 'y': 280.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'CreateBook', 'traceName': 'CreateBook', 'displayName': '도서 등록', 'nameCamelCase': 'createBook', 'namePascalCase': 'CreateBook', 'namePlural': 'createBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'POST'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[15, 56], [15, 99]]], 'referencedSiteMapId': 'book-create-command'}, 'f0037ce9-a1c6-4655-a6eb-506698828527': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookStatusChanged'], 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'controllerInfo': {'apiPath': 'editbook', 'method': 'PUT', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 31]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 32]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 35]]]}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 51]]]}], 'description': None, 'id': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'style': '{}', 'width': 100, 'x': 571.0, 'y': 408.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'EditBook', 'traceName': 'EditBook', 'displayName': '도서 정보 수정', 'nameCamelCase': 'editBook', 'namePascalCase': 'EditBook', 'namePlural': 'editBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'PUT'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[15, 1], [15, 51]]], 'referencedSiteMapId': 'book-edit-command'}, '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookDisposed'], 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'controllerInfo': {'apiPath': 'disposebook', 'method': 'DELETE', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]]}], 'description': None, 'id': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'style': '{}', 'width': 100, 'x': 571.0, 'y': 536.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'DisposeBook', 'traceName': 'DisposeBook', 'displayName': '도서 폐기 처리', 'nameCamelCase': 'disposeBook', 'namePascalCase': 'DisposeBook', 'namePlural': 'disposeBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'DELETE'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[15, 263], [15, 301]]], 'referencedSiteMapId': 'book-dispose-command'}, '49395414-caef-4c97-ac5d-02c525fad918': {'_type': 'org.uengine.modeling.model.View', 'id': '49395414-caef-4c97-ac5d-02c525fad918', 'visibility': 'public', 'name': 'BookList', 'traceName': 'BookList', 'oldName': '', 'displayName': '도서 목록 조회', 'namePascalCase': 'BookList', 'namePlural': 'bookLists', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'description': None, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'fieldDescriptors': [{'_type': 'org.uengine.model.FieldDescriptor', 'name': 'id', 'className': 'Long', 'nameCamelCase': 'id', 'namePascalCase': 'Id', 'isKey': True}], 'queryParameters': [{'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 51]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 31]]]}], 'queryOption': {'apiPath': '', 'useDefaultUri': True, 'multipleResult': True}, 'controllerInfo': {'url': ''}, 'elementView': {'_type': 'org.uengine.modeling.model.View', 'id': '49395414-caef-4c97-ac5d-02c525fad918', 'x': 571.0, 'y': 664.0, 'width': 100, 'height': 115, 'style': '{}', 'z-index': 999}, 'editingView': False, 'dataProjection': 'query-for-aggregate', 'createRules': [{'_type': 'viewStoreRule', 'operation': 'CREATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'updateRules': [{'_type': 'viewStoreRule', 'operation': 'UPDATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'deleteRules': [{'_type': 'viewStoreRule', 'operation': 'DELETE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None}], 'where': [{'viewField': None, 'eventField': None}]}], 'rotateStatus': False, 'definitionId': '', 'refs': [[[15, 30], [15, 47]]], 'referencedSiteMapId': 'book-list-view'}, 'd35e7299-95a6-4c6e-a7ca-9b14b73880c7': {'_type': 'org.uengine.modeling.model.View', 'id': 'd35e7299-95a6-4c6e-a7ca-9b14b73880c7', 'visibility': 'public', 'name': 'BookStatusChangeHistory', 'traceName': 'BookStatusChangeHistory', 'oldName': '', 'displayName': '도서 상태 변경 이력 조회', 'namePascalCase': 'BookStatusChangeHistory', 'namePlural': 'bookStatusChangeHistories', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'description': None, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'fieldDescriptors': [{'_type': 'org.uengine.model.FieldDescriptor', 'name': 'id', 'className': 'Long', 'nameCamelCase': 'id', 'namePascalCase': 'Id', 'isKey': True}], 'queryParameters': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[46, 5], [46, 24]]]}], 'queryOption': {'apiPath': '', 'useDefaultUri': True, 'multipleResult': True}, 'controllerInfo': {'url': ''}, 'elementView': {'_type': 'org.uengine.modeling.model.View', 'id': 'd35e7299-95a6-4c6e-a7ca-9b14b73880c7', 'x': 571.0, 'y': 792.0, 'width': 100, 'height': 115, 'style': '{}', 'z-index': 999}, 'editingView': False, 'dataProjection': 'query-for-aggregate', 'createRules': [{'_type': 'viewStoreRule', 'operation': 'CREATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'updateRules': [{'_type': 'viewStoreRule', 'operation': 'UPDATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'deleteRules': [{'_type': 'viewStoreRule', 'operation': 'DELETE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None}], 'where': [{'viewField': None, 'eventField': None}]}], 'rotateStatus': False, 'definitionId': '', 'refs': [[[17, 13], [17, 63]]], 'referencedSiteMapId': 'book-status-change-view'}, '3048975d-348c-4368-928f-7033edf39c18': {'_type': 'org.uengine.modeling.model.UI', 'id': '3048975d-348c-4368-928f-7033edf39c18', 'name': 'CreateBookUI', 'oldName': '', 'displayName': '도서 등록 UI', 'namePascalCase': 'Createbookui', 'nameCamelCase': 'createbookui', 'namePlural': 'createbookuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'command': {'id': '74f03d7c-57b6-4356-a3d3-cd92f767e974'}, 'readModel': None, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': '3048975d-348c-4368-928f-7033edf39c18', 'x': 490.0, 'y': 280.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': 'book-create-command'}, 'ed00c36f-b8c4-431a-a5b4-5b0059d8d8cb': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'description': None, 'id': 'ed00c36f-b8c4-431a-a5b4-5b0059d8d8cb', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': 'ed00c36f-b8c4-431a-a5b4-5b0059d8d8cb', 'style': '{}', 'width': 100, 'x': 409.0, 'y': 280.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Librarian', 'traceName': 'Librarian', 'oldName': '', 'rotateStatus': False}, '343bb34c-064a-47c5-bfcc-8d64e2d45755': {'_type': 'org.uengine.modeling.model.UI', 'id': '343bb34c-064a-47c5-bfcc-8d64e2d45755', 'name': 'EditBookUI', 'oldName': '', 'displayName': '도서 정보 수정 UI', 'namePascalCase': 'Editbookui', 'nameCamelCase': 'editbookui', 'namePlural': 'editbookuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'command': {'id': 'f0037ce9-a1c6-4655-a6eb-506698828527'}, 'readModel': None, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': '343bb34c-064a-47c5-bfcc-8d64e2d45755', 'x': 490.0, 'y': 408.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': 'book-edit-command'}, '7322cdca-2c2f-4c60-bdef-5f52e328f548': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'description': None, 'id': '7322cdca-2c2f-4c60-bdef-5f52e328f548', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': '7322cdca-2c2f-4c60-bdef-5f52e328f548', 'style': '{}', 'width': 100, 'x': 409.0, 'y': 408.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Librarian', 'traceName': 'Librarian', 'oldName': '', 'rotateStatus': False}, 'f81948ef-9f33-4e5a-9d63-fe287469ae8d': {'_type': 'org.uengine.modeling.model.UI', 'id': 'f81948ef-9f33-4e5a-9d63-fe287469ae8d', 'name': 'DisposeBookUI', 'oldName': '', 'displayName': '도서 폐기 처리 UI', 'namePascalCase': 'Disposebookui', 'nameCamelCase': 'disposebookui', 'namePlural': 'disposebookuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'command': {'id': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee'}, 'readModel': None, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': 'f81948ef-9f33-4e5a-9d63-fe287469ae8d', 'x': 490.0, 'y': 536.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': 'book-dispose-command'}, '6b1c5d41-b36e-4df0-a2fe-68e15650913c': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'description': None, 'id': '6b1c5d41-b36e-4df0-a2fe-68e15650913c', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': '6b1c5d41-b36e-4df0-a2fe-68e15650913c', 'style': '{}', 'width': 100, 'x': 409.0, 'y': 536.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Librarian', 'traceName': 'Librarian', 'oldName': '', 'rotateStatus': False}, 'b7c4ccac-2a6b-447e-84a4-65e1bed99d86': {'_type': 'org.uengine.modeling.model.UI', 'id': 'b7c4ccac-2a6b-447e-84a4-65e1bed99d86', 'name': 'BookListUI', 'oldName': '', 'displayName': '도서 목록 조회 UI', 'namePascalCase': 'Booklistui', 'nameCamelCase': 'booklistui', 'namePlural': 'booklistuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'command': None, 'readModel': {'id': '49395414-caef-4c97-ac5d-02c525fad918'}, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': 'b7c4ccac-2a6b-447e-84a4-65e1bed99d86', 'x': 490.0, 'y': 664.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': 'book-list-view'}, 'b153af6b-98f7-4801-a474-03ea6512db31': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'description': None, 'id': 'b153af6b-98f7-4801-a474-03ea6512db31', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': 'b153af6b-98f7-4801-a474-03ea6512db31', 'style': '{}', 'width': 100, 'x': 409.0, 'y': 664.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Librarian', 'traceName': 'Librarian', 'oldName': '', 'rotateStatus': False}, '59448958-9fa0-4901-8a21-d723f44d0a1e': {'_type': 'org.uengine.modeling.model.UI', 'id': '59448958-9fa0-4901-8a21-d723f44d0a1e', 'name': 'BookStatusChangeHistoryUI', 'oldName': '', 'displayName': '도서 상태 변경 이력 조회 UI', 'namePascalCase': 'Bookstatuschangehistoryui', 'nameCamelCase': 'bookstatuschangehistoryui', 'namePlural': 'bookstatuschangehistoryuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'command': None, 'readModel': {'id': 'd35e7299-95a6-4c6e-a7ca-9b14b73880c7'}, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': '59448958-9fa0-4901-8a21-d723f44d0a1e', 'x': 490.0, 'y': 792.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': 'book-status-change-view'}, 'fd7f068b-5674-4d36-92a7-0b4b04b07737': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'description': None, 'id': 'fd7f068b-5674-4d36-92a7-0b4b04b07737', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': 'fd7f068b-5674-4d36-92a7-0b4b04b07737', 'style': '{}', 'width': 100, 'x': 409.0, 'y': 792.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Librarian', 'traceName': 'Librarian', 'oldName': '', 'rotateStatus': False}, '89d7b8e7-0c1e-486a-b3a4-9558652c268d': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'elementView': {'angle': 0, 'height': 115, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'style': '{}', 'width': 100, 'x': 1344.0, 'y': 280.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 30]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 30]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'hexagonalView': {'height': 0, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookLoaned', 'traceName': 'BookLoaned', 'displayName': '도서 대출됨', 'nameCamelCase': 'bookLoaned', 'namePascalCase': 'BookLoaned', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[7, 3], [94, 61]]]}, '3a490b28-36f7-48ae-9056-e4bd80974f25': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'elementView': {'angle': 0, 'height': 115, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'style': '{}', 'width': 100, 'x': 1344.0, 'y': 408.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'hexagonalView': {'height': 0, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookReturned', 'traceName': 'BookReturned', 'displayName': '도서 반납됨', 'nameCamelCase': 'bookReturned', 'namePascalCase': 'BookReturned', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[9, 3], [140, 46]]]}, 'b453d5ab-a784-4146-afb7-0d7467935f86': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'elementView': {'angle': 0, 'height': 115, 'id': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'style': '{}', 'width': 100, 'x': 1344.0, 'y': 536.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 35]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 30]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 31]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'hexagonalView': {'height': 0, 'id': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'LoanExtended', 'traceName': 'LoanExtended', 'displayName': '대출 연장됨', 'nameCamelCase': 'loanExtended', 'namePascalCase': 'LoanExtended', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[10, 3], [162, 48]]]}, '121903fb-a9e7-4515-a0e7-dcae48b2de21': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookLoaned'], 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'controllerInfo': {'apiPath': 'loanbook', 'method': 'POST', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]]}], 'description': None, 'id': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'style': '{}', 'width': 100, 'x': 1156.0, 'y': 280.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'LoanBook', 'traceName': 'LoanBook', 'displayName': '도서 대출', 'nameCamelCase': 'loanBook', 'namePascalCase': 'LoanBook', 'namePlural': 'loanBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'POST'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[18, 52], [18, 79]]], 'referencedSiteMapId': None}, '0fdc6d72-735b-4870-bf18-9d18827775b6': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookReturned'], 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'controllerInfo': {'apiPath': 'returnbook', 'method': 'PUT', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}], 'description': None, 'id': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'style': '{}', 'width': 100, 'x': 1156.0, 'y': 408.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'ReturnBook', 'traceName': 'ReturnBook', 'displayName': '도서 반납', 'nameCamelCase': 'returnBook', 'namePascalCase': 'ReturnBook', 'namePlural': 'returnBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'PUT'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[18, 4], [18, 5]]], 'referencedSiteMapId': None}, 'd206f752-6c54-4d20-b400-d8bde21fb87c': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['LoanExtended'], 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'controllerInfo': {'apiPath': 'extendloan', 'method': 'PUT', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionDays', 'traceName': 'extensionDays', 'nameCamelCase': 'extensionDays', 'namePascalCase': 'ExtensionDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]]}], 'description': None, 'id': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'style': '{}', 'width': 100, 'x': 1156.0, 'y': 536.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'ExtendLoan', 'traceName': 'ExtendLoan', 'displayName': '대출 연장', 'nameCamelCase': 'extendLoan', 'namePascalCase': 'ExtendLoan', 'namePlural': 'extendLoans', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'PUT'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[24, 1], [24, 2]]], 'referencedSiteMapId': None}, 'f4ffa9fb-a05f-40f7-a8f9-bd57cca3749c': {'_type': 'org.uengine.modeling.model.View', 'id': 'f4ffa9fb-a05f-40f7-a8f9-bd57cca3749c', 'visibility': 'public', 'name': 'LoanStatusList', 'traceName': 'LoanStatusList', 'oldName': '', 'displayName': '대출 현황 목록', 'namePascalCase': 'LoanStatusList', 'namePlural': 'loanStatusLists', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'description': None, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'fieldDescriptors': [{'_type': 'org.uengine.model.FieldDescriptor', 'name': 'id', 'className': 'Long', 'nameCamelCase': 'id', 'namePascalCase': 'Id', 'isKey': True}], 'queryParameters': [{'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'queryOption': {'apiPath': '', 'useDefaultUri': True, 'multipleResult': True}, 'controllerInfo': {'url': ''}, 'elementView': {'_type': 'org.uengine.modeling.model.View', 'id': 'f4ffa9fb-a05f-40f7-a8f9-bd57cca3749c', 'x': 1156.0, 'y': 664.0, 'width': 100, 'height': 115, 'style': '{}', 'z-index': 999}, 'editingView': False, 'dataProjection': 'query-for-aggregate', 'createRules': [{'_type': 'viewStoreRule', 'operation': 'CREATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'updateRules': [{'_type': 'viewStoreRule', 'operation': 'UPDATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'deleteRules': [{'_type': 'viewStoreRule', 'operation': 'DELETE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None}], 'where': [{'viewField': None, 'eventField': None}]}], 'rotateStatus': False, 'definitionId': '', 'refs': [[[22, 1], [22, 28]]], 'referencedSiteMapId': None}, '26ece7c7-0ab9-4c44-a54c-197e883d8f85': {'_type': 'org.uengine.modeling.model.View', 'id': '26ece7c7-0ab9-4c44-a54c-197e883d8f85', 'visibility': 'public', 'name': 'LoanHistory', 'traceName': 'LoanHistory', 'oldName': '', 'displayName': '대출 이력 조회', 'namePascalCase': 'LoanHistory', 'namePlural': 'loanHistories', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'description': None, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'fieldDescriptors': [{'_type': 'org.uengine.model.FieldDescriptor', 'name': 'id', 'className': 'Long', 'nameCamelCase': 'id', 'namePascalCase': 'Id', 'isKey': True}], 'queryParameters': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}], 'queryOption': {'apiPath': '', 'useDefaultUri': True, 'multipleResult': True}, 'controllerInfo': {'url': ''}, 'elementView': {'_type': 'org.uengine.modeling.model.View', 'id': '26ece7c7-0ab9-4c44-a54c-197e883d8f85', 'x': 1156.0, 'y': 792.0, 'width': 100, 'height': 115, 'style': '{}', 'z-index': 999}, 'editingView': False, 'dataProjection': 'query-for-aggregate', 'createRules': [{'_type': 'viewStoreRule', 'operation': 'CREATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'updateRules': [{'_type': 'viewStoreRule', 'operation': 'UPDATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'deleteRules': [{'_type': 'viewStoreRule', 'operation': 'DELETE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None}], 'where': [{'viewField': None, 'eventField': None}]}], 'rotateStatus': False, 'definitionId': '', 'refs': [[[26, 1], [26, 9]]], 'referencedSiteMapId': None}, 'c9fcde8d-b426-4206-a572-729c4854cd26': {'_type': 'org.uengine.modeling.model.UI', 'id': 'c9fcde8d-b426-4206-a572-729c4854cd26', 'name': 'LoanBookUI', 'oldName': '', 'displayName': '도서 대출 UI', 'namePascalCase': 'Loanbookui', 'nameCamelCase': 'loanbookui', 'namePlural': 'loanbookuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'command': {'id': '121903fb-a9e7-4515-a0e7-dcae48b2de21'}, 'readModel': None, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': 'c9fcde8d-b426-4206-a572-729c4854cd26', 'x': 1075.0, 'y': 280.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': None}, '384f1c3d-f0e7-49a6-a764-c011b596bd1b': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'description': None, 'id': '384f1c3d-f0e7-49a6-a764-c011b596bd1b', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': '384f1c3d-f0e7-49a6-a764-c011b596bd1b', 'style': '{}', 'width': 100, 'x': 994.0, 'y': 280.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Member', 'traceName': 'Member', 'oldName': '', 'rotateStatus': False}, '2576c1bb-9182-4830-b15e-d5247e6472fb': {'_type': 'org.uengine.modeling.model.UI', 'id': '2576c1bb-9182-4830-b15e-d5247e6472fb', 'name': 'ReturnBookUI', 'oldName': '', 'displayName': '도서 반납 UI', 'namePascalCase': 'Returnbookui', 'nameCamelCase': 'returnbookui', 'namePlural': 'returnbookuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'command': {'id': '0fdc6d72-735b-4870-bf18-9d18827775b6'}, 'readModel': None, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': '2576c1bb-9182-4830-b15e-d5247e6472fb', 'x': 1075.0, 'y': 408.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': None}, '021d18ed-d1bd-48e0-843f-415e5484e8ad': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'description': None, 'id': '021d18ed-d1bd-48e0-843f-415e5484e8ad', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': '021d18ed-d1bd-48e0-843f-415e5484e8ad', 'style': '{}', 'width': 100, 'x': 994.0, 'y': 408.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Member', 'traceName': 'Member', 'oldName': '', 'rotateStatus': False}, '2420d3f6-72b5-494f-873d-0bac4f82ff26': {'_type': 'org.uengine.modeling.model.UI', 'id': '2420d3f6-72b5-494f-873d-0bac4f82ff26', 'name': 'ExtendLoanUI', 'oldName': '', 'displayName': '대출 연장 UI', 'namePascalCase': 'Extendloanui', 'nameCamelCase': 'extendloanui', 'namePlural': 'extendloanuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'command': {'id': 'd206f752-6c54-4d20-b400-d8bde21fb87c'}, 'readModel': None, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': '2420d3f6-72b5-494f-873d-0bac4f82ff26', 'x': 1075.0, 'y': 536.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': None}, '098dc600-d6a1-4de1-9289-7ae894f452b1': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'description': None, 'id': '098dc600-d6a1-4de1-9289-7ae894f452b1', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': '098dc600-d6a1-4de1-9289-7ae894f452b1', 'style': '{}', 'width': 100, 'x': 994.0, 'y': 536.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Member', 'traceName': 'Member', 'oldName': '', 'rotateStatus': False}, '9db5d01b-25c5-4f8a-b2b6-f9f79ec53d99': {'_type': 'org.uengine.modeling.model.UI', 'id': '9db5d01b-25c5-4f8a-b2b6-f9f79ec53d99', 'name': 'LoanStatusListUI', 'oldName': '', 'displayName': '대출 현황 목록 UI', 'namePascalCase': 'Loanstatuslistui', 'nameCamelCase': 'loanstatuslistui', 'namePlural': 'loanstatuslistuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'command': None, 'readModel': {'id': 'f4ffa9fb-a05f-40f7-a8f9-bd57cca3749c'}, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': '9db5d01b-25c5-4f8a-b2b6-f9f79ec53d99', 'x': 1075.0, 'y': 664.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': None}, '39c46cc2-1270-4e5c-aacb-22cff8337869': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'description': None, 'id': '39c46cc2-1270-4e5c-aacb-22cff8337869', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': '39c46cc2-1270-4e5c-aacb-22cff8337869', 'style': '{}', 'width': 100, 'x': 994.0, 'y': 664.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Member', 'traceName': 'Member', 'oldName': '', 'rotateStatus': False}, 'b8c7cbb3-715c-4e93-ab33-fd04468d27bb': {'_type': 'org.uengine.modeling.model.UI', 'id': 'b8c7cbb3-715c-4e93-ab33-fd04468d27bb', 'name': 'LoanHistoryUI', 'oldName': '', 'displayName': '대출 이력 조회 UI', 'namePascalCase': 'Loanhistoryui', 'nameCamelCase': 'loanhistoryui', 'namePlural': 'loanhistoryuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'command': None, 'readModel': {'id': '26ece7c7-0ab9-4c44-a54c-197e883d8f85'}, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': 'b8c7cbb3-715c-4e93-ab33-fd04468d27bb', 'x': 1075.0, 'y': 792.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': None}, '002af679-b305-4d86-8e3f-93b18badf6c0': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'description': None, 'id': '002af679-b305-4d86-8e3f-93b18badf6c0', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': '002af679-b305-4d86-8e3f-93b18badf6c0', 'style': '{}', 'width': 100, 'x': 994.0, 'y': 792.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Member', 'traceName': 'Member', 'oldName': '', 'rotateStatus': False}, '5c6fc329-5664-44a0-9f98-e246a845f943': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'elementView': {'angle': 0, 'height': 115, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'style': '{}', 'width': 100, 'x': 1849.0, 'y': 280.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 34]], [[120, 6], [120, 9]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 24]], [[121, 6], [121, 11]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]]}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]]}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 37]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]]}], 'hexagonalView': {'height': 0, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookReserved', 'traceName': 'BookReserved', 'displayName': '도서 예약됨', 'nameCamelCase': 'bookReserved', 'namePascalCase': 'BookReserved', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[114, 12], [129, 31]]]}, '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookReserved'], 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'controllerInfo': {'apiPath': 'reservebook', 'method': 'POST', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 34]], [[120, 6], [120, 9]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 24]], [[121, 6], [121, 11]]]}], 'description': None, 'id': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'style': '{}', 'width': 100, 'x': 1661.0, 'y': 280.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'ReserveBook', 'traceName': 'ReserveBook', 'displayName': '도서 예약 신청', 'nameCamelCase': 'reserveBook', 'namePascalCase': 'ReserveBook', 'namePlural': 'reserveBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'POST'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[118, 36], [118, 50]]], 'referencedSiteMapId': None}, '7c2a9554-7d5e-4b4b-8514-aa107adddad4': {'_type': 'org.uengine.modeling.model.View', 'id': '7c2a9554-7d5e-4b4b-8514-aa107adddad4', 'visibility': 'public', 'name': 'ReservationStatus', 'traceName': 'ReservationStatus', 'oldName': '', 'displayName': '도서 예약 현황 조회', 'namePascalCase': 'ReservationStatus', 'namePlural': 'reservationStatuses', 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'description': None, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'fieldDescriptors': [{'_type': 'org.uengine.model.FieldDescriptor', 'name': 'id', 'className': 'Long', 'nameCamelCase': 'id', 'namePascalCase': 'Id', 'isKey': True}], 'queryParameters': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 24]]]}], 'queryOption': {'apiPath': '', 'useDefaultUri': True, 'multipleResult': True}, 'controllerInfo': {'url': ''}, 'elementView': {'_type': 'org.uengine.modeling.model.View', 'id': '7c2a9554-7d5e-4b4b-8514-aa107adddad4', 'x': 1661.0, 'y': 408.0, 'width': 100, 'height': 115, 'style': '{}', 'z-index': 999}, 'editingView': False, 'dataProjection': 'query-for-aggregate', 'createRules': [{'_type': 'viewStoreRule', 'operation': 'CREATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'updateRules': [{'_type': 'viewStoreRule', 'operation': 'UPDATE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None, 'operator': '='}], 'where': [{'viewField': None, 'eventField': None}]}], 'deleteRules': [{'_type': 'viewStoreRule', 'operation': 'DELETE', 'when': None, 'fieldMapping': [{'viewField': None, 'eventField': None}], 'where': [{'viewField': None, 'eventField': None}]}], 'rotateStatus': False, 'definitionId': '', 'refs': [[[22, 1], [22, 28]]], 'referencedSiteMapId': None}, '2817cca3-a61c-4ca4-822f-a187ebb417ca': {'_type': 'org.uengine.modeling.model.UI', 'id': '2817cca3-a61c-4ca4-822f-a187ebb417ca', 'name': 'ReserveBookUI', 'oldName': '', 'displayName': '도서 예약 신청 UI', 'namePascalCase': 'Reservebookui', 'nameCamelCase': 'reservebookui', 'namePlural': 'reservebookuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'command': {'id': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b'}, 'readModel': None, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': '2817cca3-a61c-4ca4-822f-a187ebb417ca', 'x': 1580.0, 'y': 280.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': None}, 'd3895e12-75a1-4588-a93f-e212d57cf025': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'description': None, 'id': 'd3895e12-75a1-4588-a93f-e212d57cf025', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': 'd3895e12-75a1-4588-a93f-e212d57cf025', 'style': '{}', 'width': 100, 'x': 1499.0, 'y': 280.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Member', 'traceName': 'Member', 'oldName': '', 'rotateStatus': False}, '5b330713-e6ce-4e2f-aea9-b35bca5ba074': {'_type': 'org.uengine.modeling.model.UI', 'id': '5b330713-e6ce-4e2f-aea9-b35bca5ba074', 'name': 'ReservationStatusUI', 'oldName': '', 'displayName': '도서 예약 현황 조회 UI', 'namePascalCase': 'Reservationstatusui', 'nameCamelCase': 'reservationstatusui', 'namePlural': 'reservationstatusuis', 'description': '', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'command': None, 'readModel': {'id': '7c2a9554-7d5e-4b4b-8514-aa107adddad4'}, 'elementView': {'_type': 'org.uengine.modeling.model.UI', 'id': '5b330713-e6ce-4e2f-aea9-b35bca5ba074', 'x': 1580.0, 'y': 408.0, 'width': 100, 'height': 100, 'style': {}}, 'uiType': 'Chart', 'chart': {'type': '', 'fieldMapping': {'category': [], 'data': []}}, 'grid': {'columns': []}, 'card': {'title': '', 'subtitle': '', 'text': ''}, 'runTimeTemplateHtml': '', 'rotateStatus': False, 'generateDescription': '', 'referencedSiteMapId': None}, 'b05b11a9-8432-4cc5-abfd-33a0d73f0593': {'_type': 'org.uengine.modeling.model.Actor', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'description': None, 'id': 'b05b11a9-8432-4cc5-abfd-33a0d73f0593', 'elementView': {'_type': 'org.uengine.modeling.model.Actor', 'height': 100, 'id': 'b05b11a9-8432-4cc5-abfd-33a0d73f0593', 'style': '{}', 'width': 100, 'x': 1499.0, 'y': 408.0}, 'innerAggregate': {'command': [], 'event': [], 'external': [], 'policy': [], 'view': []}, 'name': 'Member', 'traceName': 'Member', 'oldName': '', 'rotateStatus': False}, '77bc039e-ce09-41df-ace2-bb5449fa9ff9': {'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'description': '도서 상태가 변경될 때마다 대출/예약 컨텍스트에 해당 변경을 반영하여 대출 가능 여부 및 예약 상태를 자동으로 관리하기 위함입니다.', 'elementView': {'height': 115, 'width': 100, 'x': 1661.0, 'y': 536.0, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', '_type': 'org.uengine.modeling.model.Policy'}, 'fieldDescriptors': [], 'hexagonalView': {'height': 20, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', 'subWidth': 100, 'width': 20, '_type': 'org.uengine.modeling.model.PolicyHexagonal'}, 'isSaga': False, 'name': 'SyncLoanStatusOnBookStatusChange', 'traceName': 'SyncLoanStatusOnBookStatusChange', 'displayName': '도서 상태 변경 시 대출/예약 상태 동기화', 'nameCamelCase': 'syncLoanStatusOnBookStatusChange', 'namePascalCase': 'SyncLoanStatusOnBookStatusChange', 'namePlural': 'syncLoanStatusOnBookStatusChanges', 'oldName': '', 'rotateStatus': False, '_type': 'org.uengine.modeling.model.Policy', 'refs': [[[129, 15], [130, 83]]], 'sourceBoundedContextId': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}}, relations={'31a07b12-9278-40d8-a1bc-82566667cea8': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '31a07b12-9278-40d8-a1bc-82566667cea8', 'sourceElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 19]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 48]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 25]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[74, 5], [74, 63]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[72, 5], [72, 41]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 30]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 14]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 35]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 24]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'767ab11a-12b4-485e-b701-aa54317a36e6': {'_type': 'org.uengine.uml.model.Class', 'id': '767ab11a-12b4-485e-b701-aa54317a36e6', 'name': 'Loan', 'traceName': 'Loan', 'namePascalCase': 'Loan', 'nameCamelCase': 'loan', 'namePlural': 'loans', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 19]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 48]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 25]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]], 'inputUI': None, 'options': None}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 31]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 50]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[74, 5], [74, 63]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[72, 5], [72, 41]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 30]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 14]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 35]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 24]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '767ab11a-12b4-485e-b701-aa54317a36e6', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'refs': [[[4, 8], [4, 25]]]}, 'c69e4431-db90-49ae-b77c-e0e3976e3122': {'_type': 'org.uengine.uml.model.enum', 'id': 'c69e4431-db90-49ae-b77c-e0e3976e3122', 'name': 'LoanStatus', 'traceName': 'LoanStatus', 'displayName': '대출 상태', 'nameCamelCase': 'loanStatus', 'namePascalCase': 'LoanStatus', 'namePlural': 'loanStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'c69e4431-db90-49ae-b77c-e0e3976e3122', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[39, 18], [39, 20]]]}, {'value': 'OVERDUE', 'traceName': 'OVERDUE', 'refs': [[[39, 25], [39, 26]]]}, {'value': 'RETURNED', 'traceName': 'RETURNED', 'refs': [[[39, 31], [39, 34]]]}, {'value': 'EXTENDED', 'traceName': 'EXTENDED', 'refs': [[[39, 39], [39, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[39, 5], [39, 50]]]}, '89317150-93db-401a-a15e-d0817206aff8': {'_type': 'org.uengine.uml.model.vo.Class', 'id': '89317150-93db-401a-a15e-d0817206aff8', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': '89317150-93db-401a-a15e-d0817206aff8', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'commands': [], 'description': 'LoanAndReservation 컨텍스트의 핵심 Aggregate는 Loan(대출)이다. 이 Aggregate는 도서 대출, 반납, 연장, 예약 등 도서의 대출 라이프사이클을 관리한다. DDL과 이벤트, 컨텍스트 관계를 분석한 결과, Loan Aggregate에는 loanId(키), memberId, bookId, loanDate, dueDate, returnDate, loanPeriodDays, status, extensionCount, createdAt, updatedAt 등 대출의 주요 속성이 포함되어야 한다. status는 대출 상태를 나타내므로 LoanStatus Enumeration으로 정의한다. LoanHistory 등 이력은 별도 컨텍스트로 관리되므로, Loan Aggregate에는 직접 포함하지 않는다. BookManagement와의 Pub/Sub 관계를 고려해 bookId를 참조 속성으로 포함한다. 모든 속성은 DDL, 이벤트, 컨텍스트 관계에서 근거를 찾아 refs로 연결하였다.', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'x': 1250.0, 'y': 480.0, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Loan', 'traceName': 'Loan', 'displayName': '대출', 'nameCamelCase': 'loan', 'namePascalCase': 'Loan', 'namePlural': 'loans', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 8], [4, 25]]]}, 'targetElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 26]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 27]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 30]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 46]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'List<BookStatusHistory>', 'isCopy': False, 'isKey': False, 'name': 'statusHistories', 'traceName': 'statusHistories', 'nameCamelCase': 'statusHistories', 'namePascalCase': 'StatusHistories', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': True, 'refs': [[[44, 14], [51, 15]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'266ee095-c338-42f1-aacc-edd2ee7fa636': {'_type': 'org.uengine.uml.model.Class', 'id': '266ee095-c338-42f1-aacc-edd2ee7fa636', 'name': 'Book', 'traceName': 'Book', 'namePascalCase': 'Book', 'nameCamelCase': 'book', 'namePlural': 'books', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 26]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 27]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 30]]], 'inputUI': None, 'options': None}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 46]]], 'inputUI': None, 'options': None}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'inputUI': None, 'options': None}, {'className': 'List<BookStatusHistory>', 'isCopy': False, 'isKey': False, 'name': 'statusHistories', 'traceName': 'statusHistories', 'nameCamelCase': 'statusHistories', 'namePascalCase': 'StatusHistories', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': True, 'refs': [[[44, 14], [51, 15]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '266ee095-c338-42f1-aacc-edd2ee7fa636', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'refs': [[[4, 9], [4, 31]]]}, 'a03f3a1a-c315-49de-85e0-3604b1f4e94b': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'name': 'BookStatusHistory', 'traceName': 'BookStatusHistory', 'displayName': '도서 상태 변경 이력', 'namePascalCase': 'BookStatusHistory', 'nameCamelCase': 'bookStatusHistory', 'namePlural': 'bookStatusHistories', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[45, 5], [45, 41]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- historyId: Integer'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- previousStatus: BookStatus'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 45]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- newStatus: BookStatus'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 29]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeReason: String'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 26]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changedBy: String'}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeDate: Date'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': [[[44, 14], [51, 15]]]}, 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISPOSED', 'traceName': 'DISPOSED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'refs': [[[30, 5], [30, 51]]]}, 'cc0d6d28-facf-4c6f-b76a-55c071300073': {'_type': 'org.uengine.uml.model.enum', 'id': 'cc0d6d28-facf-4c6f-b76a-55c071300073', 'name': 'BookCategory', 'traceName': 'BookCategory', 'displayName': '도서 카테고리', 'nameCamelCase': 'bookCategory', 'namePascalCase': 'BookCategory', 'namePlural': 'bookCategories', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cc0d6d28-facf-4c6f-b76a-55c071300073', 'x': 950, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'NOVEL', 'traceName': 'NOVEL', 'refs': [[[29, 20], [29, 21]]]}, {'value': 'NONFICTION', 'traceName': 'NONFICTION', 'refs': [[[29, 26], [29, 28]]]}, {'value': 'ACADEMIC', 'traceName': 'ACADEMIC', 'refs': [[[29, 33], [29, 34]]]}, {'value': 'MAGAZINE', 'traceName': 'MAGAZINE', 'refs': [[[29, 39], [29, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[29, 5], [29, 46]]]}}, 'relations': {'f781ca27-13ef-4f77-ab36-6d1c1b80581e': {'name': 'BookStatus', 'id': 'f781ca27-13ef-4f77-ab36-6d1c1b80581e', '_type': 'org.uengine.uml.model.Relation', 'sourceElement': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'name': 'BookStatusHistory', 'traceName': 'BookStatusHistory', 'displayName': '도서 상태 변경 이력', 'namePascalCase': 'BookStatusHistory', 'nameCamelCase': 'bookStatusHistory', 'namePlural': 'bookStatusHistories', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[45, 5], [45, 41]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- historyId: Integer'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- previousStatus: BookStatus'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 45]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- newStatus: BookStatus'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 29]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeReason: String'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 26]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changedBy: String'}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeDate: Date'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': [[[44, 14], [51, 15]]]}, 'targetElement': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISPOSED', 'traceName': 'DISPOSED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'refs': [[[30, 5], [30, 51]]]}, 'from': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'to': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'selected': False, 'relationView': {'id': 'f781ca27-13ef-4f77-ab36-6d1c1b80581e', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'to': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'needReconnect': True}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1', 'relationType': 'Realization', 'fromLabel': '', 'toLabel': ''}}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'commands': [], 'description': 'BookManagement 컨텍스트의 도메인 요구사항과 DDL, 이벤트 흐름, 컨텍스트 통합 패턴을 분석한 결과, Book Aggregate는 도서의 전체 생애주기와 상태 변화를 관리해야 한다. 도서의 상태(status)는 BookStatus Enumeration으로, 카테고리(category)는 BookCategory Enumeration으로 명확하게 구분한다. 폐기 관련 속성(disposalDate, disposalReason)은 도서의 상태와 직접적으로 연결되므로 Aggregate에 포함한다. 대출/반납 및 예약 컨텍스트와의 Pub/Sub 연동을 위해 상태 변경 이력 추적이 필요하며, 상태 변경 이력(historyId, previousStatus, newStatus, changeReason, changedBy, changeDate)은 별도 Aggregate가 아닌 Book Aggregate 내 List<BookStatusHistory>로 관리한다. BookStatusHistory는 ValueObject로 정의하여 불변성과 일관성을 보장한다. 모든 필수 DDL 필드가 Aggregate 또는 ValueObject에 포함되도록 설계하였다.', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'x': 665.0, 'y': 480.0, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Book', 'traceName': 'Book', 'displayName': '도서', 'nameCamelCase': 'book', 'namePascalCase': 'Book', 'namePlural': 'books', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 9], [4, 31]]]}, 'from': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'to': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'relationView': {'id': '31a07b12-9278-40d8-a1bc-82566667cea8', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'to': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'id': '31a07b12-9278-40d8-a1bc-82566667cea8', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, '0df59df4-230c-44e4-b7e8-3051ea86b805': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '0df59df4-230c-44e4-b7e8-3051ea86b805', 'sourceElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 19]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 43]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'08df98f2-9f45-498c-9afd-ef19f3c7ccc1': {'_type': 'org.uengine.uml.model.Class', 'id': '08df98f2-9f45-498c-9afd-ef19f3c7ccc1', 'name': 'Reservation', 'traceName': 'Reservation', 'namePascalCase': 'Reservation', 'nameCamelCase': 'reservation', 'namePlural': 'reservations', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 29]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 19]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]], 'inputUI': None, 'options': None}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]], 'inputUI': None, 'options': None}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 43]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '08df98f2-9f45-498c-9afd-ef19f3c7ccc1', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '05a64617-0e75-48c7-ab81-093ba54191dd', 'refs': [[[1, 21], [4, 29]]]}, '93122428-0972-42a7-8ae5-4da7bf19dc06': {'_type': 'org.uengine.uml.model.enum', 'id': '93122428-0972-42a7-8ae5-4da7bf19dc06', 'name': 'ReservationStatus', 'traceName': 'ReservationStatus', 'displayName': '예약 상태', 'nameCamelCase': 'reservationStatus', 'namePascalCase': 'ReservationStatus', 'namePlural': 'reservationStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '93122428-0972-42a7-8ae5-4da7bf19dc06', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'PENDING', 'traceName': 'PENDING', 'refs': [[[57, 18], [57, 54]]]}, {'value': 'COMPLETED', 'traceName': 'COMPLETED', 'refs': [[[57, 25], [57, 54]]]}, {'value': 'CANCELLED', 'traceName': 'CANCELLED', 'refs': [[[57, 33], [57, 54]]]}, {'value': 'EXPIRED', 'traceName': 'EXPIRED', 'refs': [[[57, 41], [57, 54]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[57, 5], [57, 54]]]}, '422ae07a-98cb-4eaf-9e78-9459a4eab391': {'_type': 'org.uengine.uml.model.vo.Class', 'id': '422ae07a-98cb-4eaf-9e78-9459a4eab391', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': '422ae07a-98cb-4eaf-9e78-9459a4eab391', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'commands': [], 'description': 'Reservation 애그리게이트는 도서 예약의 전체 라이프사이클을 관리하며, 예약 상태(ReservationStatus) 관리를 위해 Enumeration을 도입한다. DDL에서 요구하는 모든 필드를 포함하여, 예약의 생성, 상태 변경, 만료, 알림 발송 등 이벤트 기반 처리를 지원한다. Pub/Sub 패턴에 따라 BookManagement 컨텍스트로부터 도서 상태 변경 이벤트를 구독하고, LoanHistory 컨텍스트로 이력 이벤트를 발행할 수 있도록 필요한 속성들을 포함한다. ReservationStatus는 예약의 상태(예약중, 예약완료, 예약취소, 예약만료)를 명확히 구분하기 위해 Enumeration으로 정의한다. ValueObject는 별도로 필요하지 않으며, 모든 속성은 애그리게이트에 직접 포함한다.', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'x': 1755.0, 'y': 480.0, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Reservation', 'traceName': 'Reservation', 'displayName': '예약', 'nameCamelCase': 'reservation', 'namePascalCase': 'Reservation', 'namePlural': 'reservations', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[1, 21], [4, 29]]]}, 'targetElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 26]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 27]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 30]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 46]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'List<BookStatusHistory>', 'isCopy': False, 'isKey': False, 'name': 'statusHistories', 'traceName': 'statusHistories', 'nameCamelCase': 'statusHistories', 'namePascalCase': 'StatusHistories', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': True, 'refs': [[[44, 14], [51, 15]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'266ee095-c338-42f1-aacc-edd2ee7fa636': {'_type': 'org.uengine.uml.model.Class', 'id': '266ee095-c338-42f1-aacc-edd2ee7fa636', 'name': 'Book', 'traceName': 'Book', 'namePascalCase': 'Book', 'nameCamelCase': 'book', 'namePlural': 'books', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 26]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 27]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 30]]], 'inputUI': None, 'options': None}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 46]]], 'inputUI': None, 'options': None}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'inputUI': None, 'options': None}, {'className': 'List<BookStatusHistory>', 'isCopy': False, 'isKey': False, 'name': 'statusHistories', 'traceName': 'statusHistories', 'nameCamelCase': 'statusHistories', 'namePascalCase': 'StatusHistories', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': True, 'refs': [[[44, 14], [51, 15]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '266ee095-c338-42f1-aacc-edd2ee7fa636', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'refs': [[[4, 9], [4, 31]]]}, 'a03f3a1a-c315-49de-85e0-3604b1f4e94b': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'name': 'BookStatusHistory', 'traceName': 'BookStatusHistory', 'displayName': '도서 상태 변경 이력', 'namePascalCase': 'BookStatusHistory', 'nameCamelCase': 'bookStatusHistory', 'namePlural': 'bookStatusHistories', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[45, 5], [45, 41]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- historyId: Integer'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- previousStatus: BookStatus'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 45]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- newStatus: BookStatus'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 29]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeReason: String'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 26]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changedBy: String'}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeDate: Date'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': [[[44, 14], [51, 15]]]}, 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISPOSED', 'traceName': 'DISPOSED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'refs': [[[30, 5], [30, 51]]]}, 'cc0d6d28-facf-4c6f-b76a-55c071300073': {'_type': 'org.uengine.uml.model.enum', 'id': 'cc0d6d28-facf-4c6f-b76a-55c071300073', 'name': 'BookCategory', 'traceName': 'BookCategory', 'displayName': '도서 카테고리', 'nameCamelCase': 'bookCategory', 'namePascalCase': 'BookCategory', 'namePlural': 'bookCategories', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cc0d6d28-facf-4c6f-b76a-55c071300073', 'x': 950, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'NOVEL', 'traceName': 'NOVEL', 'refs': [[[29, 20], [29, 21]]]}, {'value': 'NONFICTION', 'traceName': 'NONFICTION', 'refs': [[[29, 26], [29, 28]]]}, {'value': 'ACADEMIC', 'traceName': 'ACADEMIC', 'refs': [[[29, 33], [29, 34]]]}, {'value': 'MAGAZINE', 'traceName': 'MAGAZINE', 'refs': [[[29, 39], [29, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[29, 5], [29, 46]]]}}, 'relations': {'f781ca27-13ef-4f77-ab36-6d1c1b80581e': {'name': 'BookStatus', 'id': 'f781ca27-13ef-4f77-ab36-6d1c1b80581e', '_type': 'org.uengine.uml.model.Relation', 'sourceElement': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'name': 'BookStatusHistory', 'traceName': 'BookStatusHistory', 'displayName': '도서 상태 변경 이력', 'namePascalCase': 'BookStatusHistory', 'nameCamelCase': 'bookStatusHistory', 'namePlural': 'bookStatusHistories', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[45, 5], [45, 41]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- historyId: Integer'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- previousStatus: BookStatus'}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 45]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- newStatus: BookStatus'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 29]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeReason: String'}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 26]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changedBy: String'}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 50]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- changeDate: Date'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': [[[44, 14], [51, 15]]]}, 'targetElement': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISPOSED', 'traceName': 'DISPOSED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': ['f781ca27-13ef-4f77-ab36-6d1c1b80581e'], 'refs': [[[30, 5], [30, 51]]]}, 'from': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'to': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'selected': False, 'relationView': {'id': 'f781ca27-13ef-4f77-ab36-6d1c1b80581e', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': 'a03f3a1a-c315-49de-85e0-3604b1f4e94b', 'to': 'cd3b5a11-7a6b-4e7f-876d-4256034e33bb', 'needReconnect': True}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1', 'relationType': 'Realization', 'fromLabel': '', 'toLabel': ''}}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'f4a1693c-c71c-4f60-af61-229e83a16e4c', 'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'commands': [], 'description': 'BookManagement 컨텍스트의 도메인 요구사항과 DDL, 이벤트 흐름, 컨텍스트 통합 패턴을 분석한 결과, Book Aggregate는 도서의 전체 생애주기와 상태 변화를 관리해야 한다. 도서의 상태(status)는 BookStatus Enumeration으로, 카테고리(category)는 BookCategory Enumeration으로 명확하게 구분한다. 폐기 관련 속성(disposalDate, disposalReason)은 도서의 상태와 직접적으로 연결되므로 Aggregate에 포함한다. 대출/반납 및 예약 컨텍스트와의 Pub/Sub 연동을 위해 상태 변경 이력 추적이 필요하며, 상태 변경 이력(historyId, previousStatus, newStatus, changeReason, changedBy, changeDate)은 별도 Aggregate가 아닌 Book Aggregate 내 List<BookStatusHistory>로 관리한다. BookStatusHistory는 ValueObject로 정의하여 불변성과 일관성을 보장한다. 모든 필수 DDL 필드가 Aggregate 또는 ValueObject에 포함되도록 설계하였다.', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'x': 665.0, 'y': 480.0, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Book', 'traceName': 'Book', 'displayName': '도서', 'nameCamelCase': 'book', 'namePascalCase': 'Book', 'namePlural': 'books', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 9], [4, 31]]]}, 'from': '05a64617-0e75-48c7-ab81-093ba54191dd', 'to': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'relationView': {'id': '0df59df4-230c-44e4-b7e8-3051ea86b805', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '05a64617-0e75-48c7-ab81-093ba54191dd', 'to': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '05a64617-0e75-48c7-ab81-093ba54191dd', 'id': '0df59df4-230c-44e4-b7e8-3051ea86b805', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '702e22f6-5feb-405a-9a92-bf1dbb15a695', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, '5915ce09-78aa-452d-a4d1-ffabdb825b80': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '5915ce09-78aa-452d-a4d1-ffabdb825b80', 'sourceElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 19]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 48]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 25]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[74, 5], [74, 63]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[72, 5], [72, 41]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 30]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 14]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 35]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 24]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'ReservationId', 'isCopy': False, 'isKey': False, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Reservation', 'isOverrideField': True}], 'entities': {'elements': {'767ab11a-12b4-485e-b701-aa54317a36e6': {'_type': 'org.uengine.uml.model.Class', 'id': '767ab11a-12b4-485e-b701-aa54317a36e6', 'name': 'Loan', 'traceName': 'Loan', 'namePascalCase': 'Loan', 'nameCamelCase': 'loan', 'namePlural': 'loans', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 19]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 48]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 25]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]], 'inputUI': None, 'options': None}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 31]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 50]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[74, 5], [74, 63]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[72, 5], [72, 41]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 30]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 14]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 35]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 24]]], 'inputUI': None, 'options': None}, {'className': 'ReservationId', 'isCopy': False, 'isKey': False, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Reservation', 'isOverrideField': True}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '767ab11a-12b4-485e-b701-aa54317a36e6', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'refs': [[[4, 8], [4, 25]]]}, 'c69e4431-db90-49ae-b77c-e0e3976e3122': {'_type': 'org.uengine.uml.model.enum', 'id': 'c69e4431-db90-49ae-b77c-e0e3976e3122', 'name': 'LoanStatus', 'traceName': 'LoanStatus', 'displayName': '대출 상태', 'nameCamelCase': 'loanStatus', 'namePascalCase': 'LoanStatus', 'namePlural': 'loanStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'c69e4431-db90-49ae-b77c-e0e3976e3122', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[39, 18], [39, 20]]]}, {'value': 'OVERDUE', 'traceName': 'OVERDUE', 'refs': [[[39, 25], [39, 26]]]}, {'value': 'RETURNED', 'traceName': 'RETURNED', 'refs': [[[39, 31], [39, 34]]]}, {'value': 'EXTENDED', 'traceName': 'EXTENDED', 'refs': [[[39, 39], [39, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[39, 5], [39, 50]]]}, '89317150-93db-401a-a15e-d0817206aff8': {'_type': 'org.uengine.uml.model.vo.Class', 'id': '89317150-93db-401a-a15e-d0817206aff8', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': '89317150-93db-401a-a15e-d0817206aff8', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}, 'daa64406-ac26-4abf-831e-1ae0b34f7a89': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'daa64406-ac26-4abf-831e-1ae0b34f7a89', 'name': 'ReservationId', 'traceName': 'ReservationId', 'displayName': '', 'namePascalCase': 'ReservationId', 'nameCamelCase': 'reservationId', 'namePlural': 'reservationIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Reservation', 'isOverrideField': True, 'label': '- reservationId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'daa64406-ac26-4abf-831e-1ae0b34f7a89', 'x': 950, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'commands': [], 'description': 'LoanAndReservation 컨텍스트의 핵심 Aggregate는 Loan(대출)이다. 이 Aggregate는 도서 대출, 반납, 연장, 예약 등 도서의 대출 라이프사이클을 관리한다. DDL과 이벤트, 컨텍스트 관계를 분석한 결과, Loan Aggregate에는 loanId(키), memberId, bookId, loanDate, dueDate, returnDate, loanPeriodDays, status, extensionCount, createdAt, updatedAt 등 대출의 주요 속성이 포함되어야 한다. status는 대출 상태를 나타내므로 LoanStatus Enumeration으로 정의한다. LoanHistory 등 이력은 별도 컨텍스트로 관리되므로, Loan Aggregate에는 직접 포함하지 않는다. BookManagement와의 Pub/Sub 관계를 고려해 bookId를 참조 속성으로 포함한다. 모든 속성은 DDL, 이벤트, 컨텍스트 관계에서 근거를 찾아 refs로 연결하였다.', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'x': 1250.0, 'y': 480.0, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Loan', 'traceName': 'Loan', 'displayName': '대출', 'nameCamelCase': 'loan', 'namePascalCase': 'Loan', 'namePlural': 'loans', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 8], [4, 25]]]}, 'targetElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 19]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 43]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'08df98f2-9f45-498c-9afd-ef19f3c7ccc1': {'_type': 'org.uengine.uml.model.Class', 'id': '08df98f2-9f45-498c-9afd-ef19f3c7ccc1', 'name': 'Reservation', 'traceName': 'Reservation', 'namePascalCase': 'Reservation', 'nameCamelCase': 'reservation', 'namePlural': 'reservations', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 29]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 19]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]], 'inputUI': None, 'options': None}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]], 'inputUI': None, 'options': None}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 43]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '08df98f2-9f45-498c-9afd-ef19f3c7ccc1', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '05a64617-0e75-48c7-ab81-093ba54191dd', 'refs': [[[1, 21], [4, 29]]]}, '93122428-0972-42a7-8ae5-4da7bf19dc06': {'_type': 'org.uengine.uml.model.enum', 'id': '93122428-0972-42a7-8ae5-4da7bf19dc06', 'name': 'ReservationStatus', 'traceName': 'ReservationStatus', 'displayName': '예약 상태', 'nameCamelCase': 'reservationStatus', 'namePascalCase': 'ReservationStatus', 'namePlural': 'reservationStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '93122428-0972-42a7-8ae5-4da7bf19dc06', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'PENDING', 'traceName': 'PENDING', 'refs': [[[57, 18], [57, 54]]]}, {'value': 'COMPLETED', 'traceName': 'COMPLETED', 'refs': [[[57, 25], [57, 54]]]}, {'value': 'CANCELLED', 'traceName': 'CANCELLED', 'refs': [[[57, 33], [57, 54]]]}, {'value': 'EXPIRED', 'traceName': 'EXPIRED', 'refs': [[[57, 41], [57, 54]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[57, 5], [57, 54]]]}, '422ae07a-98cb-4eaf-9e78-9459a4eab391': {'_type': 'org.uengine.uml.model.vo.Class', 'id': '422ae07a-98cb-4eaf-9e78-9459a4eab391', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': '422ae07a-98cb-4eaf-9e78-9459a4eab391', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': 'c57e2041-d169-48dc-a32e-f186d6080c6c', 'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'commands': [], 'description': 'Reservation 애그리게이트는 도서 예약의 전체 라이프사이클을 관리하며, 예약 상태(ReservationStatus) 관리를 위해 Enumeration을 도입한다. DDL에서 요구하는 모든 필드를 포함하여, 예약의 생성, 상태 변경, 만료, 알림 발송 등 이벤트 기반 처리를 지원한다. Pub/Sub 패턴에 따라 BookManagement 컨텍스트로부터 도서 상태 변경 이벤트를 구독하고, LoanHistory 컨텍스트로 이력 이벤트를 발행할 수 있도록 필요한 속성들을 포함한다. ReservationStatus는 예약의 상태(예약중, 예약완료, 예약취소, 예약만료)를 명확히 구분하기 위해 Enumeration으로 정의한다. ValueObject는 별도로 필요하지 않으며, 모든 속성은 애그리게이트에 직접 포함한다.', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'x': 1755.0, 'y': 480.0, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '05a64617-0e75-48c7-ab81-093ba54191dd', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Reservation', 'traceName': 'Reservation', 'displayName': '예약', 'nameCamelCase': 'reservation', 'namePascalCase': 'Reservation', 'namePlural': 'reservations', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[1, 21], [4, 29]]]}, 'from': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'to': '05a64617-0e75-48c7-ab81-093ba54191dd', 'relationView': {'id': '5915ce09-78aa-452d-a4d1-ffabdb825b80', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'to': '05a64617-0e75-48c7-ab81-093ba54191dd', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '2d968424-0df5-4a72-9086-b3a3dcf580ff', 'id': '5915ce09-78aa-452d-a4d1-ffabdb825b80', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '05a64617-0e75-48c7-ab81-093ba54191dd', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, '8a12f8b7-d0ef-46c7-a068-09754b3fd6a5': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '8a12f8b7-d0ef-46c7-a068-09754b3fd6a5', 'sourceElement': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookRegistered'], 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'controllerInfo': {'apiPath': 'createbook', 'method': 'POST', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 31]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 36]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 32]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 35]]]}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 51]]]}], 'description': None, 'id': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'style': '{}', 'width': 100, 'x': 571.0, 'y': 280.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'CreateBook', 'traceName': 'CreateBook', 'displayName': '도서 등록', 'nameCamelCase': 'createBook', 'namePascalCase': 'CreateBook', 'namePlural': 'createBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'POST'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[15, 56], [15, 99]]], 'referencedSiteMapId': 'book-create-command'}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'elementView': {'angle': 0, 'height': 115, 'id': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'style': '{}', 'width': 100, 'x': 759.0, 'y': 280.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 31]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[26, 5], [26, 36]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 32]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 35]]]}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 51]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 38]]]}], 'hexagonalView': {'height': 0, 'id': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookRegistered', 'traceName': 'BookRegistered', 'displayName': '도서 등록됨', 'nameCamelCase': 'bookRegistered', 'namePascalCase': 'BookRegistered', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'refs': [[[7, 3], [7, 16]]]}, 'from': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'to': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'relationView': {'id': '8a12f8b7-d0ef-46c7-a068-09754b3fd6a5', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'to': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '74f03d7c-57b6-4356-a3d3-cd92f767e974', 'id': '8a12f8b7-d0ef-46c7-a068-09754b3fd6a5', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': 'c42ea2bb-036b-41c7-9c04-e6b4f8614f55', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, 'b951ffb7-856a-4f32-897f-8db280071524': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': 'b951ffb7-856a-4f32-897f-8db280071524', 'sourceElement': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookStatusChanged'], 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'controllerInfo': {'apiPath': 'editbook', 'method': 'PUT', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[25, 5], [25, 31]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[27, 5], [27, 32]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[28, 5], [28, 35]]]}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[29, 5], [29, 51]]]}], 'description': None, 'id': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'style': '{}', 'width': 100, 'x': 571.0, 'y': 408.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'EditBook', 'traceName': 'EditBook', 'displayName': '도서 정보 수정', 'nameCamelCase': 'editBook', 'namePascalCase': 'EditBook', 'namePlural': 'editBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'PUT'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[15, 1], [15, 51]]], 'referencedSiteMapId': 'book-edit-command'}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'elementView': {'angle': 0, 'height': 115, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'style': '{}', 'width': 100, 'x': 759.0, 'y': 408.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[46, 5], [46, 24]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 19]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 56]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 17]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 14]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 32]]]}], 'hexagonalView': {'height': 0, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookStatusChanged', 'traceName': 'BookStatusChanged', 'displayName': '도서 상태 변경됨', 'nameCamelCase': 'bookStatusChanged', 'namePascalCase': 'BookStatusChanged', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'refs': [[[8, 3], [8, 19]]]}, 'from': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'to': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'relationView': {'id': 'b951ffb7-856a-4f32-897f-8db280071524', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'to': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': 'f0037ce9-a1c6-4655-a6eb-506698828527', 'id': 'b951ffb7-856a-4f32-897f-8db280071524', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, '36414565-ff9d-4d18-bac0-a915ec983777': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '36414565-ff9d-4d18-bac0-a915ec983777', 'sourceElement': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookDisposed'], 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'controllerInfo': {'apiPath': 'disposebook', 'method': 'DELETE', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]]}], 'description': None, 'id': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'style': '{}', 'width': 100, 'x': 571.0, 'y': 536.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'DisposeBook', 'traceName': 'DisposeBook', 'displayName': '도서 폐기 처리', 'nameCamelCase': 'disposeBook', 'namePascalCase': 'DisposeBook', 'namePlural': 'disposeBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'DELETE'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[15, 263], [15, 301]]], 'referencedSiteMapId': 'book-dispose-command'}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'elementView': {'angle': 0, 'height': 115, 'id': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'style': '{}', 'width': 100, 'x': 759.0, 'y': 536.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[30, 5], [30, 51]]]}], 'hexagonalView': {'height': 0, 'id': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookDisposed', 'traceName': 'BookDisposed', 'displayName': '도서 폐기됨', 'nameCamelCase': 'bookDisposed', 'namePascalCase': 'BookDisposed', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'refs': [[[9, 3], [9, 14]]]}, 'from': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'to': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'relationView': {'id': '36414565-ff9d-4d18-bac0-a915ec983777', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'to': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '63e2fe81-0b7d-4f3f-ae13-7e9bd3fdafee', 'id': '36414565-ff9d-4d18-bac0-a915ec983777', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '196b7475-3455-4a48-89ac-1c73c5f6a636', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, '1e1eb09e-c002-4c96-a69b-e7af410dc78d': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '1e1eb09e-c002-4c96-a69b-e7af410dc78d', 'sourceElement': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookLoaned'], 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'controllerInfo': {'apiPath': 'loanbook', 'method': 'POST', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]]}], 'description': None, 'id': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'style': '{}', 'width': 100, 'x': 1156.0, 'y': 280.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'LoanBook', 'traceName': 'LoanBook', 'displayName': '도서 대출', 'nameCamelCase': 'loanBook', 'namePascalCase': 'LoanBook', 'namePlural': 'loanBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'POST'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[18, 52], [18, 79]]], 'referencedSiteMapId': None}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'elementView': {'angle': 0, 'height': 115, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'style': '{}', 'width': 100, 'x': 1344.0, 'y': 280.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 30]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 30]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'hexagonalView': {'height': 0, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookLoaned', 'traceName': 'BookLoaned', 'displayName': '도서 대출됨', 'nameCamelCase': 'bookLoaned', 'namePascalCase': 'BookLoaned', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[7, 3], [94, 61]]]}, 'from': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'to': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'relationView': {'id': '1e1eb09e-c002-4c96-a69b-e7af410dc78d', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'to': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '121903fb-a9e7-4515-a0e7-dcae48b2de21', 'id': '1e1eb09e-c002-4c96-a69b-e7af410dc78d', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, '44d08476-eccb-4bf6-85d5-071168b61dae': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '44d08476-eccb-4bf6-85d5-071168b61dae', 'sourceElement': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookReturned'], 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'controllerInfo': {'apiPath': 'returnbook', 'method': 'PUT', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}], 'description': None, 'id': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'style': '{}', 'width': 100, 'x': 1156.0, 'y': 408.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'ReturnBook', 'traceName': 'ReturnBook', 'displayName': '도서 반납', 'nameCamelCase': 'returnBook', 'namePascalCase': 'ReturnBook', 'namePlural': 'returnBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'PUT'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[18, 4], [18, 5]]], 'referencedSiteMapId': None}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'elementView': {'angle': 0, 'height': 115, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'style': '{}', 'width': 100, 'x': 1344.0, 'y': 408.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'hexagonalView': {'height': 0, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookReturned', 'traceName': 'BookReturned', 'displayName': '도서 반납됨', 'nameCamelCase': 'bookReturned', 'namePascalCase': 'BookReturned', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[9, 3], [140, 46]]]}, 'from': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'to': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'relationView': {'id': '44d08476-eccb-4bf6-85d5-071168b61dae', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'to': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '0fdc6d72-735b-4870-bf18-9d18827775b6', 'id': '44d08476-eccb-4bf6-85d5-071168b61dae', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, '100d0d56-08a1-43a8-b393-b52feebc7d80': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '100d0d56-08a1-43a8-b393-b52feebc7d80', 'sourceElement': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['LoanExtended'], 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'controllerInfo': {'apiPath': 'extendloan', 'method': 'PUT', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionDays', 'traceName': 'extensionDays', 'nameCamelCase': 'extensionDays', 'namePascalCase': 'ExtensionDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]]}], 'description': None, 'id': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'style': '{}', 'width': 100, 'x': 1156.0, 'y': 536.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'ExtendLoan', 'traceName': 'ExtendLoan', 'displayName': '대출 연장', 'nameCamelCase': 'extendLoan', 'namePascalCase': 'ExtendLoan', 'namePlural': 'extendLoans', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'PUT'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[24, 1], [24, 2]]], 'referencedSiteMapId': None}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'elementView': {'angle': 0, 'height': 115, 'id': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'style': '{}', 'width': 100, 'x': 1344.0, 'y': 536.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 35]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 30]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 31]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'hexagonalView': {'height': 0, 'id': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'LoanExtended', 'traceName': 'LoanExtended', 'displayName': '대출 연장됨', 'nameCamelCase': 'loanExtended', 'namePascalCase': 'LoanExtended', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[10, 3], [162, 48]]]}, 'from': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'to': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'relationView': {'id': '100d0d56-08a1-43a8-b393-b52feebc7d80', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'to': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': 'd206f752-6c54-4d20-b400-d8bde21fb87c', 'id': '100d0d56-08a1-43a8-b393-b52feebc7d80', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': 'b453d5ab-a784-4146-afb7-0d7467935f86', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, 'd1fcee52-26ec-4111-aa9c-c853eb9d9752': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': 'd1fcee52-26ec-4111-aa9c-c853eb9d9752', 'sourceElement': {'_type': 'org.uengine.modeling.model.Command', 'outputEvents': ['BookReserved'], 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'controllerInfo': {'apiPath': 'reservebook', 'method': 'POST', 'fullApiPath': ''}, 'fieldDescriptors': [{'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 34]], [[120, 6], [120, 9]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 24]], [[121, 6], [121, 11]]]}], 'description': None, 'id': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'elementView': {'_type': 'org.uengine.modeling.model.Command', 'height': 115, 'id': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'style': '{}', 'width': 100, 'x': 1661.0, 'y': 280.0, 'z-index': 999}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.CommandHexagonal', 'height': 0, 'id': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'style': '{}', 'width': 0, 'x': 0, 'y': 0}, 'isRestRepository': False, 'name': 'ReserveBook', 'traceName': 'ReserveBook', 'displayName': '도서 예약 신청', 'nameCamelCase': 'reserveBook', 'namePascalCase': 'ReserveBook', 'namePlural': 'reserveBooks', 'relationCommandInfo': [], 'relationEventInfo': [], 'restRepositoryInfo': {'method': 'POST'}, 'rotateStatus': False, 'selected': False, 'trigger': '@PrePersist', 'refs': [[[118, 36], [118, 50]]], 'referencedSiteMapId': None}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'elementView': {'angle': 0, 'height': 115, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'style': '{}', 'width': 100, 'x': 1849.0, 'y': 280.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 34]], [[120, 6], [120, 9]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 24]], [[121, 6], [121, 11]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]]}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]]}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 37]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]]}], 'hexagonalView': {'height': 0, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookReserved', 'traceName': 'BookReserved', 'displayName': '도서 예약됨', 'nameCamelCase': 'bookReserved', 'namePascalCase': 'BookReserved', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[114, 12], [129, 31]]]}, 'from': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'to': '5c6fc329-5664-44a0-9f98-e246a845f943', 'relationView': {'id': 'd1fcee52-26ec-4111-aa9c-c853eb9d9752', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'to': '5c6fc329-5664-44a0-9f98-e246a845f943', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '28fa70a1-ce35-4ccc-8be8-e3aa5e675d7b', 'id': 'd1fcee52-26ec-4111-aa9c-c853eb9d9752', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '5c6fc329-5664-44a0-9f98-e246a845f943', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, 'ca33a72d-6b1b-427a-93ad-8ccd844d95d7': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': 'ca33a72d-6b1b-427a-93ad-8ccd844d95d7', 'sourceElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'elementView': {'angle': 0, 'height': 115, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'style': '{}', 'width': 100, 'x': 759.0, 'y': 408.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[46, 5], [46, 24]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'previousStatus', 'traceName': 'previousStatus', 'nameCamelCase': 'previousStatus', 'namePascalCase': 'PreviousStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[47, 5], [47, 19]]]}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'newStatus', 'traceName': 'newStatus', 'nameCamelCase': 'newStatus', 'namePascalCase': 'NewStatus', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 56]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 17]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 14]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[51, 5], [51, 32]]]}], 'hexagonalView': {'height': 0, 'id': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookStatusChanged', 'traceName': 'BookStatusChanged', 'displayName': '도서 상태 변경됨', 'nameCamelCase': 'bookStatusChanged', 'namePascalCase': 'BookStatusChanged', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '702e22f6-5feb-405a-9a92-bf1dbb15a695'}, 'boundedContext': {'id': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'refs': [[[8, 3], [8, 19]]]}, 'targetElement': {'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'description': '도서 상태가 변경될 때마다 대출/예약 컨텍스트에 해당 변경을 반영하여 대출 가능 여부 및 예약 상태를 자동으로 관리하기 위함입니다.', 'elementView': {'height': 115, 'width': 100, 'x': 1661.0, 'y': 536.0, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', '_type': 'org.uengine.modeling.model.Policy'}, 'fieldDescriptors': [], 'hexagonalView': {'height': 20, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', 'subWidth': 100, 'width': 20, '_type': 'org.uengine.modeling.model.PolicyHexagonal'}, 'isSaga': False, 'name': 'SyncLoanStatusOnBookStatusChange', 'traceName': 'SyncLoanStatusOnBookStatusChange', 'displayName': '도서 상태 변경 시 대출/예약 상태 동기화', 'nameCamelCase': 'syncLoanStatusOnBookStatusChange', 'namePascalCase': 'SyncLoanStatusOnBookStatusChange', 'namePlural': 'syncLoanStatusOnBookStatusChanges', 'oldName': '', 'rotateStatus': False, '_type': 'org.uengine.modeling.model.Policy', 'refs': [[[129, 15], [130, 83]]], 'sourceBoundedContextId': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'from': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'to': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'relationView': {'id': 'ca33a72d-6b1b-427a-93ad-8ccd844d95d7', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'to': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '5a57f171-c9c0-4bd7-a515-57325465a02e', 'id': 'ca33a72d-6b1b-427a-93ad-8ccd844d95d7', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, 'bd86623e-7f70-4402-8c31-2f8647f5d36b': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': 'bd86623e-7f70-4402-8c31-2f8647f5d36b', 'sourceElement': {'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'description': '도서 상태가 변경될 때마다 대출/예약 컨텍스트에 해당 변경을 반영하여 대출 가능 여부 및 예약 상태를 자동으로 관리하기 위함입니다.', 'elementView': {'height': 115, 'width': 100, 'x': 1661.0, 'y': 536.0, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', '_type': 'org.uengine.modeling.model.Policy'}, 'fieldDescriptors': [], 'hexagonalView': {'height': 20, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', 'subWidth': 100, 'width': 20, '_type': 'org.uengine.modeling.model.PolicyHexagonal'}, 'isSaga': False, 'name': 'SyncLoanStatusOnBookStatusChange', 'traceName': 'SyncLoanStatusOnBookStatusChange', 'displayName': '도서 상태 변경 시 대출/예약 상태 동기화', 'nameCamelCase': 'syncLoanStatusOnBookStatusChange', 'namePascalCase': 'SyncLoanStatusOnBookStatusChange', 'namePlural': 'syncLoanStatusOnBookStatusChanges', 'oldName': '', 'rotateStatus': False, '_type': 'org.uengine.modeling.model.Policy', 'refs': [[[129, 15], [130, 83]]], 'sourceBoundedContextId': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'elementView': {'angle': 0, 'height': 115, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'style': '{}', 'width': 100, 'x': 1849.0, 'y': 280.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[53, 5], [53, 45]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 34]], [[120, 6], [120, 9]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 24]], [[121, 6], [121, 11]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 55]]]}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 54]]]}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 37]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 29]]]}], 'hexagonalView': {'height': 0, 'id': '5c6fc329-5664-44a0-9f98-e246a845f943', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookReserved', 'traceName': 'BookReserved', 'displayName': '도서 예약됨', 'nameCamelCase': 'bookReserved', 'namePascalCase': 'BookReserved', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[114, 12], [129, 31]]]}, 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'to': '5c6fc329-5664-44a0-9f98-e246a845f943', 'relationView': {'id': 'bd86623e-7f70-4402-8c31-2f8647f5d36b', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'to': '5c6fc329-5664-44a0-9f98-e246a845f943', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'id': 'bd86623e-7f70-4402-8c31-2f8647f5d36b', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '5c6fc329-5664-44a0-9f98-e246a845f943', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, '87206dac-a547-4e55-833e-46941846787f': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': '87206dac-a547-4e55-833e-46941846787f', 'sourceElement': {'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'description': '도서 상태가 변경될 때마다 대출/예약 컨텍스트에 해당 변경을 반영하여 대출 가능 여부 및 예약 상태를 자동으로 관리하기 위함입니다.', 'elementView': {'height': 115, 'width': 100, 'x': 1661.0, 'y': 536.0, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', '_type': 'org.uengine.modeling.model.Policy'}, 'fieldDescriptors': [], 'hexagonalView': {'height': 20, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', 'subWidth': 100, 'width': 20, '_type': 'org.uengine.modeling.model.PolicyHexagonal'}, 'isSaga': False, 'name': 'SyncLoanStatusOnBookStatusChange', 'traceName': 'SyncLoanStatusOnBookStatusChange', 'displayName': '도서 상태 변경 시 대출/예약 상태 동기화', 'nameCamelCase': 'syncLoanStatusOnBookStatusChange', 'namePascalCase': 'SyncLoanStatusOnBookStatusChange', 'namePlural': 'syncLoanStatusOnBookStatusChanges', 'oldName': '', 'rotateStatus': False, '_type': 'org.uengine.modeling.model.Policy', 'refs': [[[129, 15], [130, 83]]], 'sourceBoundedContextId': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'elementView': {'angle': 0, 'height': 115, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'style': '{}', 'width': 100, 'x': 1344.0, 'y': 408.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 29]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'hexagonalView': {'height': 0, 'id': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookReturned', 'traceName': 'BookReturned', 'displayName': '도서 반납됨', 'nameCamelCase': 'bookReturned', 'namePascalCase': 'BookReturned', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[9, 3], [140, 46]]]}, 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'to': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'relationView': {'id': '87206dac-a547-4e55-833e-46941846787f', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'to': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'id': '87206dac-a547-4e55-833e-46941846787f', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '3a490b28-36f7-48ae-9056-e4bd80974f25', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, 'eb8b241c-acff-4a3f-835d-84160b9fc766': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': 'eb8b241c-acff-4a3f-835d-84160b9fc766', 'sourceElement': {'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'aggregate': {'id': '05a64617-0e75-48c7-ab81-093ba54191dd'}, 'description': '도서 상태가 변경될 때마다 대출/예약 컨텍스트에 해당 변경을 반영하여 대출 가능 여부 및 예약 상태를 자동으로 관리하기 위함입니다.', 'elementView': {'height': 115, 'width': 100, 'x': 1661.0, 'y': 536.0, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', '_type': 'org.uengine.modeling.model.Policy'}, 'fieldDescriptors': [], 'hexagonalView': {'height': 20, 'id': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'style': '{}', 'subWidth': 100, 'width': 20, '_type': 'org.uengine.modeling.model.PolicyHexagonal'}, 'isSaga': False, 'name': 'SyncLoanStatusOnBookStatusChange', 'traceName': 'SyncLoanStatusOnBookStatusChange', 'displayName': '도서 상태 변경 시 대출/예약 상태 동기화', 'nameCamelCase': 'syncLoanStatusOnBookStatusChange', 'namePascalCase': 'SyncLoanStatusOnBookStatusChange', 'namePlural': 'syncLoanStatusOnBookStatusChanges', 'oldName': '', 'rotateStatus': False, '_type': 'org.uengine.modeling.model.Policy', 'refs': [[[129, 15], [130, 83]]], 'sourceBoundedContextId': 'f4a1693c-c71c-4f60-af61-229e83a16e4c'}, 'targetElement': {'alertURL': '/static/image/symbol/alert-icon.png', 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'checkAlert': True, 'description': None, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'elementView': {'angle': 0, 'height': 115, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'style': '{}', 'width': 100, 'x': 1344.0, 'y': 280.0, '_type': 'org.uengine.modeling.model.Event'}, 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 38]]]}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 34]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 24]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 30]]]}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 30]]]}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 23]]]}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 50]]]}], 'hexagonalView': {'height': 0, 'id': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'style': '{}', 'width': 0, 'x': 0, 'y': 0, '_type': 'org.uengine.modeling.model.EventHexagonal'}, 'name': 'BookLoaned', 'traceName': 'BookLoaned', 'displayName': '도서 대출됨', 'nameCamelCase': 'bookLoaned', 'namePascalCase': 'BookLoaned', 'namePlural': '', 'relationCommandInfo': [], 'relationPolicyInfo': [], 'rotateStatus': False, 'selected': False, 'trigger': '@PostPersist', '_type': 'org.uengine.modeling.model.Event', 'aggregate': {'id': '2d968424-0df5-4a72-9086-b3a3dcf580ff'}, 'boundedContext': {'id': 'c57e2041-d169-48dc-a32e-f186d6080c6c'}, 'refs': [[[7, 3], [94, 61]]]}, 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'to': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'relationView': {'id': 'eb8b241c-acff-4a3f-835d-84160b9fc766', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'to': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '77bc039e-ce09-41df-ace2-bb5449fa9ff9', 'id': 'eb8b241c-acff-4a3f-835d-84160b9fc766', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '89d7b8e7-0c1e-486a-b3a4-9558652c268d', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}}), isCompleted=False, isFailed=False, logs=[LogModel(created_at='2025-09-18T14:38:10.630600', level='info', message='[ROOT_GRAPH] Starting new event storming generation process'), LogModel(created_at='2025-09-18T14:38:10.632602', level='info', message='[ROOT_GRAPH] Starting bounded context creation process'), LogModel(created_at='2025-09-18T14:38:10.632602', level='info', message='[ROOT_GRAPH] Processing 2 bounded contexts for creation'), LogModel(created_at='2025-09-18T14:38:10.632602', level='info', message="[ROOT_GRAPH] Processing bounded context 1/2: 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:10.632602', level='info', message="[ROOT_GRAPH] Creating new bounded context: 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:10.633606', level='info', message="[ROOT_GRAPH] Successfully created bounded context: 'BookManagement' with ID: 'f4a1693c-c71c-4f60-af61-229e83a16e4c'"), LogModel(created_at='2025-09-18T14:38:10.633606', level='info', message="[ROOT_GRAPH] Processing bounded context 2/2: 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:10.633606', level='info', message="[ROOT_GRAPH] Creating new bounded context: 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:10.633606', level='info', message="[ROOT_GRAPH] Successfully created bounded context: 'LoanAndReservation' with ID: 'c57e2041-d169-48dc-a32e-f186d6080c6c'"), LogModel(created_at='2025-09-18T14:38:10.633606', level='info', message='[ROOT_GRAPH] Bounded context creation completed successfully.'), LogModel(created_at='2025-09-18T14:38:10.637599', level='info', message='[AGGREGATE_SUBGRAPH] Starting aggregate generation process'), LogModel(created_at='2025-09-18T14:38:10.639598', level='info', message='[AGGREGATE_SUBGRAPH] Starting aggregate generation preparation'), LogModel(created_at='2025-09-18T14:38:10.639598', level='info', message="[AGGREGATE_SUBGRAPH] Processing bounded context 'BookManagement' with 1 aggregates"), LogModel(created_at='2025-09-18T14:38:10.639598', level='info', message="[AGGREGATE_SUBGRAPH] Queued aggregate 'Book' in context 'BookManagement' with 18 DDL fields (accumulated: False)"), LogModel(created_at='2025-09-18T14:38:10.639598', level='info', message="[AGGREGATE_SUBGRAPH] Processing bounded context 'LoanAndReservation' with 2 aggregates"), LogModel(created_at='2025-09-18T14:38:10.639598', level='info', message="[AGGREGATE_SUBGRAPH] Queued aggregate 'Loan' in context 'LoanAndReservation' with 18 DDL fields (accumulated: False)"), LogModel(created_at='2025-09-18T14:38:10.639598', level='info', message="[AGGREGATE_SUBGRAPH] Queued aggregate 'Reservation' in context 'LoanAndReservation' with 9 DDL fields (accumulated: True)"), LogModel(created_at='2025-09-18T14:38:10.639598', level='info', message='[AGGREGATE_SUBGRAPH] Preparation completed. Total aggregates to process: 3'), LogModel(created_at='2025-09-18T14:38:10.648600', level='info', message='[AGGREGATE_SUBGRAPH] Selecting next aggregate. Pending: 3, Completed: 0'), LogModel(created_at='2025-09-18T14:38:10.648600', level='info', message="[AGGREGATE_SUBGRAPH] Selected next aggregate: 'Book' in context 'BookManagement' (remaining: 2)"), LogModel(created_at='2025-09-18T14:38:10.652379', level='info', message="[AGGREGATE_SUBGRAPH] Starting preprocessing for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:10.653379', level='info', message="[AGGREGATE_SUBGRAPH] Removing previous elements for fresh start in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:10.653379', level='info', message="[AGGREGATE_SUBGRAPH] Preprocessing completed for aggregate 'Book'. Summary size: 292 chars"), LogModel(created_at='2025-09-18T14:38:10.656378', level='info', message="[AGGREGATE_SUBGRAPH] Setting up DDL fields for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:10.656378', level='info', message="[AGGREGATE_SUBGRAPH] Set 18 DDL fields for aggregate 'Book'"), LogModel(created_at='2025-09-18T14:38:10.659378', level='info', message="[AGGREGATE_SUBGRAPH] Generating aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:15.930942', level='info', message="[AGGREGATE_SUBGRAPH] Executing generation for 'Book' with 7377 tokens"), LogModel(created_at='2025-09-18T14:38:16.041412', level='info', message="[AGGREGATE_SUBGRAPH] Generated 4 actions for aggregate 'Book' (aggregates: 1, VOs: 1, enums: 2)"), LogModel(created_at='2025-09-18T14:38:16.045415', level='info', message="[AGGREGATE_SUBGRAPH] Starting postprocessing for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:16.045415', level='info', message="[AGGREGATE_SUBGRAPH] Processing 4 actions for aggregate 'Book'"), LogModel(created_at='2025-09-18T14:38:16.046413', level='info', message="[AGGREGATE_SUBGRAPH] Filtered to 4 valid actions for aggregate 'Book'"), LogModel(created_at='2025-09-18T14:38:16.046413', level='info', message="[AGGREGATE_SUBGRAPH] All 18 DDL fields successfully included for 'Book'."), LogModel(created_at='2025-09-18T14:38:16.046413', level='info', message="[AGGREGATE_SUBGRAPH] Removing previous elements for 'Book' as this is not accumulated"), LogModel(created_at='2025-09-18T14:38:16.047414', level='info', message="[AGGREGATE_SUBGRAPH] Successfully converted source references for 'Book'"), LogModel(created_at='2025-09-18T14:38:16.049414', level='info', message="[AGGREGATE_SUBGRAPH] Postprocessing completed successfully for aggregate 'Book'. Applied 4 actions to ES value"), LogModel(created_at='2025-09-18T14:38:16.057414', level='info', message="[AGGREGATE_SUBGRAPH] Validating generation for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:16.057414', level='info', message="[AGGREGATE_SUBGRAPH] Aggregate 'Book' generation completed successfully. Progress: 2/16"), LogModel(created_at='2025-09-18T14:38:16.064413', level='info', message='[AGGREGATE_SUBGRAPH] Selecting next aggregate. Pending: 2, Completed: 1'), LogModel(created_at='2025-09-18T14:38:16.064413', level='info', message="[AGGREGATE_SUBGRAPH] Selected next aggregate: 'Loan' in context 'LoanAndReservation' (remaining: 1)"), LogModel(created_at='2025-09-18T14:38:16.072891', level='info', message="[AGGREGATE_SUBGRAPH] Starting preprocessing for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:16.073890', level='info', message="[AGGREGATE_SUBGRAPH] Removing previous elements for fresh start in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:16.074891', level='info', message="[AGGREGATE_SUBGRAPH] Preprocessing completed for aggregate 'Loan'. Summary size: 1427 chars"), LogModel(created_at='2025-09-18T14:38:16.161234', level='info', message="[AGGREGATE_SUBGRAPH] Setting up DDL fields for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:16.161234', level='info', message="[AGGREGATE_SUBGRAPH] Set 18 DDL fields for aggregate 'Loan'"), LogModel(created_at='2025-09-18T14:38:16.165234', level='info', message="[AGGREGATE_SUBGRAPH] Generating aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:16.526584', level='info', message="[AGGREGATE_SUBGRAPH] Executing generation for 'Loan' with 7984 tokens"), LogModel(created_at='2025-09-18T14:38:16.595725', level='info', message="[AGGREGATE_SUBGRAPH] Generated 2 actions for aggregate 'Loan' (aggregates: 1, VOs: 0, enums: 1)"), LogModel(created_at='2025-09-18T14:38:16.602724', level='info', message="[AGGREGATE_SUBGRAPH] Starting postprocessing for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:16.602724', level='info', message="[AGGREGATE_SUBGRAPH] Processing 2 actions for aggregate 'Loan'"), LogModel(created_at='2025-09-18T14:38:16.603723', level='info', message="[AGGREGATE_SUBGRAPH] Filtered to 2 valid actions for aggregate 'Loan'"), LogModel(created_at='2025-09-18T14:38:16.603723', level='warning', message="[AGGREGATE_SUBGRAPH] DDL fields missing for 'Loan': ['notes', 'previousDueDate', 'newDueDate', 'processedBy', 'actionType', 'historyId', 'actionDate']. Routing to fix."), LogModel(created_at='2025-09-18T14:38:16.608725', level='info', message="[AGGREGATE_SUBGRAPH] Starting assignment for 7 missing fields for aggregate 'Loan'"), LogModel(created_at='2025-09-18T14:38:17.025680', level='info', message='[AGGREGATE_SUBGRAPH] Generator proposed assignments for 1 parents and identified 0 invalid properties.'), LogModel(created_at='2025-09-18T14:38:17.025680', level='info', message='[AGGREGATE_SUBGRAPH] Successfully processed all 7 fields (Assigned: 7, Invalid: 0).'), LogModel(created_at='2025-09-18T14:38:17.031687', level='info', message="[AGGREGATE_SUBGRAPH] Starting postprocessing for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:17.031687', level='info', message="[AGGREGATE_SUBGRAPH] Processing 2 actions for aggregate 'Loan'"), LogModel(created_at='2025-09-18T14:38:17.032687', level='info', message="[AGGREGATE_SUBGRAPH] All 18 DDL fields successfully included for 'Loan'."), LogModel(created_at='2025-09-18T14:38:17.033194', level='info', message="[AGGREGATE_SUBGRAPH] Removing previous elements for 'Loan' as this is not accumulated"), LogModel(created_at='2025-09-18T14:38:17.034200', level='info', message="[AGGREGATE_SUBGRAPH] Successfully converted source references for 'Loan'"), LogModel(created_at='2025-09-18T14:38:17.034200', level='info', message="[AGGREGATE_SUBGRAPH] Postprocessing completed successfully for aggregate 'Loan'. Applied 2 actions to ES value"), LogModel(created_at='2025-09-18T14:38:17.040205', level='info', message="[AGGREGATE_SUBGRAPH] Validating generation for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:17.040205', level='info', message="[AGGREGATE_SUBGRAPH] Aggregate 'Loan' generation completed successfully. Progress: 3/16"), LogModel(created_at='2025-09-18T14:38:17.046202', level='info', message='[AGGREGATE_SUBGRAPH] Selecting next aggregate. Pending: 1, Completed: 2'), LogModel(created_at='2025-09-18T14:38:17.046202', level='info', message="[AGGREGATE_SUBGRAPH] Selected next aggregate: 'Reservation' in context 'LoanAndReservation' (remaining: 0)"), LogModel(created_at='2025-09-18T14:38:17.054203', level='info', message="[AGGREGATE_SUBGRAPH] Starting preprocessing for aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:17.056199', level='info', message="[AGGREGATE_SUBGRAPH] Preprocessing completed for aggregate 'Reservation'. Summary size: 2332 chars"), LogModel(created_at='2025-09-18T14:38:17.060202', level='info', message="[AGGREGATE_SUBGRAPH] Setting up DDL fields for aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:17.060202', level='info', message="[AGGREGATE_SUBGRAPH] Set 9 DDL fields for aggregate 'Reservation'"), LogModel(created_at='2025-09-18T14:38:17.064200', level='info', message="[AGGREGATE_SUBGRAPH] Generating aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:17.436706', level='info', message="[AGGREGATE_SUBGRAPH] Executing generation for 'Reservation' with 8257 tokens"), LogModel(created_at='2025-09-18T14:38:17.506032', level='info', message="[AGGREGATE_SUBGRAPH] Generated 2 actions for aggregate 'Reservation' (aggregates: 1, VOs: 0, enums: 1)"), LogModel(created_at='2025-09-18T14:38:17.512031', level='info', message="[AGGREGATE_SUBGRAPH] Starting postprocessing for aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:17.512031', level='info', message="[AGGREGATE_SUBGRAPH] Processing 2 actions for aggregate 'Reservation'"), LogModel(created_at='2025-09-18T14:38:17.513032', level='info', message="[AGGREGATE_SUBGRAPH] Filtered to 2 valid actions for aggregate 'Reservation'"), LogModel(created_at='2025-09-18T14:38:17.513032', level='info', message="[AGGREGATE_SUBGRAPH] All 9 DDL fields successfully included for 'Reservation'."), LogModel(created_at='2025-09-18T14:38:17.517032', level='info', message="[AGGREGATE_SUBGRAPH] Successfully converted source references for 'Reservation'"), LogModel(created_at='2025-09-18T14:38:17.517032', level='info', message="[AGGREGATE_SUBGRAPH] Postprocessing completed successfully for aggregate 'Reservation'. Applied 2 actions to ES value"), LogModel(created_at='2025-09-18T14:38:17.525038', level='info', message="[AGGREGATE_SUBGRAPH] Validating generation for aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:17.525038', level='info', message="[AGGREGATE_SUBGRAPH] Aggregate 'Reservation' generation completed successfully. Progress: 4/16"), LogModel(created_at='2025-09-18T14:38:17.531038', level='info', message='[AGGREGATE_SUBGRAPH] Selecting next aggregate. Pending: 0, Completed: 3'), LogModel(created_at='2025-09-18T14:38:17.531038', level='info', message='[AGGREGATE_SUBGRAPH] All aggregate generations completed successfully. Total processed: 3'), LogModel(created_at='2025-09-18T14:38:17.542551', level='info', message='[AGGREGATE_SUBGRAPH] Aggregate generation process completed successfully. Total processed: 3 aggregates'), LogModel(created_at='2025-09-18T14:38:17.547553', level='info', message='[ROOT_GRAPH] Aggregate creation completed, proceeding to class ID generation'), LogModel(created_at='2025-09-18T14:38:17.560550', level='info', message='[CLASS_ID_SUBGRAPH] Starting class ID generation process'), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message='[CLASS_ID_SUBGRAPH] Starting class ID generation preparation'), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Book' -> 'Loan' (via 'LoanReference')"), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Book' -> 'Reservation' (via 'ReservationReference')"), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Loan' -> 'Book' (via 'BookReference')"), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Loan' -> 'Reservation' (via 'ReservationReference')"), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Reservation' -> 'Book' (via 'BookReference')"), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message='[CLASS_ID_SUBGRAPH] Discovered 5 aggregate references across all bounded contexts'), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message='[CLASS_ID_SUBGRAPH] Queued class ID generation for references: LoanReference, BookReference (aggregate pair: Book <-> Loan)'), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message='[CLASS_ID_SUBGRAPH] Queued class ID generation for references: ReservationReference, BookReference (aggregate pair: Book <-> Reservation)'), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message='[CLASS_ID_SUBGRAPH] Queued class ID generation for references: ReservationReference (aggregate pair: Loan <-> Reservation)'), LogModel(created_at='2025-09-18T14:38:17.563552', level='info', message='[CLASS_ID_SUBGRAPH] Preparation completed. Total class ID generation tasks: 3'), LogModel(created_at='2025-09-18T14:38:17.570550', level='info', message='[CLASS_ID_SUBGRAPH] Selecting next class ID generation task. Pending: 3, Completed: 0'), LogModel(created_at='2025-09-18T14:38:17.571550', level='info', message='[CLASS_ID_SUBGRAPH] Selected next class ID generation task for references: LoanReference, BookReference (remaining: 2)'), LogModel(created_at='2025-09-18T14:38:17.575550', level='info', message='[CLASS_ID_SUBGRAPH] Starting preprocessing for class ID generation. References: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:17.576550', level='info', message='[CLASS_ID_SUBGRAPH] Preprocessing completed for references: LoanReference, BookReference. Summary size: 2973 chars'), LogModel(created_at='2025-09-18T14:38:17.581550', level='info', message='[CLASS_ID_SUBGRAPH] Generating class ID actions for references: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:17.950030', level='info', message='[CLASS_ID_SUBGRAPH] Token usage for references LoanReference, BookReference: 4119/962429'), LogModel(created_at='2025-09-18T14:38:17.950030', level='info', message='[CLASS_ID_SUBGRAPH] Executing class ID generation for references: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.004728', level='info', message='[CLASS_ID_SUBGRAPH] Generated 1 initial actions for references: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.004728', level='info', message='[CLASS_ID_SUBGRAPH] Filtered to 1 valid actions for references: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.004728', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: LoanReference, BookReference. Final actions: 1'), LogModel(created_at='2025-09-18T14:38:18.009729', level='info', message='[CLASS_ID_SUBGRAPH] Starting postprocessing for class ID generation. References: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.011727', level='info', message='[CLASS_ID_SUBGRAPH] Processing 1 actions for references: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.011727', level='info', message='[CLASS_ID_SUBGRAPH] Postprocessing completed successfully for references: LoanReference, BookReference. Applied 2 actions to ES value'), LogModel(created_at='2025-09-18T14:38:18.017728', level='info', message='[CLASS_ID_SUBGRAPH] Validating class ID generation for references: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.017728', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: LoanReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.017728', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation task completed. Progress: 5/16'), LogModel(created_at='2025-09-18T14:38:18.025735', level='info', message='[CLASS_ID_SUBGRAPH] Selecting next class ID generation task. Pending: 2, Completed: 1'), LogModel(created_at='2025-09-18T14:38:18.025735', level='info', message='[CLASS_ID_SUBGRAPH] Selected next class ID generation task for references: ReservationReference, BookReference (remaining: 1)'), LogModel(created_at='2025-09-18T14:38:18.031733', level='info', message='[CLASS_ID_SUBGRAPH] Starting preprocessing for class ID generation. References: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.033243', level='info', message='[CLASS_ID_SUBGRAPH] Preprocessing completed for references: ReservationReference, BookReference. Summary size: 3141 chars'), LogModel(created_at='2025-09-18T14:38:18.039251', level='info', message='[CLASS_ID_SUBGRAPH] Generating class ID actions for references: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.400381', level='info', message='[CLASS_ID_SUBGRAPH] Token usage for references ReservationReference, BookReference: 4174/962429'), LogModel(created_at='2025-09-18T14:38:18.400381', level='info', message='[CLASS_ID_SUBGRAPH] Executing class ID generation for references: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.430538', level='info', message='[CLASS_ID_SUBGRAPH] Generated 1 initial actions for references: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.430538', level='info', message='[CLASS_ID_SUBGRAPH] Filtered to 1 valid actions for references: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.430538', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: ReservationReference, BookReference. Final actions: 1'), LogModel(created_at='2025-09-18T14:38:18.436729', level='info', message='[CLASS_ID_SUBGRAPH] Starting postprocessing for class ID generation. References: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.436729', level='info', message='[CLASS_ID_SUBGRAPH] Processing 1 actions for references: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.436729', level='info', message='[CLASS_ID_SUBGRAPH] Postprocessing completed successfully for references: ReservationReference, BookReference. Applied 2 actions to ES value'), LogModel(created_at='2025-09-18T14:38:18.443864', level='info', message='[CLASS_ID_SUBGRAPH] Validating class ID generation for references: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.443864', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: ReservationReference, BookReference'), LogModel(created_at='2025-09-18T14:38:18.443864', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation task completed. Progress: 6/16'), LogModel(created_at='2025-09-18T14:38:18.452865', level='info', message='[CLASS_ID_SUBGRAPH] Selecting next class ID generation task. Pending: 1, Completed: 2'), LogModel(created_at='2025-09-18T14:38:18.452865', level='info', message='[CLASS_ID_SUBGRAPH] Selected next class ID generation task for references: ReservationReference (remaining: 0)'), LogModel(created_at='2025-09-18T14:38:18.459254', level='info', message='[CLASS_ID_SUBGRAPH] Starting preprocessing for class ID generation. References: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.460254', level='info', message='[CLASS_ID_SUBGRAPH] Preprocessing completed for references: ReservationReference. Summary size: 3311 chars'), LogModel(created_at='2025-09-18T14:38:18.466253', level='info', message='[CLASS_ID_SUBGRAPH] Generating class ID actions for references: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.853208', level='info', message='[CLASS_ID_SUBGRAPH] Token usage for references ReservationReference: 4227/962429'), LogModel(created_at='2025-09-18T14:38:18.853208', level='info', message='[CLASS_ID_SUBGRAPH] Executing class ID generation for references: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.887208', level='info', message='[CLASS_ID_SUBGRAPH] Generated 1 initial actions for references: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.887208', level='info', message='[CLASS_ID_SUBGRAPH] Filtered to 1 valid actions for references: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.887208', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: ReservationReference. Final actions: 1'), LogModel(created_at='2025-09-18T14:38:18.894007', level='info', message='[CLASS_ID_SUBGRAPH] Starting postprocessing for class ID generation. References: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.894007', level='info', message='[CLASS_ID_SUBGRAPH] Processing 1 actions for references: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.895006', level='info', message='[CLASS_ID_SUBGRAPH] Postprocessing completed successfully for references: ReservationReference. Applied 2 actions to ES value'), LogModel(created_at='2025-09-18T14:38:18.903006', level='info', message='[CLASS_ID_SUBGRAPH] Validating class ID generation for references: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.903006', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: ReservationReference'), LogModel(created_at='2025-09-18T14:38:18.903006', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation task completed. Progress: 7/16'), LogModel(created_at='2025-09-18T14:38:18.916006', level='info', message='[CLASS_ID_SUBGRAPH] Selecting next class ID generation task. Pending: 0, Completed: 3'), LogModel(created_at='2025-09-18T14:38:18.916006', level='info', message='[CLASS_ID_SUBGRAPH] All class ID generation tasks completed successfully. Total processed: 3'), LogModel(created_at='2025-09-18T14:38:18.931011', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation process completed successfully. Total processed: 3 reference groups'), LogModel(created_at='2025-09-18T14:38:18.938527', level='info', message='[ROOT_GRAPH] Class ID generation completed, proceeding to command actions'), LogModel(created_at='2025-09-18T14:38:18.954527', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Starting command actions generation process'), LogModel(created_at='2025-09-18T14:38:18.959528', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Starting command actions generation preparation'), LogModel(created_at='2025-09-18T14:38:19.347432', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Found 1 aggregates in bounded context '도서 관리': ['Book']"), LogModel(created_at='2025-09-18T14:38:19.347432', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Found 2 aggregates in bounded context '대출/반납 및 예약': ['Loan', 'Reservation']"), LogModel(created_at='2025-09-18T14:38:19.347432', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Preparation completed. Total aggregates to process: 3 across 2 bounded contexts'), LogModel(created_at='2025-09-18T14:38:19.359438', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Starting event assignment to aggregates'), LogModel(created_at='2025-09-18T14:38:19.361430', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Single aggregate 'Book' found in BC 'BookManagement', assigning all 3 events"), LogModel(created_at='2025-09-18T14:38:19.363433', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Multiple aggregates found in BC 'LoanAndReservation', using LLM to assign 4 events to 2 aggregates"), LogModel(created_at='2025-09-18T14:38:19.784400', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Event assignment completed for BC 'LoanAndReservation': 2 aggregates assigned"), LogModel(created_at='2025-09-18T14:38:19.784400', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Assigned 3 events to aggregate 'Loan': ['BookLoaned', 'BookReturned', 'LoanExtended']"), LogModel(created_at='2025-09-18T14:38:19.784400', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Assigned 1 events to aggregate 'Reservation': ['BookReserved']"), LogModel(created_at='2025-09-18T14:38:19.784400', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Event assignment to aggregates completed'), LogModel(created_at='2025-09-18T14:38:19.799401', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Selecting next command actions generation. Pending: 3, Completed: 0'), LogModel(created_at='2025-09-18T14:38:19.799401', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Selected next aggregate: 'Book' in context 'BookManagement' (remaining: 2)"), LogModel(created_at='2025-09-18T14:38:19.899211', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Starting preprocessing for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:19.902210', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Preprocessing completed for aggregate 'Book'. Summary size: 3642 chars"), LogModel(created_at='2025-09-18T14:38:19.912211', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Generating command actions for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:20.326264', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Token usage for aggregate 'Book': 8005/962429"), LogModel(created_at='2025-09-18T14:38:20.326264', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Executing command actions generation for aggregate 'Book'"), LogModel(created_at='2025-09-18T14:38:20.397079', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Command actions generated successfully for aggregate 'Book'. Commands: 3, Events: 3, ReadModels: 2, Total: 8"), LogModel(created_at='2025-09-18T14:38:20.407585', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Starting postprocessing for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:20.407585', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Successfully converted source references for aggregate 'Book'"), LogModel(created_at='2025-09-18T14:38:20.407585', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Filtered 8 -> 8 valid actions for aggregate 'Book'"), LogModel(created_at='2025-09-18T14:38:20.409866', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Actions after duplicate filtering for aggregate 'Book': 8"), LogModel(created_at='2025-09-18T14:38:20.413448', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Postprocessing completed successfully for aggregate 'Book'. Final actions applied: 8"), LogModel(created_at='2025-09-18T14:38:20.424692', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Validating command actions generation for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-09-18T14:38:20.424692', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Command actions generation validated and completed for aggregate 'Book'. Progress: 8/16"), LogModel(created_at='2025-09-18T14:38:20.440310', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Selecting next command actions generation. Pending: 2, Completed: 1'), LogModel(created_at='2025-09-18T14:38:20.440310', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Selected next aggregate: 'Loan' in context 'LoanAndReservation' (remaining: 1)"), LogModel(created_at='2025-09-18T14:38:20.456308', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Starting preprocessing for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:20.459311', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Preprocessing completed for aggregate 'Loan'. Summary size: 5869 chars"), LogModel(created_at='2025-09-18T14:38:20.468307', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Generating command actions for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:20.830604', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Token usage for aggregate 'Loan': 8923/962429"), LogModel(created_at='2025-09-18T14:38:20.830604', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Executing command actions generation for aggregate 'Loan'"), LogModel(created_at='2025-09-18T14:38:20.892878', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Command actions generated successfully for aggregate 'Loan'. Commands: 3, Events: 3, ReadModels: 2, Total: 8"), LogModel(created_at='2025-09-18T14:38:20.904879', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Starting postprocessing for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:20.904879', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Successfully converted source references for aggregate 'Loan'"), LogModel(created_at='2025-09-18T14:38:20.904879', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Filtered 8 -> 8 valid actions for aggregate 'Loan'"), LogModel(created_at='2025-09-18T14:38:20.909257', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Actions after duplicate filtering for aggregate 'Loan': 8"), LogModel(created_at='2025-09-18T14:38:20.911258', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Postprocessing completed successfully for aggregate 'Loan'. Final actions applied: 8"), LogModel(created_at='2025-09-18T14:38:20.923278', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Validating command actions generation for aggregate 'Loan' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:20.923278', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Command actions generation validated and completed for aggregate 'Loan'. Progress: 9/16"), LogModel(created_at='2025-09-18T14:38:20.939789', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Selecting next command actions generation. Pending: 1, Completed: 2'), LogModel(created_at='2025-09-18T14:38:20.939789', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Selected next aggregate: 'Reservation' in context 'LoanAndReservation' (remaining: 0)"), LogModel(created_at='2025-09-18T14:38:20.955788', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Starting preprocessing for aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:20.959792', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Preprocessing completed for aggregate 'Reservation'. Summary size: 8023 chars"), LogModel(created_at='2025-09-18T14:38:20.968791', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Generating command actions for aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:21.344729', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Token usage for aggregate 'Reservation': 9611/962429"), LogModel(created_at='2025-09-18T14:38:21.344729', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Executing command actions generation for aggregate 'Reservation'"), LogModel(created_at='2025-09-18T14:38:21.407750', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Command actions generated successfully for aggregate 'Reservation'. Commands: 1, Events: 1, ReadModels: 1, Total: 3"), LogModel(created_at='2025-09-18T14:38:21.418750', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Starting postprocessing for aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:21.419750', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Successfully converted source references for aggregate 'Reservation'"), LogModel(created_at='2025-09-18T14:38:21.419750', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Filtered 3 -> 3 valid actions for aggregate 'Reservation'"), LogModel(created_at='2025-09-18T14:38:21.425756', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Actions after duplicate filtering for aggregate 'Reservation': 3"), LogModel(created_at='2025-09-18T14:38:21.427924', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Postprocessing completed successfully for aggregate 'Reservation'. Final actions applied: 3"), LogModel(created_at='2025-09-18T14:38:21.440435', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Validating command actions generation for aggregate 'Reservation' in context 'LoanAndReservation'"), LogModel(created_at='2025-09-18T14:38:21.440435', level='info', message="[COMMAND_ACTIONS_SUBGRAPH] Command actions generation validated and completed for aggregate 'Reservation'. Progress: 10/16"), LogModel(created_at='2025-09-18T14:38:21.462998', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Selecting next command actions generation. Pending: 0, Completed: 3'), LogModel(created_at='2025-09-18T14:38:21.462998', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] All command actions generations completed successfully. Total processed: 3 aggregates'), LogModel(created_at='2025-09-18T14:38:21.485703', level='info', message='[COMMAND_ACTIONS_SUBGRAPH] Command actions processing completed successfully. Total processed: 3 aggregates'), LogModel(created_at='2025-09-18T14:38:21.495788', level='info', message='[ROOT_GRAPH] Command actions creation completed, proceeding to policy actions'), LogModel(created_at='2025-09-18T14:38:21.512269', level='info', message='[POLICY_ACTIONS_SUBGRAPH] Starting policy actions generation process'), LogModel(created_at='2025-09-18T14:38:21.518269', level='info', message='[POLICY_ACTIONS_SUBGRAPH] Starting policy actions generation preparation'), LogModel(created_at='2025-09-18T14:38:21.518269', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Queued policy actions generation for bounded context: '도서 관리'"), LogModel(created_at='2025-09-18T14:38:21.518269', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Queued policy actions generation for bounded context: '대출/반납 및 예약'"), LogModel(created_at='2025-09-18T14:38:21.518269', level='info', message='[POLICY_ACTIONS_SUBGRAPH] Preparation completed. Total bounded contexts to process: 2'), LogModel(created_at='2025-09-18T14:38:21.536409', level='info', message='[POLICY_ACTIONS_SUBGRAPH] Selecting next policy actions generation. Pending: 2, Completed: 0'), LogModel(created_at='2025-09-18T14:38:21.537413', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Selected policy action generation for bounded context: '도서 관리' (remaining: 1)"), LogModel(created_at='2025-09-18T14:38:21.548497', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Starting preprocessing for policy actions in bounded context: '도서 관리'"), LogModel(created_at='2025-09-18T14:38:21.551500', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Preprocessing completed for bounded context: '도서 관리'. Summary size: 2647 chars"), LogModel(created_at='2025-09-18T14:38:21.563497', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Generating policy actions for bounded context: '도서 관리'"), LogModel(created_at='2025-09-18T14:38:21.962375', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Token usage for bounded context '도서 관리': 6832/962429"), LogModel(created_at='2025-09-18T14:38:21.962375', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Executing policy actions generation for bounded context '도서 관리' with 6832 tokens"), LogModel(created_at='2025-09-18T14:38:21.988552', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Generated 1 policy actions for bounded context: '도서 관리' from 2 extracted policies"), LogModel(created_at='2025-09-18T14:38:22.002107', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Starting postprocessing for policy actions in bounded context: '도서 관리'"), LogModel(created_at='2025-09-18T14:38:22.002107', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Applying 1 policy actions for bounded context: '도서 관리'"), LogModel(created_at='2025-09-18T14:38:22.002107', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Successfully converted source references for '도서 관리'"), LogModel(created_at='2025-09-18T14:38:22.012535', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Postprocessing completed successfully for bounded context: '도서 관리'. Applied 1 policy actions to ES value"), LogModel(created_at='2025-09-18T14:38:22.028418', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Validating policy actions generation for bounded context: '도서 관리'"), LogModel(created_at='2025-09-18T14:38:22.028418', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Policy action generation completed successfully for bounded context: '도서 관리'. Progress: 11/16"), LogModel(created_at='2025-09-18T14:38:22.047896', level='info', message='[POLICY_ACTIONS_SUBGRAPH] Selecting next policy actions generation. Pending: 1, Completed: 1'), LogModel(created_at='2025-09-18T14:38:22.047896', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Selected policy action generation for bounded context: '대출/반납 및 예약' (remaining: 0)"), LogModel(created_at='2025-09-18T14:38:22.058847', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Starting preprocessing for policy actions in bounded context: '대출/반납 및 예약'"), LogModel(created_at='2025-09-18T14:38:22.061468', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Preprocessing completed for bounded context: '대출/반납 및 예약'. Summary size: 3078 chars"), LogModel(created_at='2025-09-18T14:38:22.074277', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Generating policy actions for bounded context: '대출/반납 및 예약'"), LogModel(created_at='2025-09-18T14:38:22.483719', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Token usage for bounded context '대출/반납 및 예약': 7251/962429"), LogModel(created_at='2025-09-18T14:38:22.483719', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Executing policy actions generation for bounded context '대출/반납 및 예약' with 7251 tokens"), LogModel(created_at='2025-09-18T14:38:22.506721', level='info', message="[POLICY_ACTIONS_SUBGRAPH] No policy actions generated for bounded context: '대출/반납 및 예약'. Proceeding to completion."), LogModel(created_at='2025-09-18T14:38:22.526724', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Validating policy actions generation for bounded context: '대출/반납 및 예약'"), LogModel(created_at='2025-09-18T14:38:22.526724', level='info', message="[POLICY_ACTIONS_SUBGRAPH] Policy action generation completed successfully for bounded context: '대출/반납 및 예약'. Progress: 12/16"), LogModel(created_at='2025-09-18T14:38:22.549139', level='info', message='[POLICY_ACTIONS_SUBGRAPH] Selecting next policy actions generation. Pending: 0, Completed: 2'), LogModel(created_at='2025-09-18T14:38:22.549139', level='info', message='[POLICY_ACTIONS_SUBGRAPH] All policy actions generation completed successfully. Total processed: 2 bounded contexts'), LogModel(created_at='2025-09-18T14:38:22.569140', level='info', message='[POLICY_ACTIONS_SUBGRAPH] Policy actions generation process completed successfully. Total processed: 2 bounded contexts'), LogModel(created_at='2025-09-18T14:38:22.581140', level='info', message='[ROOT_GRAPH] Policy actions creation completed, proceeding to GWT generation'), LogModel(created_at='2025-09-19T10:40:48.447140', level='info', message='[GWT_SUBGRAPH] Starting GWT generation process (parallel mode)'), LogModel(created_at='2025-09-19T10:40:48.462675', level='info', message='[GWT_SUBGRAPH] Preparation completed. Total tasks: 7 (3 aggregates, 7 commands)')], totalProgressCount=16, currentProgressCount=12, lastCompletedRootGraphNode='create_gwt', lastCompletedSubGraphNode='select_batch'))