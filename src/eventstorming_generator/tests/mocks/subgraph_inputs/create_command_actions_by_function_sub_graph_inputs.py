from ....models import *

create_command_actions_by_function_sub_graph_inputs = State(inputs=InputsModel(selectedDraftOptions={'BookManagement': {'boundedContext': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리(대출가능/대출중/예약중/폐기), 도서 폐기 처리, 도서별 대출 및 상태 변경 이력 조회를 담당한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDiscarded\n- BookHistoryQueried\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아 등록함.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리, 중복 불가)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상황에 따라 도서 상태가 자동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)"\n  ],\n  "outputs": [\n    "변경된 도서 상태(대출가능, 대출중, 예약중, 폐기)"\n  ],\n  "nextEvents": [\n    "BookDiscarded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDiscarded",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손되거나 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "BookHistoryQueried",\n  "displayName": "도서 이력 조회됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 도서별 대출 이력과 상태 변경 이력을 조회함.",\n  "inputs": [\n    "도서 식별자"\n  ],\n  "outputs": [\n    "대출 이력",\n    "상태 변경 이력"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'BookManagement', 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_7812d3fd6288e1f42a1bbc960323b703', 'requirements': {'ddl': "CREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[2, 5], [2, 42]], [[21, 5], [21, 24]]]}, {'fieldName': 'title', 'refs': [[[3, 5], [3, 31]]]}, {'fieldName': 'isbn', 'refs': [[[4, 5], [4, 36]]]}, {'fieldName': 'author', 'refs': [[[5, 5], [5, 32]]]}, {'fieldName': 'publisher', 'refs': [[[6, 5], [6, 35]]]}, {'fieldName': 'registration_date', 'refs': [[[9, 5], [9, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[10, 5], [10, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[11, 5], [11, 29]]]}, {'fieldName': 'created_at', 'refs': [[[12, 5], [12, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[13, 5], [13, 77]]]}, {'fieldName': 'history_id', 'refs': [[[20, 5], [20, 45]]]}, {'fieldName': 'change_reason', 'refs': [[[24, 5], [24, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[25, 5], [25, 27]]]}, {'fieldName': 'change_date', 'refs': [[[26, 5], [26, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리(대출가능/대출중/예약중/폐기), 도서 폐기 처리, 도서별 대출 및 상태 변경 이력 조회를 담당한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDiscarded\n- BookHistoryQueried\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아 등록함.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리, 중복 불가)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상황에 따라 도서 상태가 자동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)"\n  ],\n  "outputs": [\n    "변경된 도서 상태(대출가능, 대출중, 예약중, 폐기)"\n  ],\n  "nextEvents": [\n    "BookDiscarded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDiscarded",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손되거나 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "BookHistoryQueried",\n  "displayName": "도서 이력 조회됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 도서별 대출 이력과 상태 변경 이력을 조회함.",\n  "inputs": [\n    "도서 식별자"\n  ],\n  "outputs": [\n    "대출 이력",\n    "상태 변경 이력"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아 등록함.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리, 중복 불가)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상황에 따라 도서 상태가 자동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)"\n  ],\n  "outputs": [\n    "변경된 도서 상태(대출가능, 대출중, 예약중, 폐기)"\n  ],\n  "nextEvents": [\n    "BookDiscarded"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDiscarded",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손되거나 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookHistoryQueried",\n  "displayName": "도서 이력 조회됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 도서별 대출 이력과 상태 변경 이력을 조회함.",\n  "inputs": [\n    "도서 식별자"\n  ],\n  "outputs": [\n    "대출 이력",\n    "상태 변경 이력"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        9,\n        8\n      ],\n      [\n        9,\n        65\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDiscarded, BookHistoryQueried 이벤트가 발생할 수 있어.', 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, 'cons': {'cohesion': '이력 데이터가 많아질 경우 Book Aggregate가 비대해질 수 있으며, 도서 정보와 이력 관리의 관심사가 혼재될 수 있다.', 'complexity': '이력 관리, 상태 전이, 폐기 등 다양한 규칙이 한 Aggregate에 집중되어 복잡도가 증가할 수 있다.', 'consistency': '이력 데이터가 많을 때 트랜잭션 시간이 길어질 수 있다.', 'coupling': '이력 관리 로직이 복잡해질수록 Aggregate 내부가 커져 도메인 변경 시 영향 범위가 넓어진다.', 'encapsulation': '모든 도서 관련 로직이 한 곳에 집중되어, 일부 기능만 분리 개발/배포가 어렵다.', 'independence': '이력 관리 기능만 별도로 확장하거나 독립적으로 운영하기 어렵다.', 'performance': '이력 데이터가 많을 때 도서 조회 성능이 저하될 수 있다.'}, 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리(대출가능/대출중/예약중/폐기), 도서 폐기 처리, 도서별 대출 및 상태 변경 이력 조회를 담당한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDiscarded\n- BookHistoryQueried\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아 등록함.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리, 중복 불가)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상황에 따라 도서 상태가 자동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)"\n  ],\n  "outputs": [\n    "변경된 도서 상태(대출가능, 대출중, 예약중, 폐기)"\n  ],\n  "nextEvents": [\n    "BookDiscarded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDiscarded",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손되거나 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "BookHistoryQueried",\n  "displayName": "도서 이력 조회됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 도서별 대출 이력과 상태 변경 이력을 조회함.",\n  "inputs": [\n    "도서 식별자"\n  ],\n  "outputs": [\n    "대출 이력",\n    "상태 변경 이력"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'isAIRecommended': False, 'pros': {'cohesion': '도서의 등록, 상태 변경, 폐기, 이력 관리 등 모든 핵심 도서 관리 기능이 Book Aggregate 내에서 일관되게 처리되어 높은 응집도를 가진다.', 'complexity': '단일 Aggregate로 관리되어 개발 및 유지보수가 단순하며, 도서 관리 업무 흐름이 명확하다.', 'consistency': '도서 상태 변경, 폐기 등 주요 비즈니스 규칙을 단일 트랜잭션으로 보장할 수 있어 데이터 일관성이 매우 높다.', 'coupling': 'Loan, Reservation과의 관계는 ValueObject 참조로만 구현되어 도메인 간 결합도가 낮고, 이벤트 기반 연동이 자연스럽다.', 'encapsulation': '도서의 상태 전이, 폐기, 이력 관리 등 도메인 규칙이 Aggregate 내부에 잘 은닉되어 외부에서 임의로 변경할 수 없다.', 'independence': '도서 관리 정책 변경 시 Book Aggregate만 수정하면 되어, 타 도메인에 영향이 없다.', 'performance': '도서 상태 변경, 이력 조회 등 대부분의 작업이 단일 Aggregate 조회로 처리되어 쿼리 효율이 높다.'}, 'structure': [{'aggregate': {'alias': '도서', 'name': 'Book'}, 'enumerations': [{'alias': '도서 상태', 'name': 'BookStatus'}, {'alias': '도서 카테고리', 'name': 'BookCategory'}], 'previewAttributes': ['book_id', 'title', 'isbn', 'author', 'publisher', 'registration_date', 'disposal_date', 'disposal_reason', 'created_at', 'updated_at', 'history_id', 'change_reason', 'changed_by', 'change_date'], 'valueObjects': [{'alias': '대출 참조', 'name': 'LoanReference', 'referencedAggregate': {'alias': '대출', 'name': 'Loan'}}, {'alias': '예약 참조', 'name': 'ReservationReference', 'referencedAggregate': {'alias': '예약', 'name': 'Reservation'}}]}]}, 'LoanProcess': {'boundedContext': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanProcess (대출/반납 프로세스)\n\n## Role\n회원의 도서 대출/반납/연장/예약 신청 및 승인, 대출 상태 변경, 대출 현황 및 연체 관리, 예약 처리와 연동된 도서 상태 변경을 담당한다.\n\n## Key Events\n- LoanRequested\n- LoanApproved\n- ReservationRequested\n- ReservationApproved\n- LoanReturned\n- LoanExtended\n- LoanStatusChanged\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을\n\n대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야\n\n\'대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 \'대출중\'으로 변경되어야\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 \'대출가능\'으로 변경되어야\n\n대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "LoanRequested",\n  "displayName": "대출 신청됨",\n  "actor": "Member",\n  "level": 1,\n  "description": "회원이 도서 대출을 신청함. 회원번호와 이름으로 본인 확인 후 대출할 도서를 선택함.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서명 또는 ISBN",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 신청 정보"\n  ],\n  "nextEvents": [\n    "LoanApproved",\n    "ReservationRequested"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanApproved",\n  "displayName": "대출 승인됨",\n  "actor": "System",\n  "level": 2,\n  "description": "대출 신청이 승인되어 도서가 회원에게 대출됨. 도서 상태가 자동으로 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "대출 신청 정보",\n    "도서 상태: 대출가능"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "LoanReturned",\n    "LoanExtended"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationRequested",\n  "displayName": "예약 신청됨",\n  "actor": "Member",\n  "level": 2,\n  "description": "대출하려는 도서가 이미 대출 중일 경우 회원이 예약을 신청함.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보"\n  ],\n  "nextEvents": [\n    "ReservationApproved"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationApproved",\n  "displayName": "예약 승인됨",\n  "actor": "System",\n  "level": 3,\n  "description": "예약 신청이 승인되어 예약이 등록됨. 도서가 반납되면 예약자에게 알림이 전송됨.",\n  "inputs": [\n    "예약 정보",\n    "도서 상태: 대출중"\n  ],\n  "outputs": [\n    "예약 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출한 도서를 반납함. 도서 상태가 자동으로 \'대출가능\'으로 변경됨. 예약자가 있으면 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함.",\n  "inputs": [\n    "대출 정보",\n    "연장 요청"\n  ],\n  "outputs": [\n    "연장된 대출 정보",\n    "반납예정일 변경"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "LoanStatusChanged",\n  "displayName": "대출 상태 변경됨",\n  "actor": "System",\n  "level": 4,\n  "description": "대출 건의 상태(대출중/연체/반납완료 등)가 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "상태 변경 트리거(반납, 연체 등)"\n  ],\n  "outputs": [\n    "변경된 대출 상태"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'id': '630001b1-de92-4141-b175-0146789a8494', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': '630001b1-de92-4141-b175-0146789a8494', 'style': '{}', 'width': 560, 'x': 1185.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': '630001b1-de92-4141-b175-0146789a8494', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'LoanProcess', 'traceName': 'LoanProcess', 'displayName': '대출/반납 프로세스', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_7812d3fd6288e1f42a1bbc960323b703', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[2, 5], [2, 38]], [[39, 5], [39, 24]]]}, {'fieldName': 'member_id', 'refs': [[[3, 5], [3, 34]], [[22, 5], [22, 34]]]}, {'fieldName': 'book_id', 'refs': [[[4, 5], [4, 24]], [[23, 5], [23, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[5, 5], [5, 48]]]}, {'fieldName': 'due_date', 'refs': [[[6, 5], [6, 30]]]}, {'fieldName': 'return_date', 'refs': [[[7, 5], [7, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[8, 5], [8, 23]]]}, {'fieldName': 'status', 'refs': [[[9, 5], [9, 50]], [[25, 5], [25, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[10, 5], [10, 31]]]}, {'fieldName': 'created_at', 'refs': [[[11, 5], [11, 49]], [[28, 5], [28, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[12, 5], [12, 77]], [[29, 5], [29, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[21, 5], [21, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[24, 5], [24, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[26, 5], [26, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[27, 5], [27, 29]]]}, {'fieldName': 'history_id', 'refs': [[[38, 5], [38, 41]]]}, {'fieldName': 'action_type', 'refs': [[[40, 5], [40, 63]]]}, {'fieldName': 'action_date', 'refs': [[[41, 5], [41, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[42, 5], [42, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[43, 5], [43, 30]]]}, {'fieldName': 'notes', 'refs': [[[44, 5], [44, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[45, 5], [45, 29]]]}], 'description': '# Bounded Context Overview: LoanProcess (대출/반납 프로세스)\n\n## Role\n회원의 도서 대출/반납/연장/예약 신청 및 승인, 대출 상태 변경, 대출 현황 및 연체 관리, 예약 처리와 연동된 도서 상태 변경을 담당한다.\n\n## Key Events\n- LoanRequested\n- LoanApproved\n- ReservationRequested\n- ReservationApproved\n- LoanReturned\n- LoanExtended\n- LoanStatusChanged\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을\n\n대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야\n\n\'대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 \'대출중\'으로 변경되어야\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 \'대출가능\'으로 변경되어야\n\n대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "LoanRequested",\n  "displayName": "대출 신청됨",\n  "actor": "Member",\n  "level": 1,\n  "description": "회원이 도서 대출을 신청함. 회원번호와 이름으로 본인 확인 후 대출할 도서를 선택함.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서명 또는 ISBN",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 신청 정보"\n  ],\n  "nextEvents": [\n    "LoanApproved",\n    "ReservationRequested"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanApproved",\n  "displayName": "대출 승인됨",\n  "actor": "System",\n  "level": 2,\n  "description": "대출 신청이 승인되어 도서가 회원에게 대출됨. 도서 상태가 자동으로 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "대출 신청 정보",\n    "도서 상태: 대출가능"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "LoanReturned",\n    "LoanExtended"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationRequested",\n  "displayName": "예약 신청됨",\n  "actor": "Member",\n  "level": 2,\n  "description": "대출하려는 도서가 이미 대출 중일 경우 회원이 예약을 신청함.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보"\n  ],\n  "nextEvents": [\n    "ReservationApproved"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationApproved",\n  "displayName": "예약 승인됨",\n  "actor": "System",\n  "level": 3,\n  "description": "예약 신청이 승인되어 예약이 등록됨. 도서가 반납되면 예약자에게 알림이 전송됨.",\n  "inputs": [\n    "예약 정보",\n    "도서 상태: 대출중"\n  ],\n  "outputs": [\n    "예약 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출한 도서를 반납함. 도서 상태가 자동으로 \'대출가능\'으로 변경됨. 예약자가 있으면 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함.",\n  "inputs": [\n    "대출 정보",\n    "연장 요청"\n  ],\n  "outputs": [\n    "연장된 대출 정보",\n    "반납예정일 변경"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "LoanStatusChanged",\n  "displayName": "대출 상태 변경됨",\n  "actor": "System",\n  "level": 4,\n  "description": "대출 건의 상태(대출중/연체/반납완료 등)가 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "상태 변경 트리거(반납, 연체 등)"\n  ],\n  "outputs": [\n    "변경된 대출 상태"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'event': '{\n  "name": "LoanRequested",\n  "displayName": "대출 신청됨",\n  "actor": "Member",\n  "level": 1,\n  "description": "회원이 도서 대출을 신청함. 회원번호와 이름으로 본인 확인 후 대출할 도서를 선택함.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서명 또는 ISBN",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 신청 정보"\n  ],\n  "nextEvents": [\n    "LoanApproved",\n    "ReservationRequested"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanApproved",\n  "displayName": "대출 승인됨",\n  "actor": "System",\n  "level": 2,\n  "description": "대출 신청이 승인되어 도서가 회원에게 대출됨. 도서 상태가 자동으로 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "대출 신청 정보",\n    "도서 상태: 대출가능"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "LoanReturned",\n    "LoanExtended"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "ReservationRequested",\n  "displayName": "예약 신청됨",\n  "actor": "Member",\n  "level": 2,\n  "description": "대출하려는 도서가 이미 대출 중일 경우 회원이 예약을 신청함.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보"\n  ],\n  "nextEvents": [\n    "ReservationApproved"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ]\n  ]\n}\n{\n  "name": "ReservationApproved",\n  "displayName": "예약 승인됨",\n  "actor": "System",\n  "level": 3,\n  "description": "예약 신청이 승인되어 예약이 등록됨. 도서가 반납되면 예약자에게 알림이 전송됨.",\n  "inputs": [\n    "예약 정보",\n    "도서 상태: 대출중"\n  ],\n  "outputs": [\n    "예약 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        175\n      ],\n      [\n        7,\n        203\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출한 도서를 반납함. 도서 상태가 자동으로 \'대출가능\'으로 변경됨. 예약자가 있으면 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        203\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함.",\n  "inputs": [\n    "대출 정보",\n    "연장 요청"\n  ],\n  "outputs": [\n    "연장된 대출 정보",\n    "반납예정일 변경"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        110\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanStatusChanged",\n  "displayName": "대출 상태 변경됨",\n  "actor": "System",\n  "level": 4,\n  "description": "대출 건의 상태(대출중/연체/반납완료 등)가 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "상태 변경 트리거(반납, 연체 등)"\n  ],\n  "outputs": [\n    "변경된 대출 상태"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        7,\n        65\n      ],\n      [\n        7,\n        81\n      ]\n    ]\n  ]\n}', 'eventNames': 'LoanRequested, LoanApproved, ReservationRequested, ReservationApproved, LoanReturned, LoanExtended, LoanStatusChanged 이벤트가 발생할 수 있어.', 'userStory': "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을\n대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야\n대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, 'cons': {'cohesion': '대출 이력 관리가 별도 애그리거트로 분리되어 있지 않아, 이력 관리가 필요한 경우 추가 확장이 필요합니다.', 'complexity': '이력 관리 요구가 증가하면 Loan 애그리거트가 점차 복잡해질 수 있습니다.', 'consistency': '대출 상태 변경과 이력 기록이 완전히 분리되어 있지 않아, 복잡한 상태 추적에는 한계가 있습니다.', 'coupling': '이력 데이터가 Loan 내부에 포함되거나 외부에서 관리될 경우, 도메인 간 데이터 일관성 관리가 복잡해질 수 있습니다.', 'encapsulation': '이력 관리가 서비스 계층이나 외부 시스템에 위임될 경우, 도메인 규칙의 은닉성이 약화될 수 있습니다.', 'independence': '이력 관리와 대출/예약의 변경이 서로 영향을 줄 경우, 확장 시 도메인 경계 재설정이 필요할 수 있습니다.', 'performance': '이력 데이터가 Loan 내부에 포함될 경우, Loan 애그리거트의 크기가 커져 성능 저하가 발생할 수 있습니다.'}, 'description': '# Bounded Context Overview: LoanProcess (대출/반납 프로세스)\n\n## Role\n회원의 도서 대출/반납/연장/예약 신청 및 승인, 대출 상태 변경, 대출 현황 및 연체 관리, 예약 처리와 연동된 도서 상태 변경을 담당한다.\n\n## Key Events\n- LoanRequested\n- LoanApproved\n- ReservationRequested\n- ReservationApproved\n- LoanReturned\n- LoanExtended\n- LoanStatusChanged\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을\n\n대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야\n\n\'대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 \'대출중\'으로 변경되어야\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 \'대출가능\'으로 변경되어야\n\n대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "LoanRequested",\n  "displayName": "대출 신청됨",\n  "actor": "Member",\n  "level": 1,\n  "description": "회원이 도서 대출을 신청함. 회원번호와 이름으로 본인 확인 후 대출할 도서를 선택함.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서명 또는 ISBN",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 신청 정보"\n  ],\n  "nextEvents": [\n    "LoanApproved",\n    "ReservationRequested"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanApproved",\n  "displayName": "대출 승인됨",\n  "actor": "System",\n  "level": 2,\n  "description": "대출 신청이 승인되어 도서가 회원에게 대출됨. 도서 상태가 자동으로 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "대출 신청 정보",\n    "도서 상태: 대출가능"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "LoanReturned",\n    "LoanExtended"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationRequested",\n  "displayName": "예약 신청됨",\n  "actor": "Member",\n  "level": 2,\n  "description": "대출하려는 도서가 이미 대출 중일 경우 회원이 예약을 신청함.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보"\n  ],\n  "nextEvents": [\n    "ReservationApproved"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationApproved",\n  "displayName": "예약 승인됨",\n  "actor": "System",\n  "level": 3,\n  "description": "예약 신청이 승인되어 예약이 등록됨. 도서가 반납되면 예약자에게 알림이 전송됨.",\n  "inputs": [\n    "예약 정보",\n    "도서 상태: 대출중"\n  ],\n  "outputs": [\n    "예약 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출한 도서를 반납함. 도서 상태가 자동으로 \'대출가능\'으로 변경됨. 예약자가 있으면 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함.",\n  "inputs": [\n    "대출 정보",\n    "연장 요청"\n  ],\n  "outputs": [\n    "연장된 대출 정보",\n    "반납예정일 변경"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "LoanStatusChanged",\n  "displayName": "대출 상태 변경됨",\n  "actor": "System",\n  "level": 4,\n  "description": "대출 건의 상태(대출중/연체/반납완료 등)가 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "상태 변경 트리거(반납, 연체 등)"\n  ],\n  "outputs": [\n    "변경된 대출 상태"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'isAIRecommended': True, 'pros': {'cohesion': '대출과 예약의 핵심 비즈니스 규칙을 각각 집중적으로 관리할 수 있어 도메인 모델이 명확합니다.', 'complexity': '애그리거트 수가 적어 전체 모델이 단순하며, 구현 및 유지보수가 용이합니다.', 'consistency': '대출/예약 각각의 트랜잭션 경계가 명확해 각자의 불변성을 강하게 보장할 수 있습니다.', 'coupling': 'Book은 ValueObject 참조로만 사용되어 도메인 간 결합도가 낮고, Loan과 Reservation 간 직접 참조가 없어 독립성이 높습니다.', 'encapsulation': '각 애그리거트가 자신의 상태와 규칙을 완전히 캡슐화하여 외부에서 내부 구현에 접근하지 못하게 합니다.', 'independence': '대출과 예약 기능을 독립적으로 확장·변경할 수 있어 도메인 진화에 유리합니다.', 'performance': '조회/변경 작업이 각 애그리거트 단위로 분리되어 동시성 처리와 확장성에 유리합니다.'}, 'structure': [{'aggregate': {'alias': '대출', 'name': 'Loan'}, 'enumerations': [{'alias': '대출 상태', 'name': 'LoanStatus'}], 'previewAttributes': ['loan_id', 'member_id', 'book_id', 'loan_date', 'due_date', 'return_date', 'loan_period_days', 'status', 'extension_count', 'created_at', 'updated_at', 'history_id', 'action_type', 'action_date', 'previous_due_date', 'new_due_date', 'notes', 'processed_by'], 'valueObjects': [{'alias': '도서 참조', 'name': 'BookReference', 'referencedAggregate': {'alias': '도서', 'name': 'Book'}}, {'alias': '대출 기간', 'name': 'LoanPeriod', 'referencedAggregateName': ''}]}, {'aggregate': {'alias': '예약', 'name': 'Reservation'}, 'enumerations': [{'alias': '예약 상태', 'name': 'ReservationStatus'}], 'previewAttributes': ['reservation_id', 'member_id', 'book_id', 'reservation_date', 'status', 'notification_sent', 'expiry_date', 'created_at', 'updated_at'], 'valueObjects': [{'alias': '도서 참조', 'name': 'BookReference', 'referencedAggregate': {'alias': '도서', 'name': 'Book'}}]}]}}, userInfo=UserInfoModel(uid='EYCl46CwWAWvpz2E1BCUpVgPIpa2', authorized='admin', consultingTime=0, email='shinseongjin@uengine.org', name='shinseongjin@uengine.org', profile='https://avatars.githubusercontent.com/u/163972132?v=4', providerUid='163972132', savedCoin=0, savedToolTime=0), information=InformationModel(projectId='163972132_es_7812d3fd6288e1f42a1bbc960323b703', author='EYCl46CwWAWvpz2E1BCUpVgPIpa2', authorEmail='shinseongjin@uengine.org', comment='', createdTimeStamp=1755680832270, lastModifiedTimeStamp=1755680832270, projectName='untitled', type='es'), llmModel=LLMModel(model_vendor='openai', model_name='gpt-4.1-2025-04-14', model_kwargs={}, model_max_input_limit=962429, api_key=''), preferedLanguage='Korean', jobId='e7194c03-8213-ffda-c48d-f52ad35a8a44'), subgraphs=SubgraphsModel(createAggregateByFunctionsModel=CreateAggregateByFunctionsModel(current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=True, max_retry_count=3, is_failed=False, ddl_extraction_complete=True, ddl_assignment_complete=True, all_ddl_fields=[]), createAggregateClassIdByDraftsModel=CreateAggregateClassIdByDraftsModel(draft_options={}, current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=True, max_retry_count=3, is_failed=False), createCommandActionsByFunctionModel=CreateCommandActionsByFunctionModel(draft_options={}, current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=False, max_retry_count=3, is_failed=False, assign_event_names_complete=False), createPolicyActionsByFunctionModel=CreatePolicyActionsByFunctionModel(draft_options={}, current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=False, max_retry_count=3, is_failed=False), createGwtGeneratorByFunctionModel=CreateGwtGeneratorByFunctionModel(draft_options={}, current_generation=None, completed_generations=[], pending_generations=[], is_processing=False, all_complete=False, max_retry_count=3, is_failed=False), esValueSummaryGeneratorModel=ESValueSummaryGeneratorModel(is_processing=False, is_complete=False, is_failed=False, context='', keys_to_filter=[], max_tokens=0, token_calc_model_vendor='', token_calc_model_name='', summarized_es_value={}, processed_summarized_es_value={}, element_ids=[], sorted_element_ids=[], retry_count=0, max_retry_count=3)), outputs=OutputsModel(esValue=EsValueModel(elements={'2de7f37d-6fe5-47aa-8e6c-74c55292a175': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [{'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4'}], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리(대출가능/대출중/예약중/폐기), 도서 폐기 처리, 도서별 대출 및 상태 변경 이력 조회를 담당한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDiscarded\n- BookHistoryQueried\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아 등록함.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리, 중복 불가)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상황에 따라 도서 상태가 자동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)"\n  ],\n  "outputs": [\n    "변경된 도서 상태(대출가능, 대출중, 예약중, 폐기)"\n  ],\n  "nextEvents": [\n    "BookDiscarded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDiscarded",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손되거나 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "BookHistoryQueried",\n  "displayName": "도서 이력 조회됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 도서별 대출 이력과 상태 변경 이력을 조회함.",\n  "inputs": [\n    "도서 식별자"\n  ],\n  "outputs": [\n    "대출 이력",\n    "상태 변경 이력"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'style': '{}', 'width': 560, 'x': 600, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'BookManagement', 'traceName': 'BookManagement', 'displayName': '도서 관리', 'oldName': '', 'policies': [], 'portGenerated': 8080, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_7812d3fd6288e1f42a1bbc960323b703', 'requirements': {'ddl': "CREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM('소설', '비소설', '학술', '잡지') NOT NULL,\n    status ENUM('대출가능', '대출중', '예약중', '폐기') DEFAULT '대출가능',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM('대출가능', '대출중', '예약중', '폐기'),\n    new_status ENUM('대출가능', '대출중', '예약중', '폐기') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);", 'ddlFields': [{'fieldName': 'book_id', 'refs': [[[2, 5], [2, 42]], [[21, 5], [21, 24]]]}, {'fieldName': 'title', 'refs': [[[3, 5], [3, 31]]]}, {'fieldName': 'isbn', 'refs': [[[4, 5], [4, 36]]]}, {'fieldName': 'author', 'refs': [[[5, 5], [5, 32]]]}, {'fieldName': 'publisher', 'refs': [[[6, 5], [6, 35]]]}, {'fieldName': 'registration_date', 'refs': [[[9, 5], [9, 56]]]}, {'fieldName': 'disposal_date', 'refs': [[[10, 5], [10, 31]]]}, {'fieldName': 'disposal_reason', 'refs': [[[11, 5], [11, 29]]]}, {'fieldName': 'created_at', 'refs': [[[12, 5], [12, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[13, 5], [13, 77]]]}, {'fieldName': 'history_id', 'refs': [[[20, 5], [20, 45]]]}, {'fieldName': 'change_reason', 'refs': [[[24, 5], [24, 30]]]}, {'fieldName': 'changed_by', 'refs': [[[25, 5], [25, 27]]]}, {'fieldName': 'change_date', 'refs': [[[26, 5], [26, 50]]]}], 'description': '# Bounded Context Overview: BookManagement (도서 관리)\n\n## Role\n도서 등록, 상태 관리(대출가능/대출중/예약중/폐기), 도서 폐기 처리, 도서별 대출 및 상태 변경 이력 조회를 담당한다.\n\n## Key Events\n- BookRegistered\n- BookStatusChanged\n- BookDiscarded\n- BookHistoryQueried\n\n# Requirements\n\n## userStory\n\n도서 관리\' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 \'대출가능\' 상태가 되고, 이후 대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 \'폐기\' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE books (\n    book_id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(500) NOT NULL,\n    isbn VARCHAR(13) UNIQUE NOT NULL,\n    author VARCHAR(200) NOT NULL,\n    publisher VARCHAR(200) NOT NULL,\n    category ENUM(\'소설\', \'비소설\', \'학술\', \'잡지\') NOT NULL,\n    status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') DEFAULT \'대출가능\',\n    registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    disposal_date DATETIME NULL,\n    disposal_reason TEXT NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    INDEX idx_title (title),\n    INDEX idx_isbn (isbn),\n    INDEX idx_status (status),\n    INDEX idx_category (category)\n);\n```\n```sql\nCREATE TABLE book_status_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    book_id INT NOT NULL,\n    previous_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\'),\n    new_status ENUM(\'대출가능\', \'대출중\', \'예약중\', \'폐기\') NOT NULL,\n    change_reason VARCHAR(200),\n    changed_by VARCHAR(100),\n    change_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_change_date (change_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아 등록함.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리, 중복 불가)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상황에 따라 도서 상태가 자동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)"\n  ],\n  "outputs": [\n    "변경된 도서 상태(대출가능, 대출중, 예약중, 폐기)"\n  ],\n  "nextEvents": [\n    "BookDiscarded"\n  ]\n}\n```\n\n```json\n{\n  "name": "BookDiscarded",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손되거나 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "BookHistoryQueried",\n  "displayName": "도서 이력 조회됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 도서별 대출 이력과 상태 변경 이력을 조회함.",\n  "inputs": [\n    "도서 식별자"\n  ],\n  "outputs": [\n    "대출 이력",\n    "상태 변경 이력"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: receives from 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: sends to 대출/반납 프로세스 (LoanProcess)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'event': '{\n  "name": "BookRegistered",\n  "displayName": "도서 등록됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 새로운 도서를 등록하여 도서관 시스템에 추가하였음. 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아 등록함.",\n  "inputs": [\n    "도서명",\n    "ISBN(13자리, 중복 불가)",\n    "저자",\n    "출판사",\n    "카테고리(소설/비소설/학술/잡지)"\n  ],\n  "outputs": [\n    "신규 도서 정보",\n    "도서 상태: 대출가능"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        57\n      ],\n      [\n        3,\n        100\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookStatusChanged",\n  "displayName": "도서 상태 변경됨",\n  "actor": "System",\n  "level": 2,\n  "description": "도서의 대출/반납/예약/폐기 등 상황에 따라 도서 상태가 자동으로 변경됨.",\n  "inputs": [\n    "도서 상태 변경 트리거(대출, 반납, 예약, 폐기 등)"\n  ],\n  "outputs": [\n    "변경된 도서 상태(대출가능, 대출중, 예약중, 폐기)"\n  ],\n  "nextEvents": [\n    "BookDiscarded"\n  ],\n  "refs": [\n    [\n      [\n        3,\n        191\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookDiscarded",\n  "displayName": "도서 폐기됨",\n  "actor": "Librarian",\n  "level": 3,\n  "description": "도서가 훼손되거나 분실되어 사서에 의해 폐기 처리됨. 폐기된 도서는 더 이상 대출이 불가능함.",\n  "inputs": [\n    "도서 식별자",\n    "폐기 사유"\n  ],\n  "outputs": [\n    "도서 상태: 폐기"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        3,\n        264\n      ],\n      [\n        3,\n        302\n      ]\n    ]\n  ]\n}\n{\n  "name": "BookHistoryQueried",\n  "displayName": "도서 이력 조회됨",\n  "actor": "Librarian",\n  "level": 1,\n  "description": "사서가 도서별 대출 이력과 상태 변경 이력을 조회함.",\n  "inputs": [\n    "도서 식별자"\n  ],\n  "outputs": [\n    "대출 이력",\n    "상태 변경 이력"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        9,\n        8\n      ],\n      [\n        9,\n        65\n      ]\n    ]\n  ]\n}', 'eventNames': 'BookRegistered, BookStatusChanged, BookDiscarded, BookHistoryQueried 이벤트가 발생할 수 있어.', 'userStory': "도서 관리' 화면에서는 새로운 도서를 등록하고 현재 보유한 도서들의 상태를 관리할 수 있어야 해. 도서 등록 시에는 도서명, ISBN, 저자, 출판사, 카테고리 정보를 입력받아야 해. ISBN은 13자리 숫자여야 하고 중복 확인이 필요해. 카테고리는 소설/비소설/학술/잡지 중에서 선택할 수 있어야 해. 등록된 도서는 처음에 '대출가능' 상태가 되고, 이후 대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야 해. 도서가 훼손되거나 분실된 경우 '폐기' 처리가 가능해야 하며, 폐기된 도서는 더 이상 대출이 불가능해야\n도서별로 대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, '630001b1-de92-4141-b175-0146789a8494': {'_type': 'org.uengine.modeling.model.BoundedContext', 'aggregates': [{'id': '7e1c65a0-0845-484c-b014-e1541ffa2612'}, {'id': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae'}], 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'description': '# Bounded Context Overview: LoanProcess (대출/반납 프로세스)\n\n## Role\n회원의 도서 대출/반납/연장/예약 신청 및 승인, 대출 상태 변경, 대출 현황 및 연체 관리, 예약 처리와 연동된 도서 상태 변경을 담당한다.\n\n## Key Events\n- LoanRequested\n- LoanApproved\n- ReservationRequested\n- ReservationApproved\n- LoanReturned\n- LoanExtended\n- LoanStatusChanged\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을\n\n대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야\n\n\'대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 \'대출중\'으로 변경되어야\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 \'대출가능\'으로 변경되어야\n\n대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "LoanRequested",\n  "displayName": "대출 신청됨",\n  "actor": "Member",\n  "level": 1,\n  "description": "회원이 도서 대출을 신청함. 회원번호와 이름으로 본인 확인 후 대출할 도서를 선택함.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서명 또는 ISBN",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 신청 정보"\n  ],\n  "nextEvents": [\n    "LoanApproved",\n    "ReservationRequested"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanApproved",\n  "displayName": "대출 승인됨",\n  "actor": "System",\n  "level": 2,\n  "description": "대출 신청이 승인되어 도서가 회원에게 대출됨. 도서 상태가 자동으로 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "대출 신청 정보",\n    "도서 상태: 대출가능"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "LoanReturned",\n    "LoanExtended"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationRequested",\n  "displayName": "예약 신청됨",\n  "actor": "Member",\n  "level": 2,\n  "description": "대출하려는 도서가 이미 대출 중일 경우 회원이 예약을 신청함.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보"\n  ],\n  "nextEvents": [\n    "ReservationApproved"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationApproved",\n  "displayName": "예약 승인됨",\n  "actor": "System",\n  "level": 3,\n  "description": "예약 신청이 승인되어 예약이 등록됨. 도서가 반납되면 예약자에게 알림이 전송됨.",\n  "inputs": [\n    "예약 정보",\n    "도서 상태: 대출중"\n  ],\n  "outputs": [\n    "예약 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출한 도서를 반납함. 도서 상태가 자동으로 \'대출가능\'으로 변경됨. 예약자가 있으면 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함.",\n  "inputs": [\n    "대출 정보",\n    "연장 요청"\n  ],\n  "outputs": [\n    "연장된 대출 정보",\n    "반납예정일 변경"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "LoanStatusChanged",\n  "displayName": "대출 상태 변경됨",\n  "actor": "System",\n  "level": 4,\n  "description": "대출 건의 상태(대출중/연체/반납완료 등)가 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "상태 변경 트리거(반납, 연체 등)"\n  ],\n  "outputs": [\n    "변경된 대출 상태"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'id': '630001b1-de92-4141-b175-0146789a8494', 'elementView': {'_type': 'org.uengine.modeling.model.BoundedContext', 'height': 590, 'id': '630001b1-de92-4141-b175-0146789a8494', 'style': '{}', 'width': 1010, 'x': 1410.0, 'y': 450}, 'gitURL': None, 'hexagonalView': {'_type': 'org.uengine.modeling.model.BoundedContextHexagonal', 'height': 350, 'id': '630001b1-de92-4141-b175-0146789a8494', 'style': '{}', 'width': 350, 'x': 235, 'y': 365}, 'members': [], 'name': 'LoanProcess', 'traceName': 'LoanProcess', 'displayName': '대출/반납 프로세스', 'oldName': '', 'policies': [], 'portGenerated': 8081, 'preferredPlatform': 'template-spring-boot', 'preferredPlatformConf': {}, 'rotateStatus': False, 'tempId': '', 'templatePerElements': {}, 'views': [], 'definitionId': '163972132_es_7812d3fd6288e1f42a1bbc960323b703', 'requirements': {'ddl': "CREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM('대출중', '연체', '반납완료', '연장') DEFAULT '대출중',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM('예약중', '예약완료', '예약취소', '예약만료') DEFAULT '예약중',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM('대출', '반납', '연장', '연체알림', '분실신고') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);", 'ddlFields': [{'fieldName': 'loan_id', 'refs': [[[2, 5], [2, 38]], [[39, 5], [39, 24]]]}, {'fieldName': 'member_id', 'refs': [[[3, 5], [3, 34]], [[22, 5], [22, 34]]]}, {'fieldName': 'book_id', 'refs': [[[4, 5], [4, 24]], [[23, 5], [23, 24]]]}, {'fieldName': 'loan_date', 'refs': [[[5, 5], [5, 48]]]}, {'fieldName': 'due_date', 'refs': [[[6, 5], [6, 30]]]}, {'fieldName': 'return_date', 'refs': [[[7, 5], [7, 29]]]}, {'fieldName': 'loan_period_days', 'refs': [[[8, 5], [8, 23]]]}, {'fieldName': 'status', 'refs': [[[9, 5], [9, 50]], [[25, 5], [25, 54]]]}, {'fieldName': 'extension_count', 'refs': [[[10, 5], [10, 31]]]}, {'fieldName': 'created_at', 'refs': [[[11, 5], [11, 49]], [[28, 5], [28, 49]]]}, {'fieldName': 'updated_at', 'refs': [[[12, 5], [12, 77]], [[29, 5], [29, 77]]]}, {'fieldName': 'reservation_id', 'refs': [[[21, 5], [21, 45]]]}, {'fieldName': 'reservation_date', 'refs': [[[24, 5], [24, 55]]]}, {'fieldName': 'notification_sent', 'refs': [[[26, 5], [26, 37]]]}, {'fieldName': 'expiry_date', 'refs': [[[27, 5], [27, 29]]]}, {'fieldName': 'history_id', 'refs': [[[38, 5], [38, 41]]]}, {'fieldName': 'action_type', 'refs': [[[40, 5], [40, 63]]]}, {'fieldName': 'action_date', 'refs': [[[41, 5], [41, 50]]]}, {'fieldName': 'previous_due_date', 'refs': [[[42, 5], [42, 35]]]}, {'fieldName': 'new_due_date', 'refs': [[[43, 5], [43, 30]]]}, {'fieldName': 'notes', 'refs': [[[44, 5], [44, 14]]]}, {'fieldName': 'processed_by', 'refs': [[[45, 5], [45, 29]]]}], 'description': '# Bounded Context Overview: LoanProcess (대출/반납 프로세스)\n\n## Role\n회원의 도서 대출/반납/연장/예약 신청 및 승인, 대출 상태 변경, 대출 현황 및 연체 관리, 예약 처리와 연동된 도서 상태 변경을 담당한다.\n\n## Key Events\n- LoanRequested\n- LoanApproved\n- ReservationRequested\n- ReservationApproved\n- LoanReturned\n- LoanExtended\n- LoanStatusChanged\n\n# Requirements\n\n## userStory\n\n도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을\n\n대출/반납 상황에 따라 \'대출중\', \'예약중\' 상태로 자동으로 변경되어야\n\n\'대출/반납\' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 \'대출중\'으로 변경되어야\n\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 \'대출가능\'으로 변경되어야\n\n대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할\n\n## DDL\n\n```sql\nCREATE TABLE loans (\n    loan_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    loan_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    due_date DATETIME NOT NULL,\n    return_date DATETIME NULL,\n    loan_period_days INT NOT NULL CHECK (loan_period_days IN (7, 14, 30)),\n    status ENUM(\'대출중\', \'연체\', \'반납완료\', \'연장\') DEFAULT \'대출중\',\n    extension_count INT DEFAULT 0,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_due_date (due_date)\n);\n```\n```sql\nCREATE TABLE reservations (\n    reservation_id INT AUTO_INCREMENT PRIMARY KEY,\n    member_id VARCHAR(20) NOT NULL,\n    book_id INT NOT NULL,\n    reservation_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    status ENUM(\'예약중\', \'예약완료\', \'예약취소\', \'예약만료\') DEFAULT \'예약중\',\n    notification_sent BOOLEAN DEFAULT FALSE,\n    expiry_date DATETIME NULL,\n    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\n    FOREIGN KEY (member_id) REFERENCES members(member_id),\n    FOREIGN KEY (book_id) REFERENCES books(book_id),\n    INDEX idx_member_id (member_id),\n    INDEX idx_book_id (book_id),\n    INDEX idx_status (status),\n    INDEX idx_reservation_date (reservation_date)\n);\n```\n```sql\nCREATE TABLE loan_history (\n    history_id INT AUTO_INCREMENT PRIMARY KEY,\n    loan_id INT NOT NULL,\n    action_type ENUM(\'대출\', \'반납\', \'연장\', \'연체알림\', \'분실신고\') NOT NULL,\n    action_date DATETIME DEFAULT CURRENT_TIMESTAMP,\n    previous_due_date DATETIME NULL,\n    new_due_date DATETIME NULL,\n    notes TEXT,\n    processed_by VARCHAR(100),\n    FOREIGN KEY (loan_id) REFERENCES loans(loan_id),\n    INDEX idx_loan_id (loan_id),\n    INDEX idx_action_type (action_type),\n    INDEX idx_action_date (action_date)\n);\n```\n## Event\n\n```json\n{\n  "name": "LoanRequested",\n  "displayName": "대출 신청됨",\n  "actor": "Member",\n  "level": 1,\n  "description": "회원이 도서 대출을 신청함. 회원번호와 이름으로 본인 확인 후 대출할 도서를 선택함.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서명 또는 ISBN",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 신청 정보"\n  ],\n  "nextEvents": [\n    "LoanApproved",\n    "ReservationRequested"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanApproved",\n  "displayName": "대출 승인됨",\n  "actor": "System",\n  "level": 2,\n  "description": "대출 신청이 승인되어 도서가 회원에게 대출됨. 도서 상태가 자동으로 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "대출 신청 정보",\n    "도서 상태: 대출가능"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "LoanReturned",\n    "LoanExtended"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationRequested",\n  "displayName": "예약 신청됨",\n  "actor": "Member",\n  "level": 2,\n  "description": "대출하려는 도서가 이미 대출 중일 경우 회원이 예약을 신청함.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보"\n  ],\n  "nextEvents": [\n    "ReservationApproved"\n  ]\n}\n```\n\n```json\n{\n  "name": "ReservationApproved",\n  "displayName": "예약 승인됨",\n  "actor": "System",\n  "level": 3,\n  "description": "예약 신청이 승인되어 예약이 등록됨. 도서가 반납되면 예약자에게 알림이 전송됨.",\n  "inputs": [\n    "예약 정보",\n    "도서 상태: 대출중"\n  ],\n  "outputs": [\n    "예약 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출한 도서를 반납함. 도서 상태가 자동으로 \'대출가능\'으로 변경됨. 예약자가 있으면 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ]\n}\n```\n\n```json\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함.",\n  "inputs": [\n    "대출 정보",\n    "연장 요청"\n  ],\n  "outputs": [\n    "연장된 대출 정보",\n    "반납예정일 변경"\n  ],\n  "nextEvents": []\n}\n```\n\n```json\n{\n  "name": "LoanStatusChanged",\n  "displayName": "대출 상태 변경됨",\n  "actor": "System",\n  "level": 4,\n  "description": "대출 건의 상태(대출중/연체/반납완료 등)가 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "상태 변경 트리거(반납, 연체 등)"\n  ],\n  "outputs": [\n    "변경된 대출 상태"\n  ],\n  "nextEvents": []\n}\n```\n\n## Context Relations\n\n### LoanProcess-BookManagement\n- **Type**: Pub/Sub\n- **Direction**: sends to 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.\n\n### BookManagement-LoanProcess\n- **Type**: Pub/Sub\n- **Direction**: receives from 도서 관리 (BookManagement)\n- **Reason**: 대출/반납/예약 이벤트 발생 시 도서 상태 변경이 필요하므로, 이벤트 발행(Pub) 후 도서 관리 컨텍스트에서 구독(Sub)하여 상태를 변경한다. 이는 도메인 간 결합도를 낮추고 확장성을 높인다.\n- **Interaction Pattern**: 대출/반납/예약 처리 시 LoanProcess에서 BookManagement로 도서 상태 변경 이벤트를 발행한다.', 'event': '{\n  "name": "LoanRequested",\n  "displayName": "대출 신청됨",\n  "actor": "Member",\n  "level": 1,\n  "description": "회원이 도서 대출을 신청함. 회원번호와 이름으로 본인 확인 후 대출할 도서를 선택함.",\n  "inputs": [\n    "회원번호",\n    "이름",\n    "도서명 또는 ISBN",\n    "대출 기간(7/14/30일)"\n  ],\n  "outputs": [\n    "대출 신청 정보"\n  ],\n  "nextEvents": [\n    "LoanApproved",\n    "ReservationRequested"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        49\n      ],\n      [\n        5,\n        91\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanApproved",\n  "displayName": "대출 승인됨",\n  "actor": "System",\n  "level": 2,\n  "description": "대출 신청이 승인되어 도서가 회원에게 대출됨. 도서 상태가 자동으로 \'대출중\'으로 변경됨.",\n  "inputs": [\n    "대출 신청 정보",\n    "도서 상태: 대출가능"\n  ],\n  "outputs": [\n    "대출 정보",\n    "도서 상태: 대출중"\n  ],\n  "nextEvents": [\n    "LoanReturned",\n    "LoanExtended"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        198\n      ],\n      [\n        5,\n        235\n      ]\n    ]\n  ]\n}\n{\n  "name": "ReservationRequested",\n  "displayName": "예약 신청됨",\n  "actor": "Member",\n  "level": 2,\n  "description": "대출하려는 도서가 이미 대출 중일 경우 회원이 예약을 신청함.",\n  "inputs": [\n    "회원번호",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "예약 정보"\n  ],\n  "nextEvents": [\n    "ReservationApproved"\n  ],\n  "refs": [\n    [\n      [\n        5,\n        183\n      ],\n      [\n        5,\n        193\n      ]\n    ]\n  ]\n}\n{\n  "name": "ReservationApproved",\n  "displayName": "예약 승인됨",\n  "actor": "System",\n  "level": 3,\n  "description": "예약 신청이 승인되어 예약이 등록됨. 도서가 반납되면 예약자에게 알림이 전송됨.",\n  "inputs": [\n    "예약 정보",\n    "도서 상태: 대출중"\n  ],\n  "outputs": [\n    "예약 상태: 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        175\n      ],\n      [\n        7,\n        203\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanReturned",\n  "displayName": "도서 반납됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출한 도서를 반납함. 도서 상태가 자동으로 \'대출가능\'으로 변경됨. 예약자가 있으면 \'예약중\'으로 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "도서 식별자"\n  ],\n  "outputs": [\n    "도서 상태: 대출가능 또는 예약중"\n  ],\n  "nextEvents": [\n    "BookStatusChanged"\n  ],\n  "refs": [\n    [\n      [\n        7,\n        133\n      ],\n      [\n        7,\n        203\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanExtended",\n  "displayName": "대출 연장됨",\n  "actor": "Member",\n  "level": 3,\n  "description": "회원이 대출 중인 도서의 대출 기간을 연장함.",\n  "inputs": [\n    "대출 정보",\n    "연장 요청"\n  ],\n  "outputs": [\n    "연장된 대출 정보",\n    "반납예정일 변경"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        7,\n        109\n      ],\n      [\n        7,\n        110\n      ]\n    ]\n  ]\n}\n{\n  "name": "LoanStatusChanged",\n  "displayName": "대출 상태 변경됨",\n  "actor": "System",\n  "level": 4,\n  "description": "대출 건의 상태(대출중/연체/반납완료 등)가 변경됨.",\n  "inputs": [\n    "대출 정보",\n    "상태 변경 트리거(반납, 연체 등)"\n  ],\n  "outputs": [\n    "변경된 대출 상태"\n  ],\n  "nextEvents": [],\n  "refs": [\n    [\n      [\n        7,\n        65\n      ],\n      [\n        7,\n        81\n      ]\n    ]\n  ]\n}', 'eventNames': 'LoanRequested, LoanApproved, ReservationRequested, ReservationApproved, LoanReturned, LoanExtended, LoanStatusChanged 이벤트가 발생할 수 있어.', 'userStory': "도서관의 도서 관리와 대출/반납을 통합적으로 관리하는 화면을\n대출/반납 상황에 따라 '대출중', '예약중' 상태로 자동으로 변경되어야\n'대출/반납' 화면에서는 회원이 도서를 대출하고 반납하는 것을 관리할 수 있어야 해. 대출 신청 시에는 회원번호와 이름으로 회원을 확인하고, 대출할 도서를 선택해야 해. 도서는 도서명이나 ISBN으로 검색할 수 있어야 해. 대출 기간은 7일/14일/30일 중에서 선택할 수 있어. 만약 대출하려는 도서가 이미 대출 중이라면, 예약 신청이 가능해야 해. 대출이 완료되면 해당 도서의 상태는 자동으로 '대출중'으로 변경되어야\n대출 현황 화면에서는 현재 대출 중인 도서들의 목록을 볼 수 있어야 해. 각 대출 건에 대해 대출일, 반납예정일, 현재 상태(대출중/연체/반납완료)를 확인할 수 있어야 하고, 대출 중인 도서는 연장이나 반납 처리가 가능해야 해. 도서가 반납되면 자동으로 해당 도서의 상태가 '대출가능'으로 변경되어야\n대출 이력과 상태 변경 이력을 조회할 수 있어야 하고, 이를 통해 도서의 대출 현황과 상태 변화를 추적할"}}, '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 66], [16, 68]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 71], [16, 74]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 77], [16, 78]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 81], [16, 83]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 86], [16, 89]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 39], [16, 40]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[44, 5], [44, 41]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 17]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 14]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 15]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'3da4b8f9-e870-4c0c-a241-c935e4682215': {'_type': 'org.uengine.uml.model.Class', 'id': '3da4b8f9-e870-4c0c-a241-c935e4682215', 'name': 'Book', 'traceName': 'Book', 'namePascalCase': 'Book', 'nameCamelCase': 'book', 'namePlural': 'books', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 66], [16, 68]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 71], [16, 74]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 77], [16, 78]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 81], [16, 83]]], 'inputUI': None, 'options': None}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 86], [16, 89]]], 'inputUI': None, 'options': None}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 39], [16, 40]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[44, 5], [44, 41]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 17]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 14]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 15]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '3da4b8f9-e870-4c0c-a241-c935e4682215', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'refs': [[[4, 1], [4, 61]]]}, 'c7d6b17f-5c22-47dd-834d-ac01df5e7253': {'_type': 'org.uengine.uml.model.enum', 'id': 'c7d6b17f-5c22-47dd-834d-ac01df5e7253', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'c7d6b17f-5c22-47dd-834d-ac01df5e7253', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISCARDED', 'traceName': 'DISCARDED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[30, 5], [30, 51]]]}, 'af6849b6-6aae-42d8-b78e-78bfde4260bf': {'_type': 'org.uengine.uml.model.enum', 'id': 'af6849b6-6aae-42d8-b78e-78bfde4260bf', 'name': 'BookCategory', 'traceName': 'BookCategory', 'displayName': '도서 카테고리', 'nameCamelCase': 'bookCategory', 'namePascalCase': 'BookCategory', 'namePlural': 'bookCategories', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'af6849b6-6aae-42d8-b78e-78bfde4260bf', 'x': 950, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'NOVEL', 'traceName': 'NOVEL', 'refs': [[[29, 20], [29, 21]]]}, {'value': 'NON_FICTION', 'traceName': 'NON_FICTION', 'refs': [[[29, 26], [29, 28]]]}, {'value': 'ACADEMIC', 'traceName': 'ACADEMIC', 'refs': [[[29, 33], [29, 34]]]}, {'value': 'MAGAZINE', 'traceName': 'MAGAZINE', 'refs': [[[29, 39], [29, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[29, 5], [29, 12]]]}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175'}, 'commands': [], 'description': 'BookManagement 컨텍스트의 Book 애그리거트는 도서의 등록, 상태 관리, 폐기, 이력 조회 등 전체 라이프사이클을 책임진다. 도서 상태(BookStatus)와 카테고리(BookCategory)는 각각 Enumeration으로 정의하여 상태 및 분류의 유효값을 명확하게 제한한다. DDL에서 요구하는 모든 필드를 Book 애그리거트에 포함시켰으며, 이력 관리(대출 및 상태 변경 이력)는 외부 컨텍스트(LoanProcess)와의 Pub/Sub 이벤트 연동을 통해 처리된다. historyId, changeReason, changedBy, changeDate 등 이력 관련 필드는 별도의 이력 애그리거트가 아닌, Book 애그리거트의 상태 추적 및 이벤트 소싱을 통해 관리할 수 있도록 설계하였다. 모든 속성은 DDD 원칙에 따라 적절한 타입과 명명 규칙을 적용하였으며, 불필요한 ValueObject는 생성하지 않았다. 각 속성 및 타입은 Functional Requirements의 최소 참조 단위로 traceability를 보장한다.', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'x': 600, 'y': 450, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Book', 'traceName': 'Book', 'displayName': '도서', 'nameCamelCase': 'book', 'namePascalCase': 'Book', 'namePlural': 'books', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 1], [4, 61]]]}, '7e1c65a0-0845-484c-b014-e1541ffa2612': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 19]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 48]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 25]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanPeriod', 'isCopy': False, 'isKey': False, 'name': 'loanPeriod', 'traceName': 'loanPeriod', 'nameCamelCase': 'loanPeriod', 'namePascalCase': 'LoanPeriod', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 23]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[43, 5], [43, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[73, 5], [73, 41]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanActionType', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 58]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 35]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 30]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 14]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[80, 5], [80, 24]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'7f4ca9ed-29a9-4b02-8b13-a37f2c2f1e2d': {'_type': 'org.uengine.uml.model.Class', 'id': '7f4ca9ed-29a9-4b02-8b13-a37f2c2f1e2d', 'name': 'Loan', 'traceName': 'Loan', 'namePascalCase': 'Loan', 'nameCamelCase': 'loan', 'namePlural': 'loans', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 29]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 19]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 48]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 25]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 29]]], 'inputUI': None, 'options': None}, {'className': 'LoanPeriod', 'isCopy': False, 'isKey': False, 'name': 'loanPeriod', 'traceName': 'loanPeriod', 'nameCamelCase': 'loanPeriod', 'namePascalCase': 'LoanPeriod', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 23]]], 'inputUI': None, 'options': None}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 50]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 31]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[43, 5], [43, 49]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[73, 5], [73, 41]]], 'inputUI': None, 'options': None}, {'className': 'LoanActionType', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 58]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 50]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 35]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 30]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 14]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[80, 5], [80, 24]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '7f4ca9ed-29a9-4b02-8b13-a37f2c2f1e2d', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'refs': [[[4, 8], [4, 33]]]}, '9daae34e-4954-4119-b8cd-3cb3e30a153f': {'_type': 'org.uengine.uml.model.vo.Class', 'id': '9daae34e-4954-4119-b8cd-3cb3e30a153f', 'name': 'LoanPeriod', 'traceName': 'LoanPeriod', 'displayName': '대출 기간', 'namePascalCase': 'LoanPeriod', 'nameCamelCase': 'loanPeriod', 'namePlural': 'loanPeriods', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'days', 'traceName': 'days', 'nameCamelCase': 'days', 'namePascalCase': 'Days', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 23]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- days: Integer'}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 23]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- loanPeriodDays: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': '9daae34e-4954-4119-b8cd-3cb3e30a153f', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': [[[39, 5], [39, 23]]]}, '86e3fe20-4f5d-428b-98f0-311f7706eff1': {'_type': 'org.uengine.uml.model.enum', 'id': '86e3fe20-4f5d-428b-98f0-311f7706eff1', 'name': 'LoanStatus', 'traceName': 'LoanStatus', 'displayName': '대출 상태', 'nameCamelCase': 'loanStatus', 'namePascalCase': 'LoanStatus', 'namePlural': 'loanStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '86e3fe20-4f5d-428b-98f0-311f7706eff1', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[40, 18], [40, 20]]]}, {'value': 'OVERDUE', 'traceName': 'OVERDUE', 'refs': [[[40, 25], [40, 26]]]}, {'value': 'RETURNED', 'traceName': 'RETURNED', 'refs': [[[40, 31], [40, 34]]]}, {'value': 'EXTENDED', 'traceName': 'EXTENDED', 'refs': [[[40, 39], [40, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[40, 5], [40, 50]]]}, '52b66955-8508-4126-be2b-b154952d406d': {'_type': 'org.uengine.uml.model.enum', 'id': '52b66955-8508-4126-be2b-b154952d406d', 'name': 'LoanActionType', 'traceName': 'LoanActionType', 'displayName': '대출 이력 액션 타입', 'nameCamelCase': 'loanActionType', 'namePascalCase': 'LoanActionType', 'namePlural': 'loanActionTypes', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '52b66955-8508-4126-be2b-b154952d406d', 'x': 950, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'LOAN', 'traceName': 'LOAN', 'refs': [[[75, 23], [75, 24]]]}, {'value': 'RETURN', 'traceName': 'RETURN', 'refs': [[[75, 29], [75, 30]]]}, {'value': 'EXTEND', 'traceName': 'EXTEND', 'refs': [[[75, 35], [75, 36]]]}, {'value': 'OVERDUE_NOTICE', 'traceName': 'OVERDUE_NOTICE', 'refs': [[[75, 41], [75, 44]]]}, {'value': 'LOST_REPORT', 'traceName': 'LOST_REPORT', 'refs': [[[75, 49], [75, 52]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[75, 5], [75, 58]]]}, 'f626a561-788a-4ab7-8cec-490dec06a412': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'f626a561-788a-4ab7-8cec-490dec06a412', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'f626a561-788a-4ab7-8cec-490dec06a412', 'x': 950, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': '630001b1-de92-4141-b175-0146789a8494', 'id': '630001b1-de92-4141-b175-0146789a8494'}, 'commands': [], 'description': 'LoanProcess 컨텍스트의 주요 Aggregate는 Loan(대출)이다. 이 Aggregate는 대출의 전체 라이프사이클(신청, 승인, 반납, 연장 등)과 상태 추적, 연장 횟수, 기간, 연체 등 도메인 이벤트와 상태 변화를 관리해야 한다. status는 LoanStatus(대출 상태) Enumeration으로 관리하며, loanPeriodDays는 7/14/30일의 선택지를 가지므로 LoanPeriod ValueObject로 캡슐화한다. DDL의 필수 필드(loanId, memberId, bookId, loanDate, dueDate, returnDate, loanPeriodDays, status, extensionCount, createdAt, updatedAt, historyId, actionType, actionDate, previousDueDate, newDueDate, notes, processedBy)는 Loan Aggregate와 필요한 경우 ValueObject로 분리하여 모두 포함한다. BookManagement와의 Pub/Sub 연동을 위해 bookId, status 등 외부 시스템 연동에 필요한 속성을 반드시 포함한다. LoanHistory와 같은 이력성 데이터는 별도 Aggregate로 분리할 수 있으나, 본 과제에서는 Loan Aggregate 내에 historyId 등 이력 추적 필드를 포함한다.', 'id': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'x': 1185.0, 'y': 450, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Loan', 'traceName': 'Loan', 'displayName': '대출', 'nameCamelCase': 'loan', 'namePascalCase': 'Loan', 'namePlural': 'loans', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 8], [4, 33]]]}, '0c53b5dc-e195-4878-8e80-a79a6e8b96ae': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 45]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 34]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 24]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 55]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 54]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 43]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[62, 5], [62, 49]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'db9b6c54-de74-4ef9-b19d-de438062e0c1': {'_type': 'org.uengine.uml.model.Class', 'id': 'db9b6c54-de74-4ef9-b19d-de438062e0c1', 'name': 'Reservation', 'traceName': 'Reservation', 'namePascalCase': 'Reservation', 'nameCamelCase': 'reservation', 'namePlural': 'reservations', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 45]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 34]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 24]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 55]]], 'inputUI': None, 'options': None}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 54]]], 'inputUI': None, 'options': None}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 43]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[62, 5], [62, 49]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': 'db9b6c54-de74-4ef9-b19d-de438062e0c1', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'refs': [[[53, 2], [69, 2]]]}, '56aaf8d9-ddcd-4022-9a18-821c5c0d70f8': {'_type': 'org.uengine.uml.model.enum', 'id': '56aaf8d9-ddcd-4022-9a18-821c5c0d70f8', 'name': 'ReservationStatus', 'traceName': 'ReservationStatus', 'displayName': '예약 상태', 'nameCamelCase': 'reservationStatus', 'namePascalCase': 'ReservationStatus', 'namePlural': 'reservationStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '56aaf8d9-ddcd-4022-9a18-821c5c0d70f8', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[58, 18], [58, 20]]]}, {'value': 'APPROVED', 'traceName': 'APPROVED', 'refs': [[[58, 25], [58, 28]]]}, {'value': 'CANCELLED', 'traceName': 'CANCELLED', 'refs': [[[58, 33], [58, 36]]]}, {'value': 'EXPIRED', 'traceName': 'EXPIRED', 'refs': [[[58, 41], [58, 44]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[58, 5], [58, 54]]]}, 'f626a561-788a-4ab7-8cec-490dec06a412': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'f626a561-788a-4ab7-8cec-490dec06a412', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'f626a561-788a-4ab7-8cec-490dec06a412', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': '630001b1-de92-4141-b175-0146789a8494', 'id': '630001b1-de92-4141-b175-0146789a8494'}, 'commands': [], 'description': 'Reservation 애그리게이트는 도서 예약의 전체 라이프사이클을 관리하며, 예약 상태 추적 및 이벤트 발행을 지원해야 한다. 예약 상태(status)는 ReservationStatus 열거형으로 관리하며, 예약 식별자(reservationId), 회원 식별자(memberId), 도서 식별자(bookId), 예약일(reservationDate), 알림 전송 여부(notificationSent), 만료일(expiryDate), 생성일(createdAt), 수정일(updatedAt) 등 DDL에서 요구하는 모든 필드를 포함한다. Pub/Sub 패턴에 따라 BookManagement 컨텍스트와의 통합을 위해 예약 상태 변경 이벤트를 발행할 수 있도록 설계한다. 모든 속성은 도메인 이벤트 및 상태 추적을 지원하며, 예약 상태는 명확한 상태 전이를 위해 Enumeration으로 구현한다.', 'id': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'x': 1615.0, 'y': 450, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Reservation', 'traceName': 'Reservation', 'displayName': '예약', 'nameCamelCase': 'reservation', 'namePascalCase': 'Reservation', 'namePlural': 'reservations', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[53, 2], [69, 2]]]}}, relations={'f0f24458-4787-4674-a2f6-57f80333bcb7': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': 'f0f24458-4787-4674-a2f6-57f80333bcb7', 'sourceElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 19]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 48]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 25]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanPeriod', 'isCopy': False, 'isKey': False, 'name': 'loanPeriod', 'traceName': 'loanPeriod', 'nameCamelCase': 'loanPeriod', 'namePascalCase': 'LoanPeriod', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 23]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[43, 5], [43, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[73, 5], [73, 41]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'LoanActionType', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 58]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 50]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 35]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 30]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 14]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[80, 5], [80, 24]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'7f4ca9ed-29a9-4b02-8b13-a37f2c2f1e2d': {'_type': 'org.uengine.uml.model.Class', 'id': '7f4ca9ed-29a9-4b02-8b13-a37f2c2f1e2d', 'name': 'Loan', 'traceName': 'Loan', 'namePascalCase': 'Loan', 'nameCamelCase': 'loan', 'namePlural': 'loans', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'loanId', 'traceName': 'loanId', 'nameCamelCase': 'loanId', 'namePascalCase': 'LoanId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 29]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 19]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'loanDate', 'traceName': 'loanDate', 'nameCamelCase': 'loanDate', 'namePascalCase': 'LoanDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[36, 5], [36, 48]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'dueDate', 'traceName': 'dueDate', 'nameCamelCase': 'dueDate', 'namePascalCase': 'DueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[37, 5], [37, 25]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'returnDate', 'traceName': 'returnDate', 'nameCamelCase': 'returnDate', 'namePascalCase': 'ReturnDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[38, 5], [38, 29]]], 'inputUI': None, 'options': None}, {'className': 'LoanPeriod', 'isCopy': False, 'isKey': False, 'name': 'loanPeriod', 'traceName': 'loanPeriod', 'nameCamelCase': 'loanPeriod', 'namePascalCase': 'LoanPeriod', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 23]]], 'inputUI': None, 'options': None}, {'className': 'LoanStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[40, 5], [40, 50]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'extensionCount', 'traceName': 'extensionCount', 'nameCamelCase': 'extensionCount', 'namePascalCase': 'ExtensionCount', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[41, 5], [41, 31]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[42, 5], [42, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[43, 5], [43, 49]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[73, 5], [73, 41]]], 'inputUI': None, 'options': None}, {'className': 'LoanActionType', 'isCopy': False, 'isKey': False, 'name': 'actionType', 'traceName': 'actionType', 'nameCamelCase': 'actionType', 'namePascalCase': 'ActionType', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[75, 5], [75, 58]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'actionDate', 'traceName': 'actionDate', 'nameCamelCase': 'actionDate', 'namePascalCase': 'ActionDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[76, 5], [76, 50]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'previousDueDate', 'traceName': 'previousDueDate', 'nameCamelCase': 'previousDueDate', 'namePascalCase': 'PreviousDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[77, 5], [77, 35]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'newDueDate', 'traceName': 'newDueDate', 'nameCamelCase': 'newDueDate', 'namePascalCase': 'NewDueDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[78, 5], [78, 30]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'notes', 'traceName': 'notes', 'nameCamelCase': 'notes', 'namePascalCase': 'Notes', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[79, 5], [79, 14]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'processedBy', 'traceName': 'processedBy', 'nameCamelCase': 'processedBy', 'namePascalCase': 'ProcessedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[80, 5], [80, 24]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '7f4ca9ed-29a9-4b02-8b13-a37f2c2f1e2d', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'refs': [[[4, 8], [4, 33]]]}, '9daae34e-4954-4119-b8cd-3cb3e30a153f': {'_type': 'org.uengine.uml.model.vo.Class', 'id': '9daae34e-4954-4119-b8cd-3cb3e30a153f', 'name': 'LoanPeriod', 'traceName': 'LoanPeriod', 'displayName': '대출 기간', 'namePascalCase': 'LoanPeriod', 'nameCamelCase': 'loanPeriod', 'namePlural': 'loanPeriods', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'days', 'traceName': 'days', 'nameCamelCase': 'days', 'namePascalCase': 'Days', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 23]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- days: Integer'}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'loanPeriodDays', 'traceName': 'loanPeriodDays', 'nameCamelCase': 'loanPeriodDays', 'namePascalCase': 'LoanPeriodDays', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[39, 5], [39, 23]]], 'referenceClass': None, 'isOverrideField': False, 'label': '- loanPeriodDays: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': '9daae34e-4954-4119-b8cd-3cb3e30a153f', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': [[[39, 5], [39, 23]]]}, '86e3fe20-4f5d-428b-98f0-311f7706eff1': {'_type': 'org.uengine.uml.model.enum', 'id': '86e3fe20-4f5d-428b-98f0-311f7706eff1', 'name': 'LoanStatus', 'traceName': 'LoanStatus', 'displayName': '대출 상태', 'nameCamelCase': 'loanStatus', 'namePascalCase': 'LoanStatus', 'namePlural': 'loanStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '86e3fe20-4f5d-428b-98f0-311f7706eff1', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[40, 18], [40, 20]]]}, {'value': 'OVERDUE', 'traceName': 'OVERDUE', 'refs': [[[40, 25], [40, 26]]]}, {'value': 'RETURNED', 'traceName': 'RETURNED', 'refs': [[[40, 31], [40, 34]]]}, {'value': 'EXTENDED', 'traceName': 'EXTENDED', 'refs': [[[40, 39], [40, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[40, 5], [40, 50]]]}, '52b66955-8508-4126-be2b-b154952d406d': {'_type': 'org.uengine.uml.model.enum', 'id': '52b66955-8508-4126-be2b-b154952d406d', 'name': 'LoanActionType', 'traceName': 'LoanActionType', 'displayName': '대출 이력 액션 타입', 'nameCamelCase': 'loanActionType', 'namePascalCase': 'LoanActionType', 'namePlural': 'loanActionTypes', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '52b66955-8508-4126-be2b-b154952d406d', 'x': 950, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'LOAN', 'traceName': 'LOAN', 'refs': [[[75, 23], [75, 24]]]}, {'value': 'RETURN', 'traceName': 'RETURN', 'refs': [[[75, 29], [75, 30]]]}, {'value': 'EXTEND', 'traceName': 'EXTEND', 'refs': [[[75, 35], [75, 36]]]}, {'value': 'OVERDUE_NOTICE', 'traceName': 'OVERDUE_NOTICE', 'refs': [[[75, 41], [75, 44]]]}, {'value': 'LOST_REPORT', 'traceName': 'LOST_REPORT', 'refs': [[[75, 49], [75, 52]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[75, 5], [75, 58]]]}, 'f626a561-788a-4ab7-8cec-490dec06a412': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'f626a561-788a-4ab7-8cec-490dec06a412', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'f626a561-788a-4ab7-8cec-490dec06a412', 'x': 950, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': '630001b1-de92-4141-b175-0146789a8494', 'id': '630001b1-de92-4141-b175-0146789a8494'}, 'commands': [], 'description': 'LoanProcess 컨텍스트의 주요 Aggregate는 Loan(대출)이다. 이 Aggregate는 대출의 전체 라이프사이클(신청, 승인, 반납, 연장 등)과 상태 추적, 연장 횟수, 기간, 연체 등 도메인 이벤트와 상태 변화를 관리해야 한다. status는 LoanStatus(대출 상태) Enumeration으로 관리하며, loanPeriodDays는 7/14/30일의 선택지를 가지므로 LoanPeriod ValueObject로 캡슐화한다. DDL의 필수 필드(loanId, memberId, bookId, loanDate, dueDate, returnDate, loanPeriodDays, status, extensionCount, createdAt, updatedAt, historyId, actionType, actionDate, previousDueDate, newDueDate, notes, processedBy)는 Loan Aggregate와 필요한 경우 ValueObject로 분리하여 모두 포함한다. BookManagement와의 Pub/Sub 연동을 위해 bookId, status 등 외부 시스템 연동에 필요한 속성을 반드시 포함한다. LoanHistory와 같은 이력성 데이터는 별도 Aggregate로 분리할 수 있으나, 본 과제에서는 Loan Aggregate 내에 historyId 등 이력 추적 필드를 포함한다.', 'id': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'x': 1185.0, 'y': 450, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Loan', 'traceName': 'Loan', 'displayName': '대출', 'nameCamelCase': 'loan', 'namePascalCase': 'Loan', 'namePlural': 'loans', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 8], [4, 33]]]}, 'targetElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 66], [16, 68]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 71], [16, 74]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 77], [16, 78]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 81], [16, 83]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 86], [16, 89]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 39], [16, 40]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[44, 5], [44, 41]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 17]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 14]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 15]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'3da4b8f9-e870-4c0c-a241-c935e4682215': {'_type': 'org.uengine.uml.model.Class', 'id': '3da4b8f9-e870-4c0c-a241-c935e4682215', 'name': 'Book', 'traceName': 'Book', 'namePascalCase': 'Book', 'nameCamelCase': 'book', 'namePlural': 'books', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 66], [16, 68]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 71], [16, 74]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 77], [16, 78]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 81], [16, 83]]], 'inputUI': None, 'options': None}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 86], [16, 89]]], 'inputUI': None, 'options': None}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 39], [16, 40]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[44, 5], [44, 41]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 17]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 14]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 15]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '3da4b8f9-e870-4c0c-a241-c935e4682215', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'refs': [[[4, 1], [4, 61]]]}, 'c7d6b17f-5c22-47dd-834d-ac01df5e7253': {'_type': 'org.uengine.uml.model.enum', 'id': 'c7d6b17f-5c22-47dd-834d-ac01df5e7253', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'c7d6b17f-5c22-47dd-834d-ac01df5e7253', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISCARDED', 'traceName': 'DISCARDED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[30, 5], [30, 51]]]}, 'af6849b6-6aae-42d8-b78e-78bfde4260bf': {'_type': 'org.uengine.uml.model.enum', 'id': 'af6849b6-6aae-42d8-b78e-78bfde4260bf', 'name': 'BookCategory', 'traceName': 'BookCategory', 'displayName': '도서 카테고리', 'nameCamelCase': 'bookCategory', 'namePascalCase': 'BookCategory', 'namePlural': 'bookCategories', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'af6849b6-6aae-42d8-b78e-78bfde4260bf', 'x': 950, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'NOVEL', 'traceName': 'NOVEL', 'refs': [[[29, 20], [29, 21]]]}, {'value': 'NON_FICTION', 'traceName': 'NON_FICTION', 'refs': [[[29, 26], [29, 28]]]}, {'value': 'ACADEMIC', 'traceName': 'ACADEMIC', 'refs': [[[29, 33], [29, 34]]]}, {'value': 'MAGAZINE', 'traceName': 'MAGAZINE', 'refs': [[[29, 39], [29, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[29, 5], [29, 12]]]}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175'}, 'commands': [], 'description': 'BookManagement 컨텍스트의 Book 애그리거트는 도서의 등록, 상태 관리, 폐기, 이력 조회 등 전체 라이프사이클을 책임진다. 도서 상태(BookStatus)와 카테고리(BookCategory)는 각각 Enumeration으로 정의하여 상태 및 분류의 유효값을 명확하게 제한한다. DDL에서 요구하는 모든 필드를 Book 애그리거트에 포함시켰으며, 이력 관리(대출 및 상태 변경 이력)는 외부 컨텍스트(LoanProcess)와의 Pub/Sub 이벤트 연동을 통해 처리된다. historyId, changeReason, changedBy, changeDate 등 이력 관련 필드는 별도의 이력 애그리거트가 아닌, Book 애그리거트의 상태 추적 및 이벤트 소싱을 통해 관리할 수 있도록 설계하였다. 모든 속성은 DDD 원칙에 따라 적절한 타입과 명명 규칙을 적용하였으며, 불필요한 ValueObject는 생성하지 않았다. 각 속성 및 타입은 Functional Requirements의 최소 참조 단위로 traceability를 보장한다.', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'x': 600, 'y': 450, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Book', 'traceName': 'Book', 'displayName': '도서', 'nameCamelCase': 'book', 'namePascalCase': 'Book', 'namePlural': 'books', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 1], [4, 61]]]}, 'from': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'to': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'relationView': {'id': 'f0f24458-4787-4674-a2f6-57f80333bcb7', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'to': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '7e1c65a0-0845-484c-b014-e1541ffa2612', 'id': 'f0f24458-4787-4674-a2f6-57f80333bcb7', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}, 'c77a3a54-e4b7-4437-a444-ec87f4852504': {'_type': 'org.uengine.modeling.model.Relation', 'name': '', 'id': 'c77a3a54-e4b7-4437-a444-ec87f4852504', 'sourceElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 45]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 34]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 24]]], 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 55]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 54]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 43]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[62, 5], [62, 49]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'db9b6c54-de74-4ef9-b19d-de438062e0c1': {'_type': 'org.uengine.uml.model.Class', 'id': 'db9b6c54-de74-4ef9-b19d-de438062e0c1', 'name': 'Reservation', 'traceName': 'Reservation', 'namePascalCase': 'Reservation', 'nameCamelCase': 'reservation', 'namePlural': 'reservations', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'reservationId', 'traceName': 'reservationId', 'nameCamelCase': 'reservationId', 'namePascalCase': 'ReservationId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[54, 5], [54, 45]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'memberId', 'traceName': 'memberId', 'nameCamelCase': 'memberId', 'namePascalCase': 'MemberId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[55, 5], [55, 34]]], 'inputUI': None, 'options': None}, {'className': 'BookId', 'isCopy': False, 'isKey': False, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[56, 5], [56, 24]]], 'inputUI': None, 'options': None, 'referenceClass': 'Book', 'isOverrideField': True}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'reservationDate', 'traceName': 'reservationDate', 'nameCamelCase': 'reservationDate', 'namePascalCase': 'ReservationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[57, 5], [57, 55]]], 'inputUI': None, 'options': None}, {'className': 'ReservationStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[58, 5], [58, 54]]], 'inputUI': None, 'options': None}, {'className': 'Boolean', 'isCopy': False, 'isKey': False, 'name': 'notificationSent', 'traceName': 'notificationSent', 'nameCamelCase': 'notificationSent', 'namePascalCase': 'NotificationSent', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[59, 5], [59, 43]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'expiryDate', 'traceName': 'expiryDate', 'nameCamelCase': 'expiryDate', 'namePascalCase': 'ExpiryDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[60, 5], [60, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[61, 5], [61, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[62, 5], [62, 49]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': 'db9b6c54-de74-4ef9-b19d-de438062e0c1', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'refs': [[[53, 2], [69, 2]]]}, '56aaf8d9-ddcd-4022-9a18-821c5c0d70f8': {'_type': 'org.uengine.uml.model.enum', 'id': '56aaf8d9-ddcd-4022-9a18-821c5c0d70f8', 'name': 'ReservationStatus', 'traceName': 'ReservationStatus', 'displayName': '예약 상태', 'nameCamelCase': 'reservationStatus', 'namePascalCase': 'ReservationStatus', 'namePlural': 'reservationStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': '56aaf8d9-ddcd-4022-9a18-821c5c0d70f8', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[58, 18], [58, 20]]]}, {'value': 'APPROVED', 'traceName': 'APPROVED', 'refs': [[[58, 25], [58, 28]]]}, {'value': 'CANCELLED', 'traceName': 'CANCELLED', 'refs': [[[58, 33], [58, 36]]]}, {'value': 'EXPIRED', 'traceName': 'EXPIRED', 'refs': [[[58, 41], [58, 44]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[58, 5], [58, 54]]]}, 'f626a561-788a-4ab7-8cec-490dec06a412': {'_type': 'org.uengine.uml.model.vo.Class', 'id': 'f626a561-788a-4ab7-8cec-490dec06a412', 'name': 'BookId', 'traceName': 'BookId', 'displayName': '', 'namePascalCase': 'BookId', 'nameCamelCase': 'bookId', 'namePlural': 'bookIds', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': None, 'referenceClass': 'Book', 'isOverrideField': True, 'label': '- bookId: Integer'}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.vo.address.Class', 'id': 'f626a561-788a-4ab7-8cec-490dec06a412', 'x': 700, 'y': 152, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 170, 'fieldH': 150, 'methodH': 30}, 'selected': False, 'parentOperations': [], 'relationType': None, 'isVO': True, 'relations': [], 'groupElement': None, 'isAggregateRoot': False, 'isAbstract': False, 'isInterface': False, 'refs': []}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': '630001b1-de92-4141-b175-0146789a8494', 'id': '630001b1-de92-4141-b175-0146789a8494'}, 'commands': [], 'description': 'Reservation 애그리게이트는 도서 예약의 전체 라이프사이클을 관리하며, 예약 상태 추적 및 이벤트 발행을 지원해야 한다. 예약 상태(status)는 ReservationStatus 열거형으로 관리하며, 예약 식별자(reservationId), 회원 식별자(memberId), 도서 식별자(bookId), 예약일(reservationDate), 알림 전송 여부(notificationSent), 만료일(expiryDate), 생성일(createdAt), 수정일(updatedAt) 등 DDL에서 요구하는 모든 필드를 포함한다. Pub/Sub 패턴에 따라 BookManagement 컨텍스트와의 통합을 위해 예약 상태 변경 이벤트를 발행할 수 있도록 설계한다. 모든 속성은 도메인 이벤트 및 상태 추적을 지원하며, 예약 상태는 명확한 상태 전이를 위해 Enumeration으로 구현한다.', 'id': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'x': 1615.0, 'y': 450, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Reservation', 'traceName': 'Reservation', 'displayName': '예약', 'nameCamelCase': 'reservation', 'namePascalCase': 'Reservation', 'namePlural': 'reservations', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[53, 2], [69, 2]]]}, 'targetElement': {'aggregateRoot': {'_type': 'org.uengine.modeling.model.AggregateRoot', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 66], [16, 68]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 71], [16, 74]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 77], [16, 78]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 81], [16, 83]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 86], [16, 89]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 39], [16, 40]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[44, 5], [44, 41]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 17]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 14]]], 'referenceClass': None, 'isOverrideField': False}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 15]]], 'referenceClass': None, 'isOverrideField': False}], 'entities': {'elements': {'3da4b8f9-e870-4c0c-a241-c935e4682215': {'_type': 'org.uengine.uml.model.Class', 'id': '3da4b8f9-e870-4c0c-a241-c935e4682215', 'name': 'Book', 'traceName': 'Book', 'namePascalCase': 'Book', 'nameCamelCase': 'book', 'namePlural': 'books', 'fieldDescriptors': [{'className': 'Integer', 'isCopy': False, 'isKey': True, 'name': 'bookId', 'traceName': 'bookId', 'nameCamelCase': 'bookId', 'namePascalCase': 'BookId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[24, 5], [24, 38]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'title', 'traceName': 'title', 'nameCamelCase': 'title', 'namePascalCase': 'Title', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 66], [16, 68]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'isbn', 'traceName': 'isbn', 'nameCamelCase': 'isbn', 'namePascalCase': 'Isbn', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 71], [16, 74]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'author', 'traceName': 'author', 'nameCamelCase': 'author', 'namePascalCase': 'Author', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 77], [16, 78]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'publisher', 'traceName': 'publisher', 'nameCamelCase': 'publisher', 'namePascalCase': 'Publisher', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 81], [16, 83]]], 'inputUI': None, 'options': None}, {'className': 'BookCategory', 'isCopy': False, 'isKey': False, 'name': 'category', 'traceName': 'category', 'nameCamelCase': 'category', 'namePascalCase': 'Category', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 86], [16, 89]]], 'inputUI': None, 'options': None}, {'className': 'BookStatus', 'isCopy': False, 'isKey': False, 'name': 'status', 'traceName': 'status', 'nameCamelCase': 'status', 'namePascalCase': 'Status', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[16, 39], [16, 40]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'registrationDate', 'traceName': 'registrationDate', 'nameCamelCase': 'registrationDate', 'namePascalCase': 'RegistrationDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[31, 5], [31, 56]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'disposalDate', 'traceName': 'disposalDate', 'nameCamelCase': 'disposalDate', 'namePascalCase': 'DisposalDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[32, 5], [32, 31]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'disposalReason', 'traceName': 'disposalReason', 'nameCamelCase': 'disposalReason', 'namePascalCase': 'DisposalReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[33, 5], [33, 29]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'createdAt', 'traceName': 'createdAt', 'nameCamelCase': 'createdAt', 'namePascalCase': 'CreatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[34, 5], [34, 49]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'updatedAt', 'traceName': 'updatedAt', 'nameCamelCase': 'updatedAt', 'namePascalCase': 'UpdatedAt', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[35, 5], [35, 49]]], 'inputUI': None, 'options': None}, {'className': 'Integer', 'isCopy': False, 'isKey': False, 'name': 'historyId', 'traceName': 'historyId', 'nameCamelCase': 'historyId', 'namePascalCase': 'HistoryId', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[44, 5], [44, 41]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changeReason', 'traceName': 'changeReason', 'nameCamelCase': 'changeReason', 'namePascalCase': 'ChangeReason', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[48, 5], [48, 17]]], 'inputUI': None, 'options': None}, {'className': 'String', 'isCopy': False, 'isKey': False, 'name': 'changedBy', 'traceName': 'changedBy', 'nameCamelCase': 'changedBy', 'namePascalCase': 'ChangedBy', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[49, 5], [49, 14]]], 'inputUI': None, 'options': None}, {'className': 'Date', 'isCopy': False, 'isKey': False, 'name': 'changeDate', 'traceName': 'changeDate', 'nameCamelCase': 'changeDate', 'namePascalCase': 'ChangeDate', 'displayName': '', '_type': 'org.uengine.model.FieldDescriptor', 'isList': False, 'refs': [[[50, 5], [50, 15]]], 'inputUI': None, 'options': None}], 'operations': [], 'elementView': {'_type': 'org.uengine.uml.model.Class', 'id': '3da4b8f9-e870-4c0c-a241-c935e4682215', 'x': 200, 'y': 200, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 120, 'fieldH': 90, 'methodH': 30}, 'selected': False, 'relations': [], 'parentOperations': [], 'relationType': None, 'isVO': False, 'isAbstract': False, 'isInterface': False, 'isAggregateRoot': True, 'parentId': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'refs': [[[4, 1], [4, 61]]]}, 'c7d6b17f-5c22-47dd-834d-ac01df5e7253': {'_type': 'org.uengine.uml.model.enum', 'id': 'c7d6b17f-5c22-47dd-834d-ac01df5e7253', 'name': 'BookStatus', 'traceName': 'BookStatus', 'displayName': '도서 상태', 'nameCamelCase': 'bookStatus', 'namePascalCase': 'BookStatus', 'namePlural': 'bookStatuses', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'c7d6b17f-5c22-47dd-834d-ac01df5e7253', 'x': 700, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'AVAILABLE', 'traceName': 'AVAILABLE', 'refs': [[[30, 18], [30, 21]]]}, {'value': 'ON_LOAN', 'traceName': 'ON_LOAN', 'refs': [[[30, 26], [30, 28]]]}, {'value': 'RESERVED', 'traceName': 'RESERVED', 'refs': [[[30, 33], [30, 35]]]}, {'value': 'DISCARDED', 'traceName': 'DISCARDED', 'refs': [[[30, 40], [30, 41]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[30, 5], [30, 51]]]}, 'af6849b6-6aae-42d8-b78e-78bfde4260bf': {'_type': 'org.uengine.uml.model.enum', 'id': 'af6849b6-6aae-42d8-b78e-78bfde4260bf', 'name': 'BookCategory', 'traceName': 'BookCategory', 'displayName': '도서 카테고리', 'nameCamelCase': 'bookCategory', 'namePascalCase': 'BookCategory', 'namePlural': 'bookCategories', 'elementView': {'_type': 'org.uengine.uml.model.enum', 'id': 'af6849b6-6aae-42d8-b78e-78bfde4260bf', 'x': 950, 'y': 456, 'width': 200, 'height': 100, 'style': '{}', 'titleH': 50, 'subEdgeH': 50}, 'selected': False, 'items': [{'value': 'NOVEL', 'traceName': 'NOVEL', 'refs': [[[29, 20], [29, 21]]]}, {'value': 'NON_FICTION', 'traceName': 'NON_FICTION', 'refs': [[[29, 26], [29, 28]]]}, {'value': 'ACADEMIC', 'traceName': 'ACADEMIC', 'refs': [[[29, 33], [29, 34]]]}, {'value': 'MAGAZINE', 'traceName': 'MAGAZINE', 'refs': [[[29, 39], [29, 40]]]}], 'useKeyValue': False, 'relations': [], 'refs': [[[29, 5], [29, 12]]]}}, 'relations': {}}, 'operations': []}, 'author': 'EYCl46CwWAWvpz2E1BCUpVgPIpa2', 'boundedContext': {'name': '2de7f37d-6fe5-47aa-8e6c-74c55292a175', 'id': '2de7f37d-6fe5-47aa-8e6c-74c55292a175'}, 'commands': [], 'description': 'BookManagement 컨텍스트의 Book 애그리거트는 도서의 등록, 상태 관리, 폐기, 이력 조회 등 전체 라이프사이클을 책임진다. 도서 상태(BookStatus)와 카테고리(BookCategory)는 각각 Enumeration으로 정의하여 상태 및 분류의 유효값을 명확하게 제한한다. DDL에서 요구하는 모든 필드를 Book 애그리거트에 포함시켰으며, 이력 관리(대출 및 상태 변경 이력)는 외부 컨텍스트(LoanProcess)와의 Pub/Sub 이벤트 연동을 통해 처리된다. historyId, changeReason, changedBy, changeDate 등 이력 관련 필드는 별도의 이력 애그리거트가 아닌, Book 애그리거트의 상태 추적 및 이벤트 소싱을 통해 관리할 수 있도록 설계하였다. 모든 속성은 DDD 원칙에 따라 적절한 타입과 명명 규칙을 적용하였으며, 불필요한 ValueObject는 생성하지 않았다. 각 속성 및 타입은 Functional Requirements의 최소 참조 단위로 traceability를 보장한다.', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'elementView': {'_type': 'org.uengine.modeling.model.Aggregate', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'x': 600, 'y': 450, 'width': 130, 'height': 400}, 'events': [], 'hexagonalView': {'_type': 'org.uengine.modeling.model.AggregateHexagonal', 'id': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'x': 0, 'y': 0, 'subWidth': 0, 'width': 0}, 'name': 'Book', 'traceName': 'Book', 'displayName': '도서', 'nameCamelCase': 'book', 'namePascalCase': 'Book', 'namePlural': 'books', 'rotateStatus': False, 'selected': False, '_type': 'org.uengine.modeling.model.Aggregate', 'refs': [[[4, 1], [4, 61]]]}, 'from': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'to': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'relationView': {'id': 'c77a3a54-e4b7-4437-a444-ec87f4852504', 'style': '{"arrow-start":"none","arrow-end":"none"}', 'from': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'to': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'needReconnect': True, 'value': '[]'}, 'hexagonalView': {'_type': 'org.uengine.modeling.model.RelationHexagonal', 'from': '0c53b5dc-e195-4878-8e80-a79a6e8b96ae', 'id': 'c77a3a54-e4b7-4437-a444-ec87f4852504', 'needReconnect': True, 'style': '{"arrow-start":"none","arrow-end":"none"}', 'to': '75b8a1a9-e0ab-49eb-9e3b-607f23ceb2d4', 'value': None}, 'sourceMultiplicity': '1', 'targetMultiplicity': '1'}}), isCompleted=False, isFailed=False, logs=[LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[ROOT_GRAPH] Starting new event storming generation process'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[ROOT_GRAPH] Starting bounded context creation process'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[ROOT_GRAPH] Processing 2 bounded contexts for creation'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[ROOT_GRAPH] Processing bounded context 1/2: 'BookManagement'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[ROOT_GRAPH] Creating new bounded context: 'BookManagement'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[ROOT_GRAPH] Successfully created bounded context: 'BookManagement' with ID: '2de7f37d-6fe5-47aa-8e6c-74c55292a175'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[ROOT_GRAPH] Processing bounded context 2/2: 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[ROOT_GRAPH] Creating new bounded context: 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[ROOT_GRAPH] Successfully created bounded context: 'LoanProcess' with ID: '630001b1-de92-4141-b175-0146789a8494'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[ROOT_GRAPH] Bounded context creation completed successfully.'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Starting aggregate generation process'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Starting aggregate generation preparation'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Processing bounded context 'BookManagement' with 1 aggregates"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Queued aggregate 'Book' in context 'BookManagement' with 14 DDL fields (accumulated: False)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Processing bounded context 'LoanProcess' with 2 aggregates"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Queued aggregate 'Loan' in context 'LoanProcess' with 18 DDL fields (accumulated: False)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Queued aggregate 'Reservation' in context 'LoanProcess' with 9 DDL fields (accumulated: True)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Preparation completed. Total aggregates to process: 3'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Selecting next aggregate. Pending: 3, Completed: 0'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Selected next aggregate: 'Book' in context 'BookManagement' (remaining: 2)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Starting preprocessing for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Removing previous elements for fresh start in context 'BookManagement'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Preprocessing completed for aggregate 'Book'. Summary size: 278 chars"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Setting up DDL fields for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Set 14 DDL fields for aggregate 'Book'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Generating aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Executing generation for 'Book' with 7531 tokens"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Generated 3 actions for aggregate 'Book' (aggregates: 1, VOs: 0, enums: 2)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Starting postprocessing for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Processing 3 actions for aggregate 'Book'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Filtered to 3 valid actions for aggregate 'Book'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] All 14 DDL fields successfully included for 'Book'."), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Removing previous elements for 'Book' as this is not accumulated"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Successfully converted source references for 'Book'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Postprocessing completed successfully for aggregate 'Book'. Applied 3 actions to ES value"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Validating generation for aggregate 'Book' in context 'BookManagement'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Aggregate 'Book' generation completed successfully. Progress: 2/14"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Selecting next aggregate. Pending: 2, Completed: 1'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Selected next aggregate: 'Loan' in context 'LoanProcess' (remaining: 1)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Starting preprocessing for aggregate 'Loan' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Removing previous elements for fresh start in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Preprocessing completed for aggregate 'Loan'. Summary size: 1166 chars"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Setting up DDL fields for aggregate 'Loan' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Set 18 DDL fields for aggregate 'Loan'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Generating aggregate 'Loan' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Executing generation for 'Loan' with 8733 tokens"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Generated 4 actions for aggregate 'Loan' (aggregates: 1, VOs: 1, enums: 2)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Starting postprocessing for aggregate 'Loan' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Processing 4 actions for aggregate 'Loan'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Filtered to 4 valid actions for aggregate 'Loan'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='warning', message="[AGGREGATE_SUBGRAPH] DDL fields missing for 'Loan': ['loanPeriodDays']. Routing to fix."), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Starting assignment for 1 missing fields for aggregate 'Loan'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Generator proposed assignments for 1 parents and identified 0 invalid properties.'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Successfully processed all 1 fields (Assigned: 1, Invalid: 0).'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Starting postprocessing for aggregate 'Loan' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Processing 4 actions for aggregate 'Loan'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] All 18 DDL fields successfully included for 'Loan'."), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Removing previous elements for 'Loan' as this is not accumulated"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Successfully converted source references for 'Loan'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Postprocessing completed successfully for aggregate 'Loan'. Applied 4 actions to ES value"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Validating generation for aggregate 'Loan' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Aggregate 'Loan' generation completed successfully. Progress: 3/14"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Selecting next aggregate. Pending: 1, Completed: 2'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Selected next aggregate: 'Reservation' in context 'LoanProcess' (remaining: 0)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Starting preprocessing for aggregate 'Reservation' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Preprocessing completed for aggregate 'Reservation'. Summary size: 2370 chars"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Setting up DDL fields for aggregate 'Reservation' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Set 9 DDL fields for aggregate 'Reservation'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Generating aggregate 'Reservation' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Executing generation for 'Reservation' with 9081 tokens"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Generated 2 actions for aggregate 'Reservation' (aggregates: 1, VOs: 0, enums: 1)"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Starting postprocessing for aggregate 'Reservation' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Processing 2 actions for aggregate 'Reservation'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Filtered to 2 valid actions for aggregate 'Reservation'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] All 9 DDL fields successfully included for 'Reservation'."), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Successfully converted source references for 'Reservation'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Postprocessing completed successfully for aggregate 'Reservation'. Applied 2 actions to ES value"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Validating generation for aggregate 'Reservation' in context 'LoanProcess'"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[AGGREGATE_SUBGRAPH] Aggregate 'Reservation' generation completed successfully. Progress: 4/14"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Selecting next aggregate. Pending: 0, Completed: 3'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] All aggregate generations completed successfully. Total processed: 3'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[AGGREGATE_SUBGRAPH] Aggregate generation process completed successfully. Total processed: 3 aggregates'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[ROOT_GRAPH] Aggregate creation completed, proceeding to class ID generation'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Starting class ID generation process'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Starting class ID generation preparation'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Book' -> 'Loan' (via 'LoanReference')"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Book' -> 'Reservation' (via 'ReservationReference')"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Loan' -> 'Book' (via 'BookReference')"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message="[CLASS_ID_SUBGRAPH] Found reference: 'Reservation' -> 'Book' (via 'BookReference')"), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Discovered 4 aggregate references across all bounded contexts'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Queued class ID generation for references: LoanReference, BookReference (aggregate pair: Book <-> Loan)'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Queued class ID generation for references: ReservationReference, BookReference (aggregate pair: Book <-> Reservation)'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Preparation completed. Total class ID generation tasks: 2'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Selecting next class ID generation task. Pending: 2, Completed: 0'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Selected next class ID generation task for references: LoanReference, BookReference (remaining: 1)'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Starting preprocessing for class ID generation. References: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Preprocessing completed for references: LoanReference, BookReference. Summary size: 3011 chars'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Generating class ID actions for references: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Token usage for references LoanReference, BookReference: 4129/962429'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Executing class ID generation for references: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Generated 2 initial actions for references: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Filtered to 2 valid actions for references: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: LoanReference, BookReference. Final actions: 2'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Starting postprocessing for class ID generation. References: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Processing 2 actions for references: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Postprocessing completed successfully for references: LoanReference, BookReference. Applied 4 actions to ES value'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Validating class ID generation for references: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: LoanReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation task completed. Progress: 5/14'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Selecting next class ID generation task. Pending: 1, Completed: 1'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Selected next class ID generation task for references: ReservationReference, BookReference (remaining: 0)'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Starting preprocessing for class ID generation. References: ReservationReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Preprocessing completed for references: ReservationReference, BookReference. Summary size: 3349 chars'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Generating class ID actions for references: ReservationReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Token usage for references ReservationReference, BookReference: 4238/962429'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Executing class ID generation for references: ReservationReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Generated 1 initial actions for references: ReservationReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] No valid actions created for class ID generation. References: ReservationReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Validating class ID generation for references: ReservationReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation completed successfully for references: ReservationReference, BookReference'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation task completed. Progress: 6/14'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Selecting next class ID generation task. Pending: 0, Completed: 2'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] All class ID generation tasks completed successfully. Total processed: 2'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[CLASS_ID_SUBGRAPH] Class ID generation process completed successfully. Total processed: 2 reference groups'), LogModel(created_at='2025-08-20T18:05:59.122795', level='info', message='[ROOT_GRAPH] Class ID generation completed, proceeding to command actions')], totalProgressCount=14, currentProgressCount=6, lastCompletedRootGraphNode='create_class_id', lastCompletedSubGraphNode='complete'))